(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    781848,      15770]
NotebookOptionsPosition[    765004,      15493]
NotebookOutlinePosition[    765435,      15510]
CellTagsIndexPosition[    765392,      15507]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Solving the Euler-Lagrange Equations",
 FontFamily->"Times New Roman"]], "Title",
 CellChangeTimes->{{3.878907261109083*^9, 3.878907267994187*^9}, 
   3.878907309794145*^9, {3.8789077637589626`*^9, 3.8789077843597794`*^9}, {
   3.8789078311958547`*^9, 3.8789079010277715`*^9}, 3.8789080384192886`*^9, {
   3.879344334292286*^9, 3.879344356205041*^9}, 
   3.935329087042288*^9},ExpressionUUID->"900aa3e8-8ee9-4867-a010-\
b9395b3240f3"],

Cell[CellGroupData[{

Cell["Mathematical Analysis", "Chapter",
 CellChangeTimes->{{3.879344458017952*^9, 3.879344471332667*^9}, {
   3.879344501743786*^9, 3.879344590637912*^9}, 3.935329096611809*^9},
 FontFamily->
  "Times New Roman",ExpressionUUID->"2e6e19bb-3203-43f5-99a6-41e6f060227e"],

Cell[TextData[{
 StyleBox["The structure of the UAV (Unmanned Aerial Vehicle) is cross-type, \
where the motors are located at the tips of each arm and the coordinates \
coincide with their extensions.\n\n",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvQd4Fde1Npw4f8qXm+8+1zfxTXKvb+LcOI5/24nj64ILtsE2hN4RvUhI
iCIEiCYhQIBER1QhikTvvUpCSAIhJIGEGmqo995PP2fq987sc4ZBCIwBNbTf
RxzmzJmyZ2bNWu9ae+21/+Qwe9jUV370ox/N+wU+htkv6unmZu8x/N/wZaTr
vOnOrk6OfV3nOzk7uX3q8BOsHPjjH/3oNLaXlkUKCgoKCgoKCgoKCgoKCgoK
CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
CgoKCgoKCgoKCgoKCgoKCgoKCgoKCoqXAg2MYOLbuxEUFBQUFBQUbQs9JzJC
ezeCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKC
goKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKiZQjyn7JMQdFhITws
rhQUFBQUPxjQoWaWF0SB50yiwIgcVnEMb2AFnhU5nsO39m4iRReHbOrxwcl/
gsBLggrxFFiR56WfbERAkNGubaWgoKDoNCB6VRB5UQQBMIsWUAHWwmlZUWR4
WZvSaUQo2he89KcQAHwRGL1g1Ahmg0RRGavNp6afgoKC4oeCh0aFZuWN+IO/
bzJrDYyWFUSLRfatqFqlaF/IBIAEAWRh5ATeJPJm3mwSWIGzzXPDsiw4AMfR
iBUFBQXFU4LnRUbkLQKrFzht7v2cc5dPHTl9IiQ0SdPE4GeWM7d3Cym6NlQE
QKarFlj/svycoEuXT588H3zlWkNDI0w/z0uxKkoAKCgoKJ4aUJusyBpEoami
JG3jho3rtm6Yv9TLfsqS9LRSlhM5nm3vFlJ0bdgIgEwCWJE3ausqtm329fff
4+G+fNzYybm5ebD+xPRTAkBBQUHx9OBh4nmtwJSHBR2YbO90MTQi9FbcwUNX
G+otHC/wtAuAon2hEAAp/c8ostrE2Ot2dnZBoTeu34zfv+9oRUUViQDA+pvN
NGBFQUFB8XQQRJ7hRbaRNeUG+C0dOcohraCs3swYLALHS3qXU6VY8zLatbkU
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
WBoBoKCgIJBzghm5Q9/SVFEZcuFqfn6FFCg0M7qigvOHjkUl5pt5gecMjKnx
4vmL8Wn5OlZkeLOhJPXm+aNzXJdFpRRqBc4s6Mi4AZkAsNbUgsdACQWoY/VQ
lXD26+rqsrKyVqxYMW3aNFj2MWPG9O7d+6OPPoL+JPxBgU6nW7x48eDBg/ft
2we7f/jw4b1796ozBmkEgOKFQ5GuuLi47777bsSIEYsWLQJHhVm3t7e/d++e
shnhCSSVZdy4ccuXL1+7dq2rq+ucOXMg4QoBUAfBnrINeBGunLocGRHbYMCb
K7BNtfHXr5+5FNHICRxvFrnGtNuRhy6GVRnE0oL8q+dOLfFYutZ3V0WDUTL8
0uhBnuEpBaCgoJCyh3jpwywK5vLcggsnLldX6RioIobPj43dtGRFZEKe3K1u
NtVXnjx2pqC0gZW0hzHuXKD/ioXDhzpEJhVpRM4sakkuwJMJgHpONMWjr66u
hjqFEff29nZxcRkwYMCnn376Fxl//etf8fnHP/4RVl6Zdo1Aq9V6enqOGjUK
3AAatba2VhlF+Lwp1hQULUFNWfV6fVVVVXFxMaS3srLy8uXLTk5O8fHxygaE
5RYUFDg7O8+fPz8oKOjOnTs5OTn5+fkajUbJBHgGmM3mfbtPpqeVmSWDzjeV
F/qtXbfvZEgTL3Ag4XzjrciwoOhELSuaG+vyEm4vdvNY4LGutEbP8fLYHYG3
8JQBUFBQSN2BUgyANwqcoeh+1rF9J5saLPASeKMl6vhxf5+1BbVaE3SOUXc3
5tbFcyG19VKKvtlQG3V0y8ltq+fM9gq9k6MReYs06kjqGeAlAsC0SAAUtwgL
cPahDG/cuLFx48aJEyfCmfrmm2/gT02fPt3Ly2vbtm3gA7GxsdCo165dgw91
6NChRwnAggUL3nnnHeyI3YcPHw73auvWrTExMWVlZVCSbX8zOwmE7xuz+QTj
0KXthiLAeAUMBgPsfm5u7t27d0NDQxcvXgw3PzExsVmWC6jpoEGDunXr1q9f
v759+w4bNgx8wN3dfdOmTXv37g0ODk5NTW1oaHj6LgDAZDLt9DuVX6AxcdLw
nMLUpKVzF8RIgTgwb1NlSdrx06fu3C8ywsgzelNdlf/6bcu8tpfXGliOZPuy
NAmA4inxcDa3bcSp6jtFJ4YA153lLCaRM4qCMTMpwWvh4qKcYsbAZqekzp1i
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
hg3R0dFw1sjALghhXV0ddO/ixYu7dev22WefQQOTlAAyUItQU2Vcv+KywcbF
xsbOmjXL2dk5Ly+P8FjseOjQITAKSLhyanl3i8hqec5SWFR08/q1kIunQq6G
ng8Ku3g5JOjy5Zi4JJ2RFaUoAcsIvFEQTXLyH2c1OAx253m2I9fN6PAEgBE4
PW5tQ13l7dioixcvhoSEhlyNuHg59MKVsGs3YqoatQwnkTSG561kgOdA1KS4
v+TCMGBreDQW+Xp4m0QJMikoyS/2WuJ18MBBMmqPfO7ateujjz4aM2bMpk2b
bt++DXlTT4Wpdv8V6PX6devWvfvuuz179tyzZ09ubq4yCS82xi2F9Qc3AL1U
ilGLNhlr7fApKeA5b948aG9SxJUGbCl+KCgB6MqAVty/f3///v3v3LmjHhDd
SlDq9ZGeJrjk0JzTpk0j89Qrc7YqzSBF/95++224XY9WO1HcNLAImPuoqCg3
NzeQmddff33NmjWKVscnrm78+PGkyvGDIa4SAWjMzkn1XLp4yMDeA7/r/nG3
T7t/N/Cb7/p/1f1rl9nu8UlZolkvsHpWFPQyATBYGNkjBTEwirYLIVmLrXrf
ng0dmwDAhOtFQVdZlrt9y7rBg/p+/fVXn3T7/Msevb/75+Avew6wG+eUcO8+
YzGKnAEkQMdLXj/LWOSeG5GTozckH8As4M+aCMiyFokLcHzC7Tuzps9wX+R+
5swZqDhRlqWYmBjouvXr19vb23/yySdz584F68jPz4f8KMxT1T6BJPstXLjw
448/DgoKIusfvXvh4eHY5tq1a4QztBknJLLt5+eHh6uuBtAxxnhSdA5QAtCV
AQ8C+nDQoEFZWVlt1uOjKKi0tDS46qGhoWSatmbbEDJQX1/v4uLy1VdfXb58
ubCwsLq6WqfTwagVFBQkJCQEBwcfOHBg7dq1U6ZMGTp0KHyxw4cPk3F/0Oo4
glarBcPx9PTs3r07mclFqfkj8Exd6f2jhwIPHzmYmhSbGndz0+at1++kZOQU
ZGVmFZZV6RlBW1OSlX73fm5RnUk0kK5n+P5GLcdqS0vKUu9llpdXdNiJAzo4
AeBZo1FTdfnc0cP7diUl3ElMTDhw4MjFK6Fp9/PSsguyC0q1eqNFU12aFpuZ
kVZtYIzWQZoSTxQ5c115UWJaVkZBucbMGnnRzMHzBwEwcawZ/186e/avf/7z
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
QQlswhJ7G/RKy8rK8LZBlsAEKJ/SK1kYqBAARV6otARr7DwbaFu1atU///nP
L7/8Ej41ehnzo1nn4vWL7EASRowYsXXrVnlAvqUKPCYBoOkEVKvbt2+jV8L6
37x5U5DtmsHYSGxsrJWV1YcfftinTx+AADiMwUYhisVvIyJvcV42WUs+fsSs
mPBomkpOvxquFdJoUL4gi/NQgdBtKKqTk5OBStTX1wN1N2zYQGlw5JvJCo9O
GmE/fDoDIZ+fJh9xxkmQ2JCQEJj+Hj16rFy5Mj093cDNb1aNDd4PL+W43r9/
f9++fXv37u3i4pKbm8vSYLZSTtsXpioGB2D4ly5dWr16NZ4XXjwtjWTfUjSA
+fusQeVJ+EnwLRyNvXv3gksA9GBtDVRI/qqfyxPJy5FzEoDYggULmt0NEFSH
NgNqdqLjrwr/qAhSj+Cay60kH0kx+Mr4YkXeJOH0k+0pA/Dnn3+OngVIgW/C
xgJYDAGfNB9g+vTpO3bsAJAS2si35JbLrxIAuVHA7WD0LSwswIeBY4LM+vPS
TJ67d++C/3fr1u3dd989c+YMbXpu0G0VaWtigL3ywLVOthusnJTKj1tq2WZB
iaCemQAcbN++HRzAAMSIANjZ2WVlZUEza2pq2DbrvGzUWNCr5dPNI2WZfOR7
TeIYpj8+Ph4ktkuXLuhx0ORm0/gY8xBOnx+PTBs6F/rspEmTunbtamNjc/ny
ZZTMt5wZ+LUWAxUCczt58iTe3sCBA0Gf0tLSQANYplPmswgt2y86j3YHhVi6
dKmpqamzszP0wUAh6VU/hQLIWQdjs4J+qTU+ayVBI+7btw8uz4MHDwxKQIOC
18HBkT8Xc80eJwBrQAAM6sMuo/LlJ3mjvTWf6NkVeY2EQSU0qqSkxM/P76ef
fvrggw+GDRtGmwsLegVg/gtNy5k6dequXbvY3sHN5hL5VQJAJ8mOX79+3czM
DNwe1p9RDsJG9I4DBw706tXrnXfe6d+/f2BgIKtSs6xVkTYiDDnZRA40KFAX
+gBlA+2EzWKRXvrJYxovub1mYMVmh6LM8vJy2AX4VmvXrjX4LQiAp6dnhw4d
Bg8eDJUD/h88eBB+ZV5eHr5iXNcgTPEUYozA2dnZqA80ecyYMVBj2ry72SF+
9h442QodZo9QW1CIzp07wwieO3eO/Ed8yzLevGHbWTLDB+WhlRGQ4uJiEDm4
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
Y2M3bdpkZmYGAgkauW3bNlBEqA10jJgwNA1oD4frhx9+AEMgfDbwyAT9lOzE
xESw0IkTJ0KTXxoBwJnly5eDpeTn5wvKWu9nEwNmxfLxUj6ovLy8iIgIZ2dn
QMocSfDmgUjx8fHwKYAqjY0qrZSggv4JtCZIXB4EMCnNTDw528zqQGB8vRr2
//aKxXMddh0prJFmIOmEkJAwUAjaG13eEdifJSUlO3fuREMDMAFlbJ8I1l9e
3WtT5LUXwN2aNWsGDx5MO/O+aBgxIACTJ0/etWuXvb09ZSIygDjANUD7008/
7dmzJ5wseZyTeALNrKaFBoBo4LCTkxPKRGeBE9e/f/99+/bh4qKiokmTJkVH
RxtHStFtWeJeGbRyjU21129c2e26x8f3eH5+sa6x8kpMZNqd/AaOu5wQeWiv
837XwKs3MlXahsxbV86fPNFU9aD0/h3ruVa2a3c9aFA3ioMIapHiK6jcshiY
VDZZlP68fTvzwAE3j4MHUjNyNDV1d1PTb6Rllai49LTE4P1Oe3duP30pvbxW
nLPZUFmUmnjxavyFvIKivAfVVU06FS/k5uYtnr8AThOtDIWtP3/+PFwnLy8v
OFzk6R88eDAjI6OmpoaWBLJpAKyGOA8NfO+99xwdHcEHDMwECawD6CW0DhSU
EvK8HAIAWwDGu3r1aray4Pne7i0RXpYYn3kf8CyAJ1euXPH19YWnDwM9d+5c
tC/UgHLssAkeshGEh0gCh4K4g7g5GK/S1WftcphtNn156l2dWlVfX3hjwniT
9XtC7tcJvLTVaPSFi8uWLYPDIsjmoFKVcnJy9uzZ4+npeeTIkUuXLpGWyruJ
0uiKPKNA3wICAuC/xMTECC/ejzAgAOhWUHJUYPPmzYcPHwadrpGktLQUlHvl
ypW9e/cGOTE1NQU/EfQTXeS52kh4/Zgd+AxA3s/PDyD//fffL1iwAMwBnh3w
mW3p8ojwD0k7L5uzR+xdWk8mNKolSs+peG2dRsxGi85dI+ga4OGL+/7w6uiz
J9etsEmMOXcl7qyllYWn7/Fqta5J3CuIstQrDOBXxHiyk37sVasTIVQiUeJ6
QdGhkvKbNAhcNdAVL1mt4+pqKvwO7p0+YeSS+XNWr16zc59XUWWdVmS26nVr
14EQorQzZ87A4sPTt7S0HD9+/NKlS3GGhYN4/Ya/rD6MluAzNDT0ww8/7NCh
g62t7a1btyjLCmwubARMcGpqKm0TAGVG+bjgpREAmIyBAwf6+/vL3UZFnlTk
7YXGBUoEBgba2NhMnz593rx5sP47duwICgpKTk6urKykLSDl9peZY5ERiHtR
8PhHBEBcz8o1PsiKsTLtM2LSssMnr8WeCQ/et6H/gBH7Qy9Xi5gjLnUpLLy/
fPlySofCmhK2HsQS1cBXQGZQU3J2WPyTKq+4/4o8o0Cdrl271qVLFyDJS7id
AQGwtrYG066urgbZhmu2adMmGH3Y7ilTpkybNg0+Gq4B34Yd37lzJy3HFowm
FrIH0el3HEZ/QV/29vYeNmwY/L7g4OCpU6eiHOP6iAvOJOuPn8qQnxEA0QJJ
ef3FPYBhgJp4lZavE7MENYnz/NVamIHKjOTkKxfPn4kIOx99vqC0poET6sVt
gqRswAoBaFkMTD/JL6uZNGqNNCorrtWQVlVoxOQMYh5gXteAC2nopr6uOuZs
xCEPV29PDy8v78SklHodp5aUwnO/J9QJmmBnZ/fRRx+Zm5sfOnSItlOhCScs
iMpuLQiPzNWH1w8KAUMAowB3GwYXGuvh4QGPbN++fWCtsA6nTp0Clzh37hy0
9GUSAFQD6h0fH2+8dkyRxxcy6BC8SbgJsPuLFi0CEMHvjo6Obn3vyEeEf/iP
E7cMEyFDVFhefTXCf1S39rPXuJ2ITrh0+qjdrPE/D5h4IbmkVieBjIQQLi4u
UB6aawpDHxkZCdMfFhaGCty/f/9FPr0iiggwrPCy165d+3IWE3H6LYGAomz2
Cy/tuhIbGwukdXd39/X1vXTpUmFhIfn16IxDhw7Nzs7mZPsJNguwbDkhL63J
nTFjhpub29y5c7/99lv0KZTAODzt6oIOKHZYLcCf439ZtMWJzrvodtJonDRX
QNwECAZITA8o/imtU5f2qVdzGnVTbZWqqUbaG1gc9pNyAxK3eNGv840VXmoD
kX5xtPsy7QSklcIAHMEtJ/1fp27ENTyH9hLqGlUi7HKga+pjx8Jg9GGaAexL
lix5HDAnpWIpWcCNTUxMkpKS4O9nZWXB5sIlBJ2A3T9w4AB0NTU1lTZli4qK
srS0TEtLe3EEgNNvLSRII3eLFy9G3QoKCtj2WIo8hRBcAA3QvoCdM2fOgCJS
5gfWlI9X0C8EgFBDnALEqyK894zo1DHgwo06nbqmKM3Oynyy+eo7pSqVaPm1
OulSGHozM7PQ0FA4KTdv3tywYcOWLVtycnLkDo4iirwgAaTY2trC6QbbfAn6
JicAwEzKlyLo/UEW5CehWAHIwGeffQaHi1bLymNlBoUz7OWlKQTbtm0DB+jd
uzfozfz58+ExgV08ePBAp9/rjYYABH3mOVZHPQGgveepXNrfRyvtByylD5K6
sLSQQMz7y/FiClvat56jQhQC8AzCP7T4nLS9Ar19Xnq7mofrN0WwlUID4rCr
jhfHDHRi83B8VV39qchTk6dM+uabb2Ally1blpGR8ThgLs9iUVlZCb9swoQJ
FHri9DktQSSgQvLMLfgEzYAyv4QIAN0xLy+vf//+K1asoMRWSiKgpxZenwia
5vkL+ljiE79SGQEQxNYHdml0usYju7eZDx919lZeo7Y263rMkO4/7TwQXq/j
1dKmVlAgGktydHTs2rUrdBWoCF2FdglKHj9FXopA1eHLDBky5OVsKmocATAg
2+yYoW56enqfPn06deoEis6Gw1rpnmwGb0JCQq9evfr27QvAhK8Ex23w4MG4
Kc4/3PlFXAXAUyBONrXgFwIgHot+pk73kABwPJ2Xss4zeiD9Bn2eI0eVai+y
CqX7Pq3ICIAYUJGiAUQAtNwvFEvaiZmnuRzSnmic7k5uznrHjQMGD7RbtRKO
1TvvvAPqSH76r95UPvfby8vr448/njNnDq09kU8SeFhDWdp2OHFWVlYvNAIg
yNasnTx5sl27dvAZWdq3536vt0Roj1FeP/mfZtnp9PIEL1ZGAKQJRWKEn+Oa
Qtx32cw0v5ZXolM1+Lhsn2exMDGzQNwshBPHsDQ6LfhkfHy8n5/f0qVLDx48
WFFRwTIAUHbfF/jwiigiIVVycnLPnj2hhC85AgD3nHa/4mXJtOkyeRwgNTV1
0aJFAFiYb29vb0GWS63ZW7Dz6N1TpkxxdXWlMV+QbZj+hQsXDhs2DOWINFvs
sLxKZRBBfZQAoCMLGu1DZ18y9OIaf/XDQLQ05EfWSgUfVNDPBpYi1AoBeBbh
6D1Kxv/hsfiaOf26DU76SzT9+EdcEZbRZLyJmbnZydPhldWVkZGRMJQeHh7C
482Y4vVTsNAXoCTjx49ft24dkQdyCeUhAhopoF+dPn3a0tKS4gwvLgJAfQT1
sbW1HTFiBG3iqaR7fXZhDsXTe0CPDAHwDz0FXn31dOj6xQtOX89Mu5bivML+
dHjMAzV0qFGr01Y3crfvZFtYmM+cOTMmJqa6upr2kRRkg1DP8RkVUaRZoeFy
U1NTODu0mdQLFTkBgObLt79kLhXDWKIEKSkpCxYsiIiIcHNzAyYDbGHKH6d3
oEOBYNfX17OdtfEJjr1169Y+ffrs2LEjNzcftkOjEbf+lSXSNIgAgACo1IKG
7I9OdPNV4lx0cecZ6XtpFzop/i9NDhC0CgF4fsLi/Y8cP/yTo8iL+J7RrAcO
HBg6dPA6B/vsu1laTiRjaPerV68WFBQ8JpaS+oWHhw8dOtTZ2dnFxWXDhg3g
A8QuHlZItvkUMxxnz55F93mhBIBNWUR3ADnZtm0bqwbLm6HIU4g89mh88slL
o2WApKvaquK840cDD/gH+R70jY44q1VzwA6Vui42NjYk7NTZ82e9vb2uX78u
T0jYbH0UUeQFCVQO9hRY1717d0pl9kJvx6JbQUFBwEwQgGbdeTY5BwLEmzVr
Vnx8PEz55s2bgX5nzpzR6ffE5FpOgm1ALQT9SluUA1cRnGfx4iVXr16Tzj+k
HPqAKi8F8ejntOOf7hfPXrT2GkFm3am3cw8P9fvZ87xCAJ6HGI4Nyb/RacWW
y83NtbVdOW7cuAMHPGtqqqERolJwv6RybcUcy2fR47IrV67AuUZ3AG0A4XR0
dCQCYDBKJeiViqwwCADYbGpqqnwa6vPlAPQguB14Tt++fWE1DNYvKNIWxCCS
yUvTm6FLDx48oHynQLykpCRoi6WlZXp6OrCIrmQzoF5d3RV5SwWKd/ny5S5d
ugBbWo+uP7tQyTTxgGYe0vlmvRiC0Fu3btHGbaAN6D7Lly+Hg3bkyBGWQPuJ
KswqAN9w4sSJsBoXLlygMQL27Ar3bptiYFXJIMIUjho1Ck0Jr4rg1GBBX+sF
sk8Udfr06UGDBtnb21dWVoIVb926ddWqVSxBkDE4s1DV+fPnrayswJ/ZeJbw
ApZpo8CKiooJEybQHoWKsWiDwqw/m0tAC45wBlh39OjRnTt3QlEvXrwIVsDY
qdxVeZW1V+TtE9LYqqoqc3Pz6dOn0+6oL2hUkfks6BGHDx8G2NLSA7Yk3Lhu
+ElycvKcOXOAsYLk8peWlu7atWv48OHOzs4U3aWO9jh9h3lMdH1OTg4lQvTz
86OhXl6WT0DZY6WtCeXpFfTtCHMPGjlmzBhwQrlHTBc/jg6Tdw8pKSnx8vKi
DaegVGh6WNgtW7bMmjWLeGaztJDXj8ufOXMGKpqZmckCTY9ZgccXUkiQ1e+/
/97b29sgib0yDaAtC9SsuLgY1h/uxrZt2wC2bLmTfNOfxwQxRRR5jsJ8ltDQ
0B49egBIXxyYMA3HLaKion7++efc3NxW4IumPMH0w+VPT09nfjpOojfBcMPt
un37diujAAZiEDFQSeLi4jJs2LCgoCBK7U6jvUpPbLNCbY1mCg8P792797p1
64CuT9FejOmBUoIHdu7cGRyAGXpeSrYzduzYurq6lgpncwNAICdPngzmIJ9L
9txVCPcC1enTpw96jdz6K/MA25SwdRlsEZOjo+PmzZvj4+Pz8/Nramqa9foV
wFHklQiDLKAo7CwUlTZAf0HCtB0gZm1t7evrS452Sx4W5WOfOXMmqsfJNsuG
sU5MTISDNmHChMjISFqX/Zh1YN2TCAaeF089evToiIgIVgjNLnhuj63IMwsR
P9ITHERHR48aNQpOOgw0ucNyf0rQ58xpXaBdMTEx0K6JEyfigPJEsXzsQOzp
06dfuXJFaCGeTxrS0NDg4OCwYMECip4914d+5F5xcXEDBgzYsWMH2zqTWX/F
fLQdYSNQJSUllF9ozpw5hC20loTiTuxKplq0qPMV1lyRt1Ao/QV5vuQHNZ82
/5nFYLwVt/P39582bVork7RpJxeA8OHDh2koVu5hoZCqqqrVq1d369Zt586d
wOHWTTabysXCyJw+tSCgGxgOK5CUlKTY/TYrrOHQTH379oW6otHJ4ZK7VI85
OA7mEBYWBhYxderUnJwciv/QV6QnKNzW1pY23GGrAORCl6EyIKKBgYEvNIQL
VZ83b96QIUOqq6tZLyA+/ILuqMjjCBsuJGUgSgZQPX369IwZM/bv35+SkoK2
U3iaIm1TWEweEhsb+/333+/Zs4eFwY3znzxHycvLW7hw4ZIlSyiMz8kSAgiS
fQd/Xrp0KXCebQRgXHPYbj8/vymSnDp1CqDNQruMirNnNCiBXYnPoqKixYsX
T5o0KS0tTdD7Vs/9kRV5amGNCEQ1MzNbtGgR9IeXZYY0/gnlkaBjeVtDvRMT
E21sbEaPHr19+/bS0lJetriPCX4SExMzcuRIHx8fsAXj+YfgDLm5uVBgOzu7
5x43o2mx7BGOHTv26aefgmbIiYoir1agEjTvlG1ijoObN28CiEJCQpydnTMy
MpheKd69Im1NmImnjOJQZnt7e/hWtPue0MIi2ecl6D6ZmZlw8C0sLC5duoS7
UyACn4DTuLg4uGbTpk1rdh8fViuqWHJyMkB4wIABIAwok02Raj2jFy8T/Ak3
cPz48XgDimPVBoXaqLCwkLaLKikpofOttBQv2+KHTRQpLy8Hxf3555/htoeH
hzc1NQktgDON4YaGho4aNWrbtm2URJqCVzTcAKi3tLQEG0lNTX2+D2swmRAu
5OTJk01NTcvKygRlvLiNCekYCEBxcTGcEUCWh4cHfBZSLUY7eWXTRkXanrDR
KMJAUNb+/fs7ODiwC14c2tAd7927B6qMXgNAxn3d3Nzg8ltIAu8MVIQuM47B
sm5FUllZCaw2NzcfN27c1q1b4cjTUCmb828M8nI3n4zFhQsXxowZAzxvNuSr
yCsUUtTDhw8PHTr06tWr5AizYHizASJetmk7DuDpwy+bOXMmLOn+/fvBJeRR
2WbBmWx9VFSUtbU16Cj0Myws7PTp056enjjGGegqLf9/vgFelpeeUmEcOXKk
Z8+eoCtyvqrIKxcWgCoqKoJmglhGRkYCQwQJ3OTUVB6MUkSRtiPybS9oMGvt
2rXffvutfEbKCwIc5u/jRomJiSDP8LMcHR3xeejQIZyRW+FW5gnIIRFumpeX
14gRI4YMGRIcHJyfn08EgKXZbFbYz+FhLVu2DKgOn+v5Pagiz0fgVS1fvnzV
qlW0vJpONkvt2Fd00NjYGBMTM2PGjB49eqBx09PT5ZfJSzMQCovhICsrKyAg
wMnJafbs2SCZK1as2LJlC5gAvmWxhefr3xHDQbHXr19v37793Llz2SpIxZS0
EeGlzKK5ublgg3BhoA9sf2H5QCSL5ChxRUXamsiDjWRJ4dH0798fYMsy7r44
p4PFHzh9OoL79+/TWAA7ybWQV43Vjc3lI8wETmZkZLi6upqYmIwfP37Hjh2X
L1+mRQTGJbCJuPSMKOTo0aMDBw68d++eEq9rU4LWiY2NnTx5cmZmJms1+QQP
YxWFAufk5Jw6dQqkjtIFnDt3jpb1yVekco8m+pPfUf4VjtEpbt++Df4Aj6+m
poYtYHkRz0uFo0fMmjWrd+/e165dYzENRTNfoTA7TlBpb2+/f//+K1euQNMU
YqbIayjy/OpkEzW+Pt5wn+/evcvcq9cu6ogKw4gHBQWZmpq2a9fO0tLy2LFj
hYWFgmxBmWDEbXAcHR3dvXv3O3fuKKMAbUoAvIGBgWZmZmxnB2NhjA4cEi14
6NChoUOHdujQwcbGJiEh4TWym6CyUFE86fbt2zt16gTeYrBsXJFXJby0Nhkk
MCkpaevWrXZ2dmlpaWzv8lddO0UUeVJ5BE8knOGLigq7dOni4OBAGUdf3+AV
uiSMPvBz3bp1EyZMmDZtmouLS1RUVEpKCugBezoWtcMZd3d3XAYX71XXXRFD
OXLkyPTp02kDKeNBVRC2ioqKrKysiIiINWvWjBs3burUqXv37k1MTCwtLX0t
FJgGjtmasrCwMHDXzZs30xpYRdqCVFVVwZWYPHmyt7c39I3CpK+FdimiyK8K
mzLXu3dvuE5+fn44Bv68phrOQrh1dXV3795Fn4VdwHMNHz580aJFcK+Cg4Mv
X74MGxEbGxsZGWlvbw+rgQMFctugwNWytbV1cnK6du1aSUnJgwcP0KzgA6Bz
4HgeHh4bNmwwNTXt0aPHwoULT58+XV5ezgbNXwvHmQX5BWnWwcCBA6GN4KKv
UezizRY0DRyHTZs27du3D6ySDTwpkzMVeU2F/+X/D6cBcLyg1ogroBcsWNCt
WzeArfB6Bh6NV/OpVKqCggLYCziJu3btmjt37oQJE8aPHw+/EgejRo0CK4iP
j6ep16+q2oq0JFBCsDW02syZM+3s7IDDsPg2Njb4c/To0XDKli1b5uXldfXq
VYCzQWLA18KGos5NTU0028Hc3Hzw4MHZ2dlKApk2JWgjeAdsix8SeR4qRRR5
jURGALT0l3ik42mR/siRIwFEj7+jelsTXpYohuZ0ofMCYynQCj5QW1t79+5d
UIL79+83NDTQ7gD029c06PEGC43XoAVBA7y9vXfs2OHo6Oju7h4XF1dWVobz
tKjE4FcGeQLbuEBLq6uru3fv3rlz57CwsFbWOCjy8oXhiTyvlCDLUvWqK6iI
Ir8uv0xs5gUtL+ktr+V1aoHX4aya43X6a44fP96lSxf4WTCUBtreBkUehZN3
T8EoRtfssgJ5OQrqtk1hszVoDWl9fT1lVidMrqyszMrKqqmpYWvodI/u7djK
koGXL8ZBY1QSTwRuM97E9NSJkxpNE+pOk/55uZsp/YgT/+FBtILYf3FK98tc
XkGxRIoookgzIrdugAkNL6EirxF0KtAALQdAEWMBhJzwqlxdXb/77js3NzdW
AoC3bUbIaSIur98XRpBxcjYZgFLHKwN2b56gxXNzczdu3GhpaQmlvXTpksEW
z8Kje0m8cuFlySoFqVvB+nt5eXXs2PFuxm2tqgmcXNRYXlBLZl7Hc1pOim/w
Ys8F71EL6K9qQacBdRe7MAi9xN1ZNE8RRRRRhAktbSMCIHpJHC8ZcgCKStDW
8zoVUEOFy6SLCTmrqqrs7e0BSp6enjgmC9tmg11ybGf7cpJw0t5/NMaqbPb3
Rgra99ixY19++eUf/vCHbt26WVhYbN26NSoqirZhRdPLN/t71ZUVhY03oUrM
+tvY2IAWwODjbJNGjYpqOPytk/x7kACtoFGhhzbgW65JtPXiWU6KAPAUFxAk
HvBKn0wRRRRpc0JL4CsrKwXKaMELjVJOC4Fr0qlr83JuV1bVNkkcgAbKKdwK
u79p0ybgqoeHR+vZ9duC8PoEXPIJYLD4ZWVl/v7+x48fJw7QRtxARZ6XEN+D
evv5+f3zn//8j//4j//6r//67W9/+8UXXwwbNmzq1KkHDhxgmaXbAgEgJUSF
Ue3S0lJHR8cff/xx1apVxcXFcOq5pobi4tK6JrUY/xfH5nQczdTVNRVm3kzK
yqvQCSpeJY3jifaeI9efCICi2oooooiRwMs4c+ZMXFwcZVPRcnwTT6Hz+syk
hAVzLcOOhVc3acgtYR40L2W8XLt2LcUBmt2bry0IL9sgFZ8NDQ3A1czMTNh9
S0vLQYMG9e/fHx4iGyB+1fVV5HkKy88GJXdxcfnggw/+7d/+7d///d//QxJQ
gm3btuXm5lLwpy1keSKmCgKQnJxsYWHRvn17Jyen8vJyMcFBXfWV6At+AcHF
5TXiGB2H2kozc3Ta+qK72+0WzF/jlFJUyQnSNjRaQSNF7YjLKwRAEUUUIeEl
B0ESOBDcrdTU3a57km/eEi07p9NqNWppDgCva8jPTJk2ccLmrTsrG+D8C5y2
iec0Oq1OHCiQEKW6psZxs9MXX36xx9UNtrXNBgGA7UDRhISEDRs2jBs3rnPn
zu+//z5MACyCm5sbGxdWCMCbJ2TWwQTAV7ds2fKnP/3pP//zP//4xz++9957
P//888mTJ6G3bScCIFIRgT969Gj37t379et34cIFiZaDEjTmJl8/4Lr73MUr
jVodJw7xq3W8WGNeq9bVPdi/ccVoi0VXckvQQ9EztZw45K+W/klBAF4hAIoo
ogisv0bQaHgNp1MLcHrqa6Kjzkadja2oFWPggrq2vuJBZbVGnD3MN6grS7z3
eoYcj6qsVwFHGmryG6oKdA0qlUZo4MS5giqN+kFVmaOzY5cfO6xYsfx21m2K
XtKgKh3Lt2h54U+nX9knz8VRVVUVGBg4ZcqUDh06vPPOO/8uCVl/eIVs7OPl
1FCRVyg1NTUrVqz43e9+N3jwYPj+UImePXsuXLjw7NmzlCBIHgWST2uh4+fC
b+XLDVhsis7A+mfdybZf7/Bjp45WcyxvJF3TatXSgL74GR8ZeTL4WGFJpViA
TtVQW36/pFQrxvrRoauSz4Q5Hjyc9qCG59RNKm11fUNlbYOa4xpFMiDWnlfm
ACqiyFsvvDjJH6AD5GgShMbK+4WhR8Jy80o0IpJwZRmpAfs8T8ZlNUlxU01V
cURQaFJyWn1DfU35g+hwn3PHfZOi4+saVPWw/pwYQVDx2qraat8DB3v17jFq
zMhTp04BxxhgsrS6zS7Hfv5PJ92XliQwpAUbKS4u9vHxGTZs2Lvvvvub3/zm
//2//wdP0M7Orr6+nlGFNrIQTJEXKvn5+ebm5h9//DEU9d69e9AKExOTjh07
WlhYREZGlpaW0mWkrmyZwHMMbTGOys4QSYaKenp6Dh46pHP3bi6uu6uqK8VI
nTjQr+E5Ff75H/RLSc5o1IjTdOorisMCfQ74Bqp0nKBuElTVKbHn/SKiS1Xa
uoriS1dvHjt1Ojg46HJCQkm9So2CtJyyClARRRQRRDsPMFBzQp0g1ObdyQ7w
DaqsVjU0qQWNJic2dtuarReyymrFofOa+oq8sMOBeQXFRUX3vDx3VxWn5dy6
5LRyzT73gNIGXi1GALQagVPDu9DqYmKiTSeYwqXauXMn3Oq2YE9pYXhRUVFo
aOi0adN69eo1fPjwTz755Pe///28efNwXo7GbXb8QpHnJcRIMzMzJ06cGBQU
REtEoQa+vr6ULnjWrFkhISEZGRkPHjzg9bvssejQszNYeZnEUakCAQEBY8eO
7d69+5y51hfjYpu0Gi2nUWtUOh2IOS5T6bSN7u6BmdklanFZn+ZBbsb2TetD
T19UiX9qeVVd9Omzp+KvVdRURQb7+4edTL+dERF6eIn1HK+Qc9UoQFwU8Dze
oCKKKPK6i0gAVDqhhhdqsjMyvDwDysvrdDqtrqHuwkGfjcucUqq1tQKvU1fF
RIacOHaitKYuLT1l6UJLQVeqrs5fu2j5/AWrCio1jVpeq+NAADQgABrxsKCo
YMuWLV26dDEzM4uOjm5oaHh4Q/3+qi/h4dhO7jD9BQUF3t7eo0eP7tSpk5WV
1dmzZ11cXGD9AbZZWVlsaQABO80DfAk1VOQVCpnd7Ozs3Nxclg1ApVLB4h87
dmzGjBkdO3bs06fPokWL/Pz8bt26VVNTI0iGm+Jaz14BRjhRYHp6+uHDh0FK
27VrhzvGxsZWVldpQUt4rlHVwPE41NEQgEZd7+DslZRRotbygrY+8/I5y+lT
o29kNYn5urR3k5K8fcJu5RSW3b/nsNR6t5evSlNfVXDLdrblpNmrbhdX4zJF
tRVRRBFRxLVDwJZ6XqhPT7rhsHJd8vWUyoqKpPjYlWYz50yxOpeSU1JbcyUx
xsnR4dKN5DpOqGtqyMu7U/cgIzs5Zs3CpXv2+RfXatXiMiQx1UiTVgV8AV6p
terGxsbg4OB+/fr9/PPPtra2cXFxRANejn9NHn1TUxPg3cPDY8KECWAjcOvC
w8NRDdRt5syZHTp0uHTpEkH6L6/k0UWCirypwrL/kUEnDkCrAHAMc3/58mVn
Z2cTE5Nu3boNHToUOnz06NG0tLTKyspnT3VFM1JSUlJCQkJWr149cuTIH374
Ye7cucSWRW4gpvcR//ECRxEAKYGPRq2qmzzH4cDhc/fv1+Reu+RsY92nR1dX
n7CC0tr06zddN2/zCTpXp9Y1VBSGersdj75Y11hafz/Nfo7l5Nn2GSX1D1cG
KqKIIopQxl9dk8CpCtNTl1hYTDUZb2VhZTZ5sqOd3UIrqzETJ85eMH/K9Glu
Hh4lNTXiXGJOp+W5Y/67dzuttF+4LOVWHoy6WppZrBGzk3CCNDOJBhqBk3l5
eXv3/v/27sUnquyOA/hfhi7xSUAW1KoUUlCEuqy62hAfkVWspdYEDC5YWkFS
DIIgSkJFN8LIDhSlG6lrDBGwrCOCA8MMzDCv+777O+cwx8sAyW7VtNbvJ2aY
DHfuGHLm/H7n/ZeMjIyUlJTS0tKhoSE52i5nPf38gCvn58vWk3PGvlzAxeZQ
jY9T1XrmzBn66PXr15eUlFCriqpc8a5gMEhZwYMHD2Tvq/Mj3uufGD4CzlIk
C5iiKFRWfT4f5a51dXWUQ1JB2rRpU2Fh4fnz569fv+5yucbGxgKBgNw8Uw4k
rSycNv86+P3+iYkJt9t97do1aumnp6dTdrFnz56Kiorh4eHZ2VnZ9WTyNr+x
tFTH5HFbY/dQIwe+KMnM+lXOr4sLf1P0x/KyK3UXP9+RlZdXWJBbVP71ubGX
rzX2RYzrEZ+qRdWI78lQX1HBvis3vvWrZtyyNB1dAABg6xqb0s+mAuiaNj9z
v735q98Wl3x5+G/XW31zMw8Hew4dKs7PL6irb5z2B3SLYmXcNFTdMEeHe9zd
N86f+Lq+oe31vKKYzgSAb0xuGc6pd9PT0zU1NVR/btiwoby8vKury+PxhMNh
qhLFxjs2D9/yYNakGtVybNIrswX5KxHBxdJ+uu2dO3foI6i6Tk1N3bp166lT
pwYHB0XjzuaVsMU3MaZ6W8R9RHxYlTPVpExgcXGRMoFLly4VFRVRuaLCnJaW
tmPHjn379p09e/bq1avt7e2dnZ13797t7e2lhnxPTw/lnPQWeoXCfWVl5YkT
J+ji7du3b968md6+c+fOCxcu0AVidT+VXpkS8wRilQTApFzdUp897qmt+sOh
I2UXL7d6pryRxen6y38q/ep3td80jr6YNNn+PwbrPIgHLD3oef6vyzXfXPxz
o8cfDvE9AQAAWMg11KWtwxXF1iJWfCHo9876/fPxuGIbih4OLszMzvqiMYWF
XnPR0he8P44N9P/DXPToUW9LXUN6Rk73d8OrJACOqcbicD2KuZOTk7W1tVTv
UQVIVSi1gJqbm0dGRuSg6qonCskmVdKvRPSn93q93qdPn1L1e/LkyczMzI0b
N1KTitr+9+/ff/PmjdjUSMR925E2yP+Y8xUAQZYHnZOzRKg4LSwsvHr1amho
iMI95QPHjx/Py8vbtm3b51xmQnZ2dlZWlnhOr1Ox37t377Fjx6qqqm7evElJ
qc/no7xCzjt1dmStlQDoWpR9z6xgLDI/H4oGY6bK3h7V1MBCYD4SVgyLL/03
+eldRtj/arS7o/lWx83pQNDjD80rfCABR1kBAKvlTIP1NJqsutDDthmxLIWe
KbYVY4uKdc1QLI1NG2Yz+4xFS5t3dbZ/WVRs67Om6m+70piWvufbgSdhNiN5
WQJgyWrM0REqGu/BYLCrq6usrGz37t0pKSmUCRw+fJhqxaampr6+vmfPnk1N
TYVCITFSH4/H6Qk1vqiqDHNU/Y6Pj/f393d0dFRXV1MWkZOTs2XLlnXr1lE1
e/r0abo5pQRyyaFo+IvuBRnu7RU5BhIAcLKWrwaVhVlET1GQ5ApTKtKjo6OP
Hj2iYkkNf2ryUyGk8tnS0tLa2nrv3r3Hjx9TmRR7+4tyaCfOL05Kbt/mtzz6
OxMAk0V7hW0FYETpUTX4sVz8zC5bjxmsi0wcCyj6yvTQ7OStpr/eaKqfePHi
n09G6ls6fYsR7AEAAIJmWIplxOyYzo75jesqtUeiqh1T2QaivAFC1RE//09n
i5ANS4v+0O++UH526t/f/zB471zpyd+fq56YCWt2cg+AMwEwE8et2omaUzS9
qUocGBioqakpLi7etWsXtZjS0tKo/Z6RkUExnbKCI0eOHD16lB4PHjy4f//+
vVxubi5dkJqaSm0ualUdOHCgoqKisbHR5XJ5PB65lZ/4OLnGSh7/R/mArL3F
sYAI/bAqUUjE2hBZWuzlewFZjiPgteVESZNlzBnrnSmo83FZyrGiB4AKr6HH
2SiAQUWandWlsLycfbimsu065DgXWQwGGi5XZ2/9bHd2RkFBfvau3HNVtb5Q
VDWR6wIAw/YWsa24rWi2qpligrCuWBHNVnidxo8Qj7McQDPtGKuHLD0a84yN
D33X7eq+1fv3u96ZIP1e0UWDhTdBeE3GNibnUV48rvxoMawvRuGpgf/8+fOH
Dx/evn27oaGBAjpF/Ly8vPz8fIr49CieFxYWUqpAiUFlZWVbW5vb7X758mUs
FhM3lA00Z0tNcmYj9hqHrX+IvzB87JxDTqLwJCWNYhxqreMDknoSZLh3npll
Jc7glsVyaVEqz6sTZ/ixZFZVInxlwNsJtDab8qrxWy3b5V9T4uMjT4fcvYNu
l6u3t7ev/8XkTEy3TGxzAQAOlqhmlmoP5/Oky5ZQRA/450LBBV3VLP7m9xs9
KSsIhUKvuampKa/XOzc3FwgE5rlwOIxgDZ8qS+zoby09XzrY9+2JHomLOD4V
kB8TZCbOBHReBgDw7j5Qp+KqQ/POTlSAT1Ai6lssvrNuvMQr9tvMgP80E/+c
ab2FBAAA/gPO4csk7+XmoudTDpsKSROl5JXv/okAHyNNnO1r8r282XF/hi47
Avhk2zV78ZZexncHAH4xMXD5IVrfcox+Lc58YK15BQCfAoXvCcjCOAv8upGY
spuI+pqVGCZY/kU1nX0CAADvImku0zveSk7SWznVKnmJ9P/A6UIA/y0K7wSw
xbg+SwBUzRZfHpkAmJadNJvHRAIAAADwUbOWdfhbVvLu/ojvAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAPD/7CcwFD08
     "], {{0, 237.40870419366595`}, {486.9373722650866, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{100.9904, 100.9904},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{486.9373722650866, 237.40870419366595`},
   PlotRange->{{0, 486.9373722650866}, {0, 237.40870419366595`}}]], "Input",
  ExpressionUUID->"405f2257-3768-4215-8fa9-cecad5608711"],
 StyleBox["\n\tFig 1. Marcos de referencia y sistemas de fuerzas del \
quadrotor\n\n\nIt is defined as a ",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "b"], TraditionalForm]],ExpressionUUID->
  "79aa6e34-f84f-4544-ad9d-f255e534b404"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "b"], TraditionalForm]],ExpressionUUID->
  "0f1ac62c-1e1c-494c-ad48-062aab011f29"],
 " y ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "b"], TraditionalForm]],ExpressionUUID->
  "fc1522fa-75ba-4ddc-9b9e-be2254f76dcf"],
 " , as the fixed coordinate system of the",
 StyleBox[" VANT, where ",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "b"], TraditionalForm]],
  FontFamily->"Times New Roman",ExpressionUUID->
  "bae92b95-53cf-49ee-88b0-08aff0c13de0"],
 StyleBox[" It is the direction in which the vehicle moves forward. The \
inertial coordinate system is described by the x,y,z axes which are \
considered fixed with respect to the ground.\n\nThe aerodynamic thrust due to \
the rotation of the propellers in the viscous fluid (air). Since the motors \
are considered to be aligned, then this force is en ",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   OverscriptBox["z", "^"], TraditionalForm]],ExpressionUUID->
  "836ae039-c743-440b-9698-1bcd86db9cda"],
 " ",
 StyleBox["\n",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["f", "TI"], 
          StyleBox["i", "TI"]], "\[LongEqual]", 
         StyleBox["K", "TI"], "\[CenterDot]", 
         SubsuperscriptBox["\[Omega]", 
          StyleBox["i", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "$f_i=K \\cdot \\omega_i^2$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "647cd8a0-7552-479a-9ceb-1d6fae0e9282"],
 StyleBox[" \n\nThe total thrust is given by the following equation\n",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["f", "TI"], "\[LongEqual]", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["i", "TI"], "\[LongEqual]", "1"}], "4", 
          LimitsPositioning -> True], 
         SubscriptBox[
          StyleBox["f", "TI"], 
          StyleBox["i", "TI"]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["k", "TI"], 
          StyleBox["t", "TI"]], "\[CenterDot]", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["i", "TI"], "\[LongEqual]", "1"}], "4", 
          LimitsPositioning -> True], 
         SubsuperscriptBox["\[Omega]", 
          StyleBox["i", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "$f=\\sum_{i=1}^4 f_i=k_t \\cdot \\sum_{i=1}^4 \\omega_i^2$", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e1bcedbc-af2f-4fa0-89d1-49d3eb416cc3"],
 "\n\nWhen the propellers rotate, they are subjected to frictional stress, \
which occurs between the air and their movement. This generates a torque in \
the opposite direction to the direction of rotation of the rotors, which is \
described with this expression:",
 StyleBox["\n",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Tau]", 
          RowBox[{
            StyleBox["M", "TI"], 
            StyleBox["i", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["K", "TI"], 
          StyleBox["d", "TI"]], "\[CenterDot]", 
         SuperscriptBox["\[Omega]", "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "$\\tau_{M i}=K_d \\cdot \\omega^2$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5bcf7869-d7bc-47e3-b7da-8b2384db19e2"],
 "\n\nThe Kd coefficient has a value greater than zero and depends on the \
density of the air, radius and the shape of the propeller. The total moment \
is proportional to the thrust generated by each rotor and is generated by the \
imbalance of the set of forces f_2 and f_4 with f_1 and f_3.  This movement \
is possible since pair rotors 2 and 4 rotate clockwise, and rotors 1 and 3 \
counterclockwise, the torque generated by aerodynamic drag is denoted by",
 StyleBox[": \n  ",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Tau]", "\[Psi]"], "\[LongEqual]", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["i", "TI"], "\[LongEqual]", "1"}], "4", 
          LimitsPositioning -> True], 
         SubscriptBox["\[Tau]", 
          RowBox[{
            StyleBox["M", "TI"], 
            StyleBox["i", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["K", "TI"], 
          StyleBox["d", "TI"]], "\[CenterDot]", 
         RowBox[{"(", 
           RowBox[{"-", 
             SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "2", "2"], "-", 
             SubsuperscriptBox["\[Omega]", "3", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "4", "2"]}], ")"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "$\\tau_\\psi=\\sum_{i=1}^4 \\tau_{M i}=K_d \
\\cdot\\left(-\\omega_1^2+\\omega_2^2-\\omega_3^2+\\omega_4^2\\right)$", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "550e6196-bfa3-4f2f-9f9c-2ca136ef5b0a"],
 StyleBox["\n  \nThe corresponding moments in the direction of the body frame \
angles mentioned above are denoted by the following vector, where l is the \
distance between the rotor and the center of mass\n  ",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnXlczdn/+D+/+b7b3KKbSkkJTbZEthg7WcJk7EyWMWisjbGUxMguQomY
Qcoyw2QZSyJKIhXZQraRVu23uvvyvrffvRGVu7zf995zu7qv5x/z+OjT7b7e
y/N9znmd1/ucNj//OsHrm//9738rDMX/mTDHd8jy5XP8JpqK/zHZe8XCX7zn
z3P3Xjn/l/nL+/z8f+If3pL81v/73/8k/7sKAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAHQeei3y8/Nr/5POaujgdA02XTaihg4OaDzMdDClWn/k
m2++sf6MbV+f+PKGDk+XqExcO6C1tTTMTNtNP1MA3gNqYnxL6xGbTkVXExAQ
EP2ZK/GPaYKGDk+XEJQ/vXkl+ktOb3G3afl9FFgPqIvxNm1mXy3Bq+HxeHht
hA0dnK4hxKVRen2egw1YD6gPsfU/Xac1dBSAHMrjwXpArYD1Wg9YD6gZsF7r
AesBNQPWaz1gPaBmwHqtB6xHjJwqCcQlKw1VoAHWaz1gPVou1q5ZqQPikpWG
K9AA67UesB4tF2vXrNQBcclKwxVogPVaD1iPlou1a1bqgbhkpaEKNMB6rQes
R8tFbXMA/QVvqCMW8jlsXbyNhSwOn+Rxg/VoAes1BCc3Yf/voQmlunYj4/lX
ggIOpxbxyXwIrEcLWE8c5UPCS+8GTx80KfB2pe7dx3jxVf+xQ+YeflxB/NjB
erSA9XIR8nlcLofNYjHptCIaV7lMBz/nwm8D+8469ESZCUkhn8vhSmCS7yij
g1RUQlry7om9R6y/UUz0/IH1aAHr5YCXPjwTsn7FvHGDerRv1dpt5wNlKhj4
76IW9XSafvgFm/RHRfzKd4nHt/mvXrfed9bIkfPDkiq14KVAZaJiPNgzttOA
1TEFxOIH69EC1ssDF7dl9NcnprZtokdx9rlJJ/9lwvfnl7q0+M5fidIHXsHt
4OlukzbH5rC45fe2D7Js6uj1b1FDi6BkVMLCC95drAf4xxE6D2A9WsB6ReB5
4eOs9AwdF0crcZbYaUHuLSxG731GKplV/clnR2Y4feuxK6W6IRUUJgT7+IRe
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
     "], {{0, 137.5972369650977}, {240.9733994518291, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{100.9904, 100.9904},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{240.9733994518291, 137.5972369650977},
   PlotRange->{{0, 240.9733994518291}, {0, 137.5972369650977}}]], "Input",
  ExpressionUUID->"b82a191e-b960-4f24-b911-6321cf132dee"],
 "\n  \nThe coordinates are designated:",
 StyleBox["  \n  ",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 106.22791869326194`}, {205.32644687019757`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{100.9904, 100.9904},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{205.32644687019757`, 106.22791869326194`},
   PlotRange->{{0, 205.32644687019757`}, {0, 106.22791869326194`}}]], "Input",
  ExpressionUUID->"994a15f0-d688-42c1-9b9c-ccf3ee949619"],
 StyleBox["\n  \nThe complete rotation matrix of the body\[CloseCurlyQuote]s \
reference frame with respect to the fixed reference frame known as direct \
cosine matrix: \n",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["R", "TI"], 
         RowBox[{"(", 
           RowBox[{"\[Phi]", ",", "\[Theta]", ",", "\[Psi]"}], ")"}], 
         "\[LongEqual]", 
         StyleBox["R", "TI"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["z", "TI"], ",", "\[Psi]"}], ")"}], "\[CenterDot]", 
         StyleBox["R", "TI"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["y", "TI"], ",", "\[Theta]"}], ")"}], "\[CenterDot]", 
         StyleBox["R", "TI"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], ",", "\[Phi]"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "$R(\\phi, \\theta, \\psi)=R(z, \\psi) \\cdot R(y, \\theta) \\cdot R(x, \
\\phi)$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f6210cd9-d33c-476a-836f-ac4720c72604"],
 StyleBox["\n\n",
  FontFamily->"Times New Roman"],
 "\n\n",
 StyleBox["\n",
  FontFamily->"Times New Roman"]
}], "Text",
 CellChangeTimes->{{3.8793445983235517`*^9, 3.87934484570881*^9}, {
   3.879344962289379*^9, 3.879344969276401*^9}, {3.879345033598135*^9, 
   3.879345106394839*^9}, {3.879345145287788*^9, 3.8793452562411766`*^9}, {
   3.879345365597604*^9, 3.879345376146269*^9}, {3.879345540070199*^9, 
   3.879345542552127*^9}, {3.8793460572534657`*^9, 3.879346081671965*^9}, {
   3.879346142625805*^9, 3.87934617936546*^9}, 3.8793462135794573`*^9, {
   3.8793464018859177`*^9, 3.8793465023354316`*^9}, {3.8793468552270823`*^9, 
   3.879346903975869*^9}, {3.8793470447716465`*^9, 3.879347212097186*^9}, {
   3.8793511887518787`*^9, 3.879351214577056*^9}, {3.879351300032957*^9, 
   3.8793516385692177`*^9}, {3.879351691912818*^9, 3.8793517121045156`*^9}, {
   3.879351800499575*^9, 3.8793518729584465`*^9}, {3.879351943757785*^9, 
   3.879351958366193*^9}, {3.8793520320719833`*^9, 3.879352033465203*^9}, {
   3.879352304331193*^9, 3.879352367936195*^9}, {3.879352409915643*^9, 
   3.879352529816221*^9}, {3.879352593544967*^9, 3.879352627564964*^9}, 
   3.921863594110344*^9, {3.935329106401417*^9, 3.9353292454999485`*^9}, 
   3.9353293288255043`*^9},ExpressionUUID->"24288c47-4581-46ad-88a9-\
e5b47a072092"],

Cell[CellGroupData[{

Cell["Kinematics", "Section",
 CellChangeTimes->{{3.9218372759053326`*^9, 3.9218372827460537`*^9}, 
   3.935329338554062*^9},ExpressionUUID->"7a4bd0fa-8c88-7341-8e19-\
adfa1a7d2ed3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.921153623056728*^9, 3.92115362596377*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4901e55b-98b5-2641-9800-74a7161d0677"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rphi11", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rphi12", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rphi13", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rphi21", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rphi22", "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rphi23", "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rphi31", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rphi32", "=", 
   RowBox[{"-", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rphi33", "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Rphid", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Rphi11", ",", "Rphi12", ",", "Rphi13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Rphi21", ",", "Rphi22", ",", "Rphi23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Rphi31", ",", "Rphi32", ",", "Rphi33"}], "}"}]}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.9217545034599953`*^9, 3.9217547397083225`*^9}, {
  3.921756258135351*^9, 3.92175626274366*^9}, {3.921834478599882*^9, 
  3.921834501416901*^9}, {3.9218468371645527`*^9, 3.921846888962076*^9}, {
  3.921852840788881*^9, 3.9218528582265244`*^9}, {3.921852899111164*^9, 
  3.921852962076927*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b36a0c8c-0963-df4d-a3e2-d940fae5e4fc"],

Cell[CellGroupData[{

Cell[BoxData["Rphid"], "Input",
 CellChangeTimes->{{3.921754746218416*^9, 3.92175474682725*^9}, {
  3.9218468916651087`*^9, 3.921846892048488*^9}, {3.9218529286786146`*^9, 
  3.9218529288924217`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"2045cb64-02c0-f646-bb4a-9a63cd6510a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.921754747389239*^9, 3.921756268220944*^9, 
  3.921834545200506*^9, 3.921852968441299*^9, 3.9220247069458237`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"eb020673-cfed-a64a-82fe-e85f762b7e79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "Rphid", "]"}]], "Input",
 CellChangeTimes->{{3.921834558426943*^9, 3.921834563813757*^9}},
 NumberMarks->False,
 CellLabel->"In[13]:=",ExpressionUUID->"c6fb2606-5db9-c844-9a67-2ffaed5fd6ff"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]},
     {"0", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9217562843657017`*^9, 3.921834566168827*^9, 
  3.9218529723291445`*^9, 3.922024706972784*^9},
 CellLabel->
  "Out[13]//MatrixForm=",ExpressionUUID->"867abf2b-2cd2-0b40-8f25-\
bd2f5e6a8fc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rphidt", "=", 
  RowBox[{"Transpose", "[", "Rphid", "]"}]}]], "Input",
 CellChangeTimes->{{3.921754794064739*^9, 3.921754808956517*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f926d46d-197e-c445-af37-fb5b6adb92e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9217548110378056`*^9, 3.921756278970196*^9, 
  3.9218529768939886`*^9, 3.9220247070030327`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6475bb2d-f518-9048-9021-efc3063215dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RphiI", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Rphid", ".", "Rphidt"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9217548143873005`*^9, 3.9217548515161552`*^9}, {
  3.9217552223950863`*^9, 3.9217552283308525`*^9}, {3.921755848784134*^9, 
  3.9217558505356865`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"a4ee38e4-1596-f64b-939d-181637032827"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.921754828468611*^9, 3.921754852328684*^9}, 
   3.9217552299809837`*^9, 3.921755851561793*^9, 3.921756290717963*^9, 
   3.921852980090687*^9, 3.922024707034994*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"cd253614-c8a6-a04d-86cf-c66de48bbbd5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rtheta11", "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rtheta12", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rtheta13", " ", "=", 
   RowBox[{"-", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rtheta21", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rtheta22", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rtheta23", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rtheta31", "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rtheta32", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rtheta33", "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Rthetad", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Rtheta11", ",", "Rtheta12", ",", "Rtheta13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Rtheta21", ",", "Rtheta22", ",", "Rtheta23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Rtheta31", ",", "Rtheta32", ",", "Rtheta33"}], "}"}]}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.921755279951987*^9, 3.921755378746971*^9}, {
  3.921755422826149*^9, 3.9217554515461807`*^9}, {3.921756250663071*^9, 
  3.9217562550146637`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ff4383ea-a192-664b-adee-31a6a222f597"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "Rthetad", "]"}]], "Input",
 CellChangeTimes->{{3.9217554025061913`*^9, 3.921755407193226*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"db4b4d1c-bacf-0d44-93d5-0313ff06ab45"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "0", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]},
     {"0", "1", "0"},
     {
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "0", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.921755390536934*^9, 3.92175540775448*^9}, 
   3.921755455986173*^9, 3.921756296201763*^9, 3.922024707078045*^9},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"9d99a223-0f08-9a44-844b-\
0b0bc68433da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rthetadt", "=", 
  RowBox[{"Transpose", "[", "Rthetad", "]"}]}]], "Input",
 CellChangeTimes->{{3.92175547525782*^9, 3.921755482553295*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"1b98b4f7-d535-e349-9b95-f22379cd4b9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ",", "0", ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ",", "0", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.921755483674505*^9, 3.921756299513786*^9, 
  3.921834587933359*^9, 3.9220247071105137`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"16ae95f4-71f7-0a43-975c-8c37fed8f178"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RthetaI", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Rthetad", ".", "Rthetadt"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.921755494009357*^9, 3.921755502360737*^9}, {
  3.9217557062167397`*^9, 3.921755708104889*^9}, {3.921755836952245*^9, 
  3.921755838904276*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"c8e58423-a038-2b4e-8df9-aac90c6831ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9217555035646133`*^9, 3.921755712780607*^9, 
  3.921755840347574*^9, 3.92175630326437*^9, 3.9218345908752117`*^9, 
  3.922024707139515*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"93876675-5c9b-ca45-a037-1de1acf47d45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "RthetaI", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[29]:=",ExpressionUUID->"cebec508-258b-bd4e-b6b5-69b9cf091221"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0"},
     {"0", "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9217563180431*^9, 3.9220247071495132`*^9},
 CellLabel->
  "Out[29]//MatrixForm=",ExpressionUUID->"bd231f8b-9e50-9841-84cd-\
3030fe774946"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Rpsi11", "=", 
  RowBox[{"Cos", "[", 
   RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rpsi12", "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rpsi13", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rpsi21", "=", 
   RowBox[{"-", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rpsi22", "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rpsi23", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rpsi31", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rpsi32", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rpsi33", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Rpsid", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Rpsi11", ",", "Rpsi12", ",", "Rpsi13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Rpsi21", ",", "Rpsi22", ",", "Rpsi23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Rpsi31", ",", "Rpsi32", ",", "Rpsi33"}], "}"}]}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.9217555383162785`*^9, 3.921755672666609*^9}, {
   3.921756239400606*^9, 3.921756247990166*^9}, 3.921834470356993*^9, {
   3.921834507107767*^9, 3.921834515997294*^9}, {3.92184690423089*^9, 
   3.921846935851303*^9}, {3.92185286282959*^9, 3.921852869270717*^9}, {
   3.921852985416055*^9, 3.9218530157524376`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"2e347aab-de18-f04b-9eba-7d339dc2cdf0"],

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.9218345947110634`*^9, 3.921847099801859*^9, 
  3.921853019429588*^9, 3.922024707180599*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"23e4bcd8-ca25-8945-8048-1f64b0da2f9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "Rpsid", "]"}]], "Input",
 CellChangeTimes->{{3.921755649439897*^9, 3.921755656664772*^9}, {
  3.921847092926021*^9, 3.921847093581266*^9}, {3.921853026751072*^9, 
  3.9218530269226413`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"2d704751-8543-6245-802a-19c298638611"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], "0"},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.921755657671238*^9, 3.921755677187042*^9}, 
   3.9217563228755608`*^9, {3.921847094131222*^9, 3.92184710381534*^9}, 
   3.9218530273343506`*^9, 3.9220247072111607`*^9},
 CellLabel->
  "Out[40]//MatrixForm=",ExpressionUUID->"08781090-f086-ea49-8bfb-\
f62cf515908b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rpsidt", "=", 
  RowBox[{"Transpose", "[", "Rpsid", "]"}]}]], "Input",
 CellChangeTimes->{{3.921755685511677*^9, 3.921755692809711*^9}, {
  3.921847294257534*^9, 3.9218472995318527`*^9}, {3.9218530323999557`*^9, 
  3.9218530369130087`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"22b6a406-9351-4541-bd9b-d83344262eb7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9217556951382675`*^9, 3.921756325674087*^9, 
  3.921834600780628*^9, 3.9218473141743965`*^9, 3.9218530374875336`*^9, 
  3.922024707242119*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"e27bc3d7-b3c2-7a49-9c1d-1c9415af03b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RphiI", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Rphid", ".", "Rphidt"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.921755719816633*^9, 3.921755732649709*^9}, {
  3.92175581167223*^9, 3.9217558184397926`*^9}, {3.9218473076270447`*^9, 
  3.92184731219771*^9}, {3.9218530416856155`*^9, 3.9218530538465023`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"2e74c576-7b1d-5a46-89fe-54e5cb16bcaf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9217557338574944`*^9, {3.9217558135847397`*^9, 3.9217558213100967`*^9}, 
   3.921756328456747*^9, 3.921834603067821*^9, 3.921847319498922*^9, {
   3.9218530422665462`*^9, 3.921853054579103*^9}, 3.9220247072741623`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"9a787ed4-fd71-ca40-bdc5-ee8e03a501d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RI1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"RphiI", ".", "RthetaI"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9217557415342274`*^9, 3.921755798745926*^9}, {
   3.9217558720416183`*^9, 3.921755873176071*^9}, 3.921756035079628*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"4232f0e9-fb20-1845-8164-2e0ebc512ba7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9217557732318*^9, 3.9217558766089973`*^9}, 
   3.9217560364404182`*^9, 3.921756330536739*^9, 3.9218346057246113`*^9, 
   3.922024707309683*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"a9e2fcfa-643b-c447-b87a-25cab3062e3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RI", "=", 
  RowBox[{"RI1", ".", "RpsiI"}]}]], "Input",
 CellChangeTimes->{{3.921756039485466*^9, 3.921756054919428*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"1456dc9f-5d81-3c4c-8f16-9306a5e56f34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ".", 
  "RpsiI"}]], "Output",
 CellChangeTimes->{3.921756055610493*^9, 3.921756135240709*^9, 
  3.921756332503172*^9, 3.921834608159281*^9, 3.922024707319683*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"39603fb9-18c7-db4b-8a27-83d123da83e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R2", "=", 
  RowBox[{"Rphid", ".", "Rthetad"}]}]], "Input",
 CellChangeTimes->{{3.921756809818407*^9, 3.921756815508447*^9}, {
  3.921756852452225*^9, 3.9217568701482563`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"17c3651c-b0ef-a240-8f49-90a9e5f7e848"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.921756872438989*^9, 3.921834610654772*^9, 
  3.9218466562466183`*^9, 3.921853059754444*^9, 3.9220247073506775`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"4a4bc713-9e79-184b-8ade-f8c2c089b2ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "R2", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[46]:=",ExpressionUUID->"07813a7c-e461-d14f-b958-3e343b0f967c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "0", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.921846659027134*^9, 3.921853062647335*^9, 
  3.9220247073847256`*^9},
 CellLabel->
  "Out[46]//MatrixForm=",ExpressionUUID->"e22e9ef5-3f88-f644-8fe2-\
7e65a4d62483"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rdot1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TrigReduce", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], "R2"}], ".", "Rpsid"}], ")"}], "]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.921756995096504*^9, 3.921757120915119*^9}, {
  3.9217571672200203`*^9, 3.9217571675872536`*^9}, {3.9217572981946354`*^9, 
  3.921757302561993*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"268a5cec-db5d-5447-9b48-af121f63354d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.92175706577466*^9, 3.921757086048118*^9}, 
   3.9217571218310184`*^9, 3.921757168923693*^9, 3.9217573034304104`*^9, 
   3.921834615931675*^9, 3.9218530685644073`*^9, 3.9220247082628117`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"77d79ce5-68ea-6b48-9db3-bd8fb385e308"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "Rdot1", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[48]:=",ExpressionUUID->"010c58c6-b47e-f741-931b-cb634c0a7a69"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9217571832604527`*^9, 3.921853072719036*^9, 
  3.92202470835742*^9},
 CellLabel->
  "Out[48]//MatrixForm=",ExpressionUUID->"75bd7a6b-48c2-8648-aa9c-\
5debfcfeec73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rdot2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TrigReduce", "[", 
    RowBox[{"(", 
     RowBox[{"R2", ".", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], "Rpsid"}]}], ")"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.921757314242537*^9, 3.921757324274208*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"87e166ce-9d46-db4c-b067-49256f6a1c34"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.92175732671735*^9, 3.921834620944784*^9, 
  3.9218530750368137`*^9, 3.922024708579674*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"e29a5622-d5e6-d843-9f8e-5cb226acb72b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "Rdot2", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[50]:=",ExpressionUUID->"e0db81dd-0a19-2844-b321-9195a15b2fc8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "0"},
     {
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "0"},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.921757331554695*^9, 3.921853078432505*^9, 
  3.9220247086151867`*^9},
 CellLabel->
  "Out[50]//MatrixForm=",ExpressionUUID->"9835ee9b-80f2-244d-8f86-\
39bdc861cc19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rdot", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TrigReduce", "[", 
    RowBox[{"Rdot1", "+", "Rdot2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9217573357821007`*^9, 3.921757362338396*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"b785e3a9-2b95-c942-b0e0-ffd743eb9a6d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.921757343765297*^9, 3.921757363320785*^9}, 
   3.921834627046299*^9, 3.921853081316044*^9, 3.922024709715645*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"797115f2-f0f1-3b48-bf64-59c6309c0d46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "Rdot", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[52]:=",ExpressionUUID->"578f6cf8-b69e-b543-86b8-4ecb5475ed11"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Psi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.921757392237025*^9, 3.921853084576265*^9, 
  3.9220247098370247`*^9},
 CellLabel->
  "Out[52]//MatrixForm=",ExpressionUUID->"287c3971-cf54-084a-9fcf-\
0a8de53b6004"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TrigReduce", "[", 
    RowBox[{"R2", ".", "Rpsid"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.921757412279604*^9, 3.921757412833103*^9}, {
  3.9217574580331497`*^9, 3.921757498962433*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"9afa87e2-81b5-d447-9d55-f3fe29610bb6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.921757466036959*^9, 3.92175749953417*^9}, 
   3.921834630821934*^9, 3.9218530869918537`*^9, 3.921854857889307*^9, 
   3.9220247099035892`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"85556dd2-da52-c842-95ca-c9c00ef6eed3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "R", "]"}]], "Input",
 CellChangeTimes->{{3.9218549306894846`*^9, 3.9218549463156986`*^9}},
 NumberMarks->False,
 CellLabel->"In[54]:=",ExpressionUUID->"c751d09c-a067-ee4b-b058-1dda7daedb0a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.921757478615661*^9, 3.9217575019606094`*^9}, 
   3.9218346367464695`*^9, 3.921853090117193*^9, 3.921854861761633*^9, {
   3.9218549381112633`*^9, 3.921854947216408*^9}, 3.9220247099665947`*^9},
 CellLabel->
  "Out[54]//MatrixForm=",ExpressionUUID->"0cb46e7f-11fb-5e42-8a1b-\
71b844993a78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Rdot", ".", 
    RowBox[{"Transpose", "[", "R", "]"}]}], "+", 
   RowBox[{"R", ".", 
    RowBox[{"Transpose", "[", "Rdot", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.921847850695289*^9, 3.921847884172531*^9}, {
  3.922024674895582*^9, 3.9220246787225246`*^9}, {3.9220247173862915`*^9, 
  3.9220247290590744`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"1d19ca98-bd6a-f145-9cd4-e829dea7a068"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9218478858472443`*^9, 3.92185309204846*^9, {3.9220247100251694`*^9, 
   3.9220247295648518`*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"ccdf1fce-e25b-dc44-bc7e-517b60b35401"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[56]:=",ExpressionUUID->"65e1ee24-3bc5-1f45-a09c-687b8df5d368"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {"0", "0", "0"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.921847894129637*^9, 3.922024710081215*^9},
 CellLabel->
  "Out[56]//MatrixForm=",ExpressionUUID->"db8ee486-816e-0a4a-8266-\
c45cdb6b9e93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S", "=", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Rdot", ".", 
     RowBox[{"Transpose", "[", "R", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.921852687164322*^9, 3.9218527094628673`*^9}, {
  3.921853327393524*^9, 3.921853328938091*^9}, {3.9218533610550385`*^9, 
  3.9218533678075886`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"671ec3e9-854d-6f44-950f-985d8e9549f5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], "0", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.921853352709085*^9, 3.9218533683544445`*^9}, 
   3.922024710248337*^9},
 CellLabel->
  "Out[57]//MatrixForm=",ExpressionUUID->"ac11576a-2c27-1840-bf11-\
4c797c64077a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.9218609952275753`*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"393399c9-573a-4696-99b5-3016953f9b5f"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
EEIIIYQQQggh0/J3CBf+Kw==
    "], {{0, 69.6}, {361.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{361.8, 69.6},
  PlotRange->{{0, 361.8}, {0, 69.6}}]], "Input",
 CellChangeTimes->{{3.9218610858390007`*^9, 3.9218610864078197`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"cdbafdb8-810f-43a6-9a57-f2f75c5439b3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnUuuHTlyhg/siYfWEgxtQQNPPRI8bcPQwKNudLmhSRmobsBw7eDuQDuo
FdQKtIHaQO1Ae8gOnx8nEIogg8w8mUzmvf8HSDj3nHyQwcdPBl//8qf/+cN/
/8PtdvvrP8l/f/jj//7bTz/98f/+45/lj//88a+f//LjD3/+9x//9sNffvjp
X//0j/Ll3+Tff8n1//95IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IQP5+PHj7XvODhEhbX799dcPHz58/fp18HvljfJeefvg916Il5cXV6WMTyZC
tgFBlDx8dkCuhBjt3bt3v//++9kB2cKlAw8+f/78/v37s6pZea+8XcJwytuv
BQWRXAsK4gaamiI/SYX56dOn5CFfvnyRC8bXFVcXxJ9//lnC/+3bt81PaKZO
M2nk7RIGCcnmMLwRKIjkWlAQd+eXX36RHoRUqs0r4X+bra8htb3kBwlYIjqf
74xXVbGYZNeax1ICLKESqZJrJGP/9ttv8ZrO1GkmjTyHVX0TCiK5FhTEtUit
m1gMNXZ/DSBPk/p5WF8DgU/kQEQE4Wl2wUQRRHrk/9oFIlt2hFo+W7PIK+TL
tZIqD5HgFX+SAH+4I8+Uzx/vuGtWpU4zaeTX+ApioSCSa0FBXIvU87Uyjip0
bY9vrYY+QxL45eEJ7M8Mop61/hr0TpQXwoqJFvZKUS5516rA43U1NYdWqo7j
jfaCDamTJ42ERH4t9kMJoCDOjJtROW3rLk7TOu5dFMS1xJpWgRut2OuRLxNf
n6jDmNwInar9+unTp1r/q9ZXEmvEET1E1knPhv6gA4EvChCUy3ZXYzIlqYOf
ip3iJGkg0Cw7CRTEmUHlPyZ15C1SveSFRcqaXJD7piiIs1H0xQG47OL38OAl
6Yja+5mJIp0k1TtUrOgChRLVOsUx/0Ceds9UiQ2jKzVKfy11JOKi6TWz5Ekz
c7t6BiiIMzNMEKUw9kwLx+wFKYyJ14WCOAM6z0T77HC+ue5G7BYtpf5+bWxr
39Vtkqli4to/XUigIK7mR8Byf4U8xAkNuk61aTliIldPohRg7ismxsiv8qcz
SE19IOWuA4vEcrfH1InrcIviXkuavJ1DKIgzM0YQi06khC9fviTT4CmIpyPV
uyQQlmOjqpdulOQircNxWdItQjcqmZ5xRJcKE2Nsl9CNiGE2pl6fzFep9a1A
sQ8FUZO7io09q1aS/2FPWEBulFtgMSt/UL2iIMLhGbFhTiyMcdWa5OVJg+Jz
3TUsR0NBnJkBgqgVZvwpGUVKvHAUxHOBP007O5hHgQoQFanK3OYqN7/3Sawz
0A2ruZ5dTW6aao7HxmKFLmexOMQMDwtgjmgxPImJYt8WF9v+4KrbY8BqSVOL
OwEUxJkZIIjYQyN+n48iJXP/KIjngp6O1tJu2omttDdXufm9yyMP5BRvdLM+
nALKn3Zxek0Qm2qeiAL60fH2qLBoaah0ovVoDZKYCFsN2G9gcPvS5Pa8/0tB
fAYK4swkgogBF1dlSYGS+rDf+VlrS/eMItUa4RTEc3HTLez+JG4u5eYqN7/3
GaAymuFdHpO42CUMNUFsqnkuCoiaVd7iqJxcYPN5XPaeC6ILuTRa3LBF7fYn
vdkUxBwK4szUBBGDRHHAXQePOjUxzv1WmuUuzkwAFMRzsTLhlt2h0rbJfStN
22gm/dLRC9sGurf47GRIPjjJqAliU82bouCeXBxzdA0PbDhjL+gXRBgzXllM
nabl8wsoiDkUxJkpCiIWI+dLjTo3EklKR7Pc1RyqFMRzeX/HDiDiszaW7MVF
7ejp/W3btqUJBDEGHkvU3Qr32qSamlAqtguJXrP9NTo/44vigr5YJJNJNU4Q
seQ/NmKLqdNUtDxpOKkmh4I4M0VBdIMXS6gBMCOup5OYFK6m34mCOCdoyXz6
9EkqPfkf7gLsWhZdB8Wl3xBEtKnkguKe0gdtAqZzS2LgYxuvlkVvj+ma8rQ4
rLDcC4gKHCygO79hR1BnKDhDsLwCtooOUhtsvbcmiCh3mJuKrmVtF9OYOrqF
DlbWxIKQJw2XXeRQEGemKIjxy1tpfVZPmiaC2PQ7URCnBXss3AxitOIGYrXN
wWBkuOVjb+LQrdsQeMxs0TAU31VbmK8j4MUDIFwHEKIpRsAt8iFuPYEHyk/q
MLE9WfuN26C7VkZ06SICWVvVW0wdCT9CWwxqM2ma3ec3DgVxZrYJYv8wQe3K
nlEkCuLkoObvOSUh9407xmzu3Rn4ZOu2GmtX3T5DsnVbJ6tSp5k03LqtCQVx
ZoqC6GZox6EKO0yAlc5SA+AhrvNYm1TTM4pU60JSECcBDree2hg+yc7jn8Yc
NQvHbzPwa4/5Szb3PoJ8c+9OOlOnJ2m4uXcTCuLMFAVRV17rtlFwoeAyVIM6
7iN/Sv6XP6XS+OWOXZdR6wk2R5FwY7H0URAnId8W24EjaJvV6bADgvsDj+Of
elYbYYel5PinI0i20+mnmTqdScPjn5pQEGcmWXahg0QYxJdGL2QRp+HEuRM1
X0ptYX4+ipQcNkpBnIRhB1IcwarA68atyTVzHhA8Eh4Q3AMFcWb22qkGpbLY
hE62bssDxq3bCOlBGqLDRi1rrPUtv1koiDOziyBKWcDcg9pzMM2gv/HMzb0J
WQX8MGdVs8NGfl8BFMSZeVIQ5UbdjR/DiPKhdly4TrxJEG3FlTz+iZBVSLn7
8OHD+JoWKytn8NleAgrizDwpiOj6wR2KaXvFdcoA67/yyWw8IJgQ8oqhIM7M
sAOCd4SCSAi5KBTEmaEgRiiIhJCDoCDODAUxQkEkhBwEBXFmKIgRCiIh5CAo
iDNDQYxQEAkhB0FBnBkKYuRtCuJZk/YBp+4/CZNPmXz5CQVxZiiIkU5BlMtW
7TYwM+cu6wZnLe5+Ben4lpPPMf8GBRTEmRkpiLohZLLMsGdDSArivsyw8Rc4
Zfuvq6fjG08+ywymaBqBgjgzwwQRRwboueEJOIwm2ft0EkFsghMEisfBg5GH
O9TYcWvoZnyXjihzg+hVMPmUXUwxwAgUxJkZI4hoNfVLTH6o3OmCaI8CqZ0K
hOM/es6Yky7ziY6mXQ4PWrrju3REebYjhHoqybOOumDyKbkpcIyd1ELYTau4
M+QYI1AQZ2aMICbHjtcOjUqOHT9XEKUo4cgqCRsOjoxXorHaadXmKeRwNePs
LUE+5JVzP/3Hy2JfvlqMVsV3aUV55CGzOHYzsUB/Jdn0bGC8AIkoV0oiWgGV
n9ZK2xWTT+xjjSBlbZdWRG4KHGKuB7wWT9IZZgQK4swMEETJhLfK8U84pLX4
dtRURVU6URDR1bV6FAsXSsqqTl9SGKG/OmtOjCkPl2/6H54A+/dIT3Kc7ob4
Lq0or3JZP+Pf3lcpEs+GpKCkGn7C6TA3c1wacvvads61kg+qpG0GNcIuLZ/c
FOg8qrUlbM4aI/MwBXFmEkGUwhtLqGS8nhapu+UWjkpEXnLEsBWPZD1REFGU
bJs2CiJGEIrtXvxU7PYWz6uF/tqyjDDs1UNETDuvrLmAkviiLVRzfSdH9MKv
1ROw5TlB3KYUSbyKng2YyLYJMR1xW5iVayUfQms1S4ywV9MuMQWqGmv8KIgj
8zAFcWZqghiLsP1+VVMq8e3Dj1G7Efk2ysdZggh5cnGPJaIWKfhXa8WnGFk0
oY8rO/26k4hOLb7wTSUpVUvfZU1Vn4etSVKh1SrJPF5FzwZiuns6Xij54EI8
bm1vYopY/8RW0Mg8TEHs4eWO+1JMerTdioKINlUt9yJv98/mquVVVB3J2Fmt
GjlLEFFD2ogjCi52xQYDnmlxz49z5NA07anxJEV0XEY01BVPO/4ol2kHv/l8
TCbRe3F7PJyrGF+knaU2alPMSDBX5+hSZ00rfZOYsvZPF8hiJdkTr+jZQJGp
NSPVwvYt7+5gzEtuvN1H3FZlj6mSD37+5gxzeKU0tM4FihX3+NV23hNT4CdX
yeAh442g77pREFMw/Sk6wFEQkmH6ouOxmYiWoiAiT2pSOn2ECiQ9O0ctDBi+
SYR1syBG9YkkGbImiEiOiC1uSVsij2+8Ee3YJPU1tFpVxk4oqmI7/qju1rzZ
A/WXiyVb4iFyOz7YpE8e0mzwJPeu6lIlsbBgyY/tEroxIExBtI8tSlhnQ85W
/njvrdRcWUKzSowsxlfj4PTt2PS6UPIh5zfdSrhLAvntDjK2msuOymH8Ud2t
SUhgh8iJebhZ/7xx8rKPdD9uOndREJ3ixESPTayEmiAWxxYts/UQY5cBIXRj
Q7UCkse3ZuS8UY0AWJF1jhrUKvZ6fUVTu7UGs5OEEQt94+YGQH7vEYIIbIPB
jSXZnt0z8SoGXp1vxaZvfBcCgImRek2nIM6WfO6lydOs9LiH4E81nXzvGjad
hQ4XW3UenIcpiDmYNaF/FhtXx23+sE0Q1w7xFAUxH0Bc5hPEW5gHGDUrKSB5
fOONt45uuMs8S0gabXX3vFF5f8e+RSsQd9fmBkB+byKIz3hF3Nw/59uUP3u6
z5sbcsujw+6auEW3G67UthZcfzY8F0o+5Mm8aee8UvEhKmTxOUlIXINwKanz
4DxMQUyAPW35dWYsjlLtSFEQXT0Pt4Orq12bUyUbD7Sdptqkmma8arnxREG0
XxZHLmoFZK3vJWaM2i3umW5RhnZM4mLkWlCdarilBG621eYGQH7vQT1E60DG
jdZ6YjdtOTwTrzzwsYmSzKfSP+PmJxdKvp4CG5t/GKGwmRYVguRw13jIBdEV
ojiaOTgPUxATmoK4pMJx0Biiulyw9hxLhgW035BRUaIxMGFXE6Dmty29RNeQ
2eD9iBfUlio3y9dBY4juy9oiyltpuKTpe3EX9AhinN0EjY5vx+pyF9raVARX
xvEWTR2kvk3f4hubDYAYZcsRk2qWR+Dx2fXL5IOtJzc3bJaWIBb9LbHWdWPB
mGZgL7hQ8jULLFQ7Nu1i8UddcetommpI7PcIc7FoD8vDFMSEOEEFOTY6Cg4K
QG3ZhU7o0o1qMfPtdm+huZkeyJB4iNzoQltbmK+TuIobA0YfkdIsX0/SI4jJ
GopkdmJSCiCvrqZyz/n6/eK12GtwK53tAsbicoBiNQLLq/NQPmgw8MY4Zy/G
N5/yUYuyctCyCxQu2MQqBZYcOsdysdz1xwtPFos5C8dUiy+Ky7qLme0qyRdd
pljBpPfGwo7U0RQR+1jRiYtlOgUROwMU297D8jAFMQcmRdJ/va9UxVRATLWC
Kh23jVVNENei9cnH0l5MydZtNV7m27rt42O/C/Saa8d2FNev6ewX7MMWHx43
P7QZY3nsDGZrTq36kFXcDB8ooI65uDEpG9MYBbz65T5FHy0ieReeX+x+xvha
d65cUNxJIN/vsX+YoF8QtXkpoYVSSARh2NgRSCrJPF7Ws+EmisdEXB6eWwRJ
LyuKJq7RXHeV5LMep+WxEairEKwPKlpJN15bHpWki0jNFDoVR/cyre1iOiwP
UxCbvDxWiqHzpSuPYNJDTbeXIMpzJBbynKKH4dvKc2Hm3NxbF7LpXqbF24s7
nGDJA5L4JawF+1rZA+rl+y1MY2awK7OkwDr3qV2GhjVo7vnJhld2z8nbY+/N
YorUdnSxtoptpFqUl4O3bpM3Yua2xkuCVwxGbWF+Hi/X2ZF2COZ1aCpEV0kc
5LU9WfuNGwi+UPLZjIreruuP2w3z7WpZjalbgehKUM0Uti7FIpQY4GFGABTE
mdlLEF/uGxcXhwIBjn9KdESRsnD145+K8wZr5LsEH0pzd2iIQtNBsSq+y96b
e29ILMhWvgnhtv0tE8/G7ryO5NuF/n3OawwzAgVxZvYSxHyTZPDtcUBwcs2F
DgjOgdun5/inc88Zr80BBnEuR43O+C4dUR5wfhCy6+5KkXs2juBtJl+R3BQ9
jDECBXFmduwhPqkg/VxCEJeH0zIpNfMfEJxs9RlpxneZ5oTZZE/vGJ7OSrLp
2TiCt5l8Rda2XooMMAIFcWaeFESpWOReySEj+zhXEcSrIIlY9PIVJ6Yeytqx
5s3srhRnHRC8vMnkq1EzxUiaRqAgzsyTgogJA4O1g4K4O5h+c3pf9Vzv8XVh
8innmqLHCBTEmdnLZToSCuIRYB7giTWJvH3k6Nsrg8mnnGWKTiNQEGeGghh5
m4JICBkABXFmKIgRCiIh5CAoiDNDQYxQEAkhB0FBnBkKYoSCSAg5CArizFAQ
IxREQshBUBBnZqQgYn/F5F2dC9UpiISQi0JBnJkxgohjaosHYTgwdblnIc+u
AfwOCiIh5CAoiDMzRhDjudUJzc2uKYgzwIVv50L7K5MvPHRQEGdmgCBi4/di
31B6gsW9vpNzVZZXIYjY4eeUnb524S1vjTJD2r1l+zvm35rGQUGcmQGCWMsw
OHGgpjvJbpMUxHOZYcdIcMrmmaen3Ru3v2UGU6w1AgVxZnJBLJ5hserMYqhe
9CrcAu6ZOOq6mNVfgSA2wYbSxUO6wVknZexypgBoxnGZ+3iFU6D9lR2Ptxhp
BArizCSCiMPU4plxOIG685gb6FqxOY0jeGqtuyS3X1oQ7cngteOSxbbSre45
S7E5AWl3nj91DnTGcemI5lkH8J0C7a/kppCShRpMCppcWTz78hQjUBBnpiaI
ELJaqkmV3uk1wvOLP324U7sRglhUpesKopRKsRt0UKxXPCgkHz915BOQIL6o
EwSxti37OB5olZ6uOpc8cXqviuMy2RHtcNMlF+AgbAkwzC4f8g5IP/32zw/s
Hml/LLaCKcRuPVPNe8hNIQFG9SLv0inu7pqzMiEFcWZqgihZ17a+nD6iuPW4
zWuCiNo4ecLrE0SMNdi6MZZTFLpVIlUr10gjPaQPl1mD44JOdQPo1PeU+uQw
vg1xXNLqC3Vjf3ohM696uyU/SxFtHp30KMaXyHYeW9+k3/7JCcjD7A9V0kOT
5U/4RnZpuuSmQOdR3S8xxU/MhBTEmSkKItLdlnoniKjuelwENUGsjS26MLwm
QYze4yiIGIxYNSN3qVTR7+/Yb+SaJ89zT/r7jqTqSOK4rI8m6MyN4BlBzE/d
RZvHVsV43V49xH77JwudEvvLl0mpXGt/hNZqluSHvdoGiSmQ92xWjyk+zAjF
yyiI07JNEJfu1K/l23wAcXl1goiq0rVIY+GquZHzGbnFCUirNKKT/mcmopO4
yjdEE/QrRR62JrkrEj2g4+q6fvsnZqzZH67FxDKr7A8X4nEz0xJTxLHF2F8e
Y4RayCmI01IURDSDbYbBRBq9DGql1bvOEgH2xtqkmmbmSbqQVxREtEhtdIq9
7FtpUO8WKDZgnK3e3Sn6lNAGtm+XyxBr+FTlURgCs8HDXXmFLNHEcwBcxC60
xThujibASzsHp/oFUa5Ej0+fbO91rcQe+wARCx1WE/vY2tVOBcHT+p+PCZM6
domSKIGMLaVof8TFUht067Q/HMXNBRHyNK09JLQuu2LFPX61Hs7EFPjJjcXg
IeONUKSYt8kk1MYQ0abCABMcHZgb8O0OMpjmXs3JUh+6Srima3gv5pYUpzQj
AMXchRz1XLwzjhBEtCgituQmneKeGbnuRkiwJEex8Nq+GAZ30DbGiA++x0td
KyjxFuqAkXaHJfmQVTQM+UM2RBPkc8CKFzcvk6dJXFyX0LoiXScIgW86pWFk
GAQTq2ytKwmh+ov46iBvbjokt9wupU+3wsAH20BNHvLMsH5xjkFzhA53SSBR
q8Aymvp2VA5ZVN2tSUhgh8h4I9SgIM5MsuxCZ8rJ/6jltFYvLkWMagiKg9dS
ZNAMloxarEOSacxXFMTookHxsXFPytq2GblIkWLVVBzjg69JawNXwPMKGWqI
1EdVplMpbHXUfMi2icdHCCKApuiTbQBcZwHSn/eJ8GrbRHGuEoia/bXH/k6A
oKr4DJnuaZA8M6zv7O9emjzNSo97CP7U+kS+1wphVdPRubPy23c0Qg0K4szs
tVNNTQ2XdOu2GvmM6EkE0foGa9iK1M2siPVnraw902rVPpq7vTgU4qYWo/3T
8xY0y1XcXYrbOv+UxvmqlHLAoWcD4MRF8/zt+25IEWfhJQgieknFwCTRdxOo
7Gi1u2uzFyK/19lf/T+1Ry0Pw9pqodgAK67VTUICA8Z4WY0bY4QaFMSZ2UUQ
EzXUtzTrCuVVbu7tHlgcBKmVtWdarctjPo+rJWKKxHnjrpOevMWqBv60D7fV
9bmNc3txz5XLXVzUCK4VIbrvnHj5AGLsEy2PsTb9U1IBbpkoBLXou4TDn2pG
11bZ7IXI73X27ymhsf2ABpitRiBPYhCXK3JBdKkQRzPHGKEGBXFmnhdEq4by
fzJ3C+tk86d97dgs9xUIohues5fFuDdbrU0piVOYYs3sfIOQbLtKMZnJ4J5v
t3bEXTZSxTg+Gc2DJtUg8JpwrhWBKSv43COIsLANfzTO8ljXjzaMtUbN/q6K
xlv0RqiMtUzR/s3u+bLG/s0SCtWObYO48ww8pT3tSQ2J/b42b3mAEWpQEGfm
eUG8fU+y5Ap7ViQdyVd8QLB9YJxKoRQbqM0ZuW4CUtz8v9jXc0O3rpfn9FFj
UQy2bdvbHorOtLG1RK0Rvjaaq+61rBVErSGt0It93HrD2OVB607/jDte2oXq
cG7rT8X1HUX7I5Ba7mz3HG+MUy6j/XMnA+i3f3SZwk2h97qWxvLIb9oAkxxl
RScuUOoURGS/2MoaYIQaFMSZ2WsMcSRXFMSPj60zUO8JtV1MY3Frzsi1eqeN
ZzwEtziHto6FyQetLZ1o6nqZL3dsSGKwIfHYnkV7KJgzH33ptTXRq6LpaPbO
LKtcpjopVIUeG+JJYFy87MTs5eE5sd0QVS5MqnSzquzGQTqBrZgTYiDxaqyw
gGrLjXh+7AcV7W/duXJBsVnbb3+d5INM/vW+Eajr/aE/iGBEW+nGa8tjlruL
SM0UOhVHF7DUdjE92gg1KIgz4+Yb7L6Uey/iEqHj3nWEIOpCP93LtHhZcUep
fEaum4AENbG7R+rubQr2E7NVVly9hS3I3G6ryX5ZWASnC+gQWrk+xrS2a9aq
aFoO3boNyqX2vD22hC2m4Mv3W5jGydh2YZ0kk5vpYTeelXujXy6xv90y9PZY
AVr07NXsb/NnbK6stb+NKfwhbpNAu8u922UXMXUrEJ3Ba6awk+GxCCUGeJgR
ilAQybU4QhD7cVMZc5oTkPalZ3Ppnr2sV8Vx2Xtz72071UDu1961L037o+PT
NMW59t+FVfvMFznLCBREci3OFcTl4UHqOf5p/JHlcV8sS5yKU6MzjktHNMcc
PyQdlr22JH2G3P79qn05+0dyU/RwihEoiORanC6Iy8MDmRTAOQ8Izrf6dDTj
uExzQG2+p/dIcvvnJ3E4LmT/Imu7eEXGG4GCSK7FDII4MzgQsDiIlpw6dAQ6
h+ToF60S+qOp2X+8ag+zf40kKw5jrREoiORaUBCbYBPpcwv1KR7jSaD9lXNN
scEIFERyLeJOX2eHaEYwjfDEikje/qS77NLQ/spZpug3QpwkT0EkhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQggh0/J3CBf+Kw==
    "], {{0, 69.6}, {361.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{361.8, 69.6},
  PlotRange->{{0, 361.8}, {0, 69.6}}]], "Output",
 CellChangeTimes->{3.922024710304907*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"d1484f64-b0d2-8545-a53e-93bc0e9b2473"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Translational Coordinates",
 FontFamily->"Times New Roman"]], "Chapter",
 CellChangeTimes->{{3.8789073175499744`*^9, 3.878907333695898*^9}, 
   3.878907761878138*^9, {3.878907912666444*^9, 3.878908013516923*^9}, 
   3.935329351188883*^9},ExpressionUUID->"2c711747-9326-4c81-9f82-\
0ffa3a72bdc6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ftras", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"{", "f", "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"fresultante", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", "R", "]"}], ".", "ftras"}]}]}], "Code",
 CellChangeTimes->{{3.8789821814102325`*^9, 3.878982184273415*^9}, {
   3.878982470943721*^9, 3.878982489352222*^9}, 3.92186110923127*^9, {
   3.92186142909465*^9, 3.921861442296858*^9}, {3.921863299074293*^9, 
   3.921863304235275*^9}, {3.922024787249922*^9, 3.9220247888088856`*^9}, {
   3.9220248398959064`*^9, 3.922024958060276*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"7168dfb2-90fd-48aa-b5bb-7db444c83b95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.878982508544737*^9, 3.879596985763838*^9, 3.87985025553523*^9, 
   3.921861111660389*^9, 3.921861388596873*^9, {3.921861432408075*^9, 
   3.921861443011081*^9}, 3.9218633060199146`*^9, 3.922024789417219*^9, 
   3.9220248705924206`*^9, {3.9220249011543884`*^9, 3.922024958597681*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"6f389c7e-d023-124d-9375-771a0dcbbdc9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"coor", " ", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", "[", "t", "]"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"velcor", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], 
      RowBox[{"x", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], 
      RowBox[{"z", "[", "t", "]"}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.921862367397507*^9, {3.9218624789919586`*^9, 3.921862484626749*^9}, {
   3.921862531368246*^9, 3.92186255395079*^9}, {3.921862634532362*^9, 
   3.921862674452787*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"915cf33f-9e20-094f-bc2d-189a35462a57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cinetictras", "=", 
  RowBox[{
   FractionBox["1", "2"], "*", "m", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", "velcor", "]"}], ".", "velcor"}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.921862567973135*^9, 3.921862575452276*^9}, {
  3.9218626061221275`*^9, 3.9218626134791126`*^9}, {3.9218627767806168`*^9, 
  3.9218628109475365`*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"00baf393-2e20-5247-bd88-8ad4993a98cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", "2"], " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["z", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9218627993322716`*^9, 3.9218628114427605`*^9}},
 CellLabel->
  "Out[203]=",ExpressionUUID->"547a6986-1016-f241-a7ca-361c23064b1e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lagrangianotras", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}]}], "-", 
    RowBox[{"m", "*", "g", "*", 
     RowBox[{"z", "[", "t", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9218653619049034`*^9, 3.9218653762974815`*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"27eb2146-e28d-e24e-b336-fcc17e3a82ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerEquations", "[", 
  RowBox[{"lagrangianotras", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", "t", "]"}], ",", 
     RowBox[{"z", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.9218628895530167`*^9, 3.9218629994277687`*^9}, {
  3.921863048037779*^9, 3.9218630570609856`*^9}, {3.9218653725563717`*^9, 
  3.921865381207649*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"a3f11813-2868-a045-b492-eed48c59938e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "m"}], " ", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "m"}], " ", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "m"}], " ", 
     RowBox[{"(", 
      RowBox[{"g", "+", 
       RowBox[{
        SuperscriptBox["z", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "\[Equal]", 
    "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.921863059551321*^9, 3.9218653865481396`*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"b728d89b-90f5-044d-902c-9810a35511b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "m"}], " ", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"f", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], " ", ",", " ", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9218630999293118`*^9, 3.9218631509723835`*^9}, {
  3.9218631888088055`*^9, 3.921863210083231*^9}, {3.9218632469231224`*^9, 
  3.921863274796404*^9}, {3.921863326892334*^9, 3.9218633540435505`*^9}, {
  3.921863400218996*^9, 3.9218634005645046`*^9}, {3.921863704232313*^9, 
  3.921863717457636*^9}, {3.921863776115551*^9, 3.9218637812771435`*^9}, {
  3.921863844952284*^9, 3.92186388137862*^9}, {3.9218639153345623`*^9, 
  3.9218639197458572`*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"ba30c0d2-52bf-e542-87d1-3e2d90674dea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"f", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "m"]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9218639208998947`*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"2c3dfd4c-17f7-c441-9a5c-be8b62a44ff8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "m"}], " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"(", 
       RowBox[{"f", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], ")"}]}], 
     "\[Equal]", "0"}], " ", ",", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.921863739983942*^9, 3.921863834669859*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"9ab80ac6-b913-2348-924e-5fc825fe31c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"f", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Psi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "m"]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9218637615689697`*^9, 3.9218638352863464`*^9}},
 CellLabel->
  "Out[214]=",ExpressionUUID->"ec685603-e40f-d345-a9f1-233b87f6b1ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "m"}], " ", 
       RowBox[{"(", 
        RowBox[{"g", "+", 
         RowBox[{
          SuperscriptBox["z", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
      RowBox[{"f", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], "\[Equal]", "0"}], " ", 
    ",", " ", 
    RowBox[{
     SuperscriptBox["z", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9218639644043045`*^9, 3.9218640016474667`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"0aa20bef-e06a-1242-a835-61bbd66c5f46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["z", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "g"}], "+", 
     FractionBox[
      RowBox[{"f", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "m"]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9218640025955944`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"65f1990e-6ac9-c846-8b00-c1a22263dd37"]
}, Open  ]],

Cell[TextData[{
 "According to the variational principle that governs the Euler-Lagrange \
equations, if the Functional (Lagrangian) is equal to the forces generated by \
non-conservative potentials (as is the case in this case) or to conservative \
potentials (and not to linear momentum as it could also be ) then the result \
of solving this equation is three equations, one equation for each degree of \
freedom of the system, as seen below: \nThe accelerations are:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "''"}], " ", "=", 
    RowBox[{
     FractionBox["f", "m"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ")"}]}]}], TraditionalForm]],
  FontFamily->"Times New Roman Math Dot",
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"0a39019a-3c6c-6744-9b66-508ddff951d5"],
 StyleBox["               \n\n",
  FontFamily->"Times New Roman Math Dot"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"y", "''"}], " ", "="}], "Text"], TraditionalForm]], "Subtitle",
  FontFamily->"Times New Roman Math Dot",
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"bd08aa64-ec45-714e-b0ed-548a57dba2c2"],
 Cell[BoxData[
  FormBox[
   FractionBox["f", "m"], TraditionalForm]],
  FontFamily->"Times New Roman Math Dot",
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"9ec6416d-d1e8-004a-85b3-9abda2f0b682"],
 StyleBox["(-Cos[\[Psi]] Sin[\[Phi]]+Cos[\[Phi]] Sin[\[Theta]] Sin[\[Psi]])\n\
\n",
  FontFamily->"Times New Roman Math Dot"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"z", "''"}], " ", "="}], "Text"], TraditionalForm]], "Subtitle",
  FontFamily->"Times New Roman Math Dot",
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"157f8866-ca0b-534a-a7c0-5bf87826741f"],
 Cell[BoxData["\[IndentingNewLine]"], "Output",
  FontFamily->"Times New Roman Math Dot",
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"e490d5f3-cc77-9f4e-bfa3-b9b4afcd3e42"],
 Cell[BoxData[
  FormBox[
   FractionBox["f", "m"], TraditionalForm]],
  FontFamily->"Times New Roman Math Dot",
  FontWeight->"Plain",
  FontSlant->"Plain",ExpressionUUID->"3beff3e5-e72b-854b-914b-05317be81bfc"],
 StyleBox["Cos[\[Theta]] Cos[\[Phi]]-g",
  FontFamily->"Times New Roman Math Dot"],
 "\nThe equations that describe the translational position of the Quad-rotor \
are now shown:\n",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    RowBox[{"X", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     RowBox[{"t", " ", 
      TemplateBox[{"2"},
       "C"]}], "+", 
     FractionBox[
      RowBox[{"f", " ", 
       SuperscriptBox["t", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "-", "\[Psi]"}], "]"}]}], 
      RowBox[{"4", " ", "m"}]], "-", 
     FractionBox[
      RowBox[{"f", " ", 
       SuperscriptBox["t", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "+", "\[Psi]"}], "]"}]}], 
      RowBox[{"4", " ", "m"}]], "+", 
     FractionBox[
      RowBox[{"f", " ", 
       SuperscriptBox["t", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "-", "\[Phi]", "-", "\[Psi]"}], "]"}]}], 
      RowBox[{"8", " ", "m"}]], "+", 
     FractionBox[
      RowBox[{"f", " ", 
       SuperscriptBox["t", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]", "-", "\[Psi]"}], "]"}]}], 
      RowBox[{"8", " ", "m"}]], "+", 
     FractionBox[
      RowBox[{"f", " ", 
       SuperscriptBox["t", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "-", "\[Phi]", "+", "\[Psi]"}], "]"}]}], 
      RowBox[{"8", " ", "m"}]], "+", 
     FractionBox[
      RowBox[{"f", " ", 
       SuperscriptBox["t", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]", "+", "\[Psi]"}], "]"}]}], 
      RowBox[{"8", " ", "m"}]]}]}], "Text",
   FontFamily->"Times New Roman Math Dot"]], "Item",
  CellChangeTimes->{{3.878983860196519*^9, 3.878983909120954*^9}, 
    3.878991715370925*^9},ExpressionUUID->
  "03fb9c74-ad20-1249-b26a-b87de0e71bc6"],
 "\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y", "[", "t", "]"}], "\[Rule]", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "+", 
    RowBox[{"t", " ", 
     TemplateBox[{"2"},
      "C"]}], "+", 
    FractionBox[
     RowBox[{"f", " ", 
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "-", "\[Phi]", "-", "\[Psi]"}], "]"}]}], 
     RowBox[{"8", " ", "m"}]], "+", 
    FractionBox[
     RowBox[{"f", " ", 
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]", "-", "\[Psi]"}], "]"}]}], 
     RowBox[{"8", " ", "m"}]], "-", 
    FractionBox[
     RowBox[{"f", " ", 
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "-", "\[Phi]", "+", "\[Psi]"}], "]"}]}], 
     RowBox[{"8", " ", "m"}]], "-", 
    FractionBox[
     RowBox[{"f", " ", 
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]", "+", "\[Psi]"}], "]"}]}], 
     RowBox[{"8", " ", "m"}]], "-", 
    FractionBox[
     RowBox[{"f", " ", 
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "-", "\[Psi]"}], "]"}]}], 
     RowBox[{"4", " ", "m"}]], "-", 
    FractionBox[
     RowBox[{"f", " ", 
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "+", "\[Psi]"}], "]"}]}], 
     RowBox[{"4", " ", "m"}]]}]}]], "Output",
  FontFamily->"Times New Roman Math Dot",
  FontSize->15,ExpressionUUID->"88368874-35cc-e14f-a0b0-33862b17fe62"],
 StyleBox["\n\n",
  FontFamily->"Times New Roman Math Dot",
  FontSize->15],
 Cell[BoxData[
  RowBox[{
   RowBox[{"Z", "[", "t", "]"}], "\[Rule]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"g", " ", 
       SuperscriptBox["t", "2"]}], 
      RowBox[{"2", " ", "m"}]]}], "+", 
    TemplateBox[{"1"},
     "C"], "+", 
    RowBox[{"t", " ", 
     TemplateBox[{"2"},
      "C"]}], "+", 
    FractionBox[
     RowBox[{"f", " ", 
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "-", "\[Phi]"}], "]"}]}], 
     RowBox[{"4", " ", "m"}]], "+", 
    FractionBox[
     RowBox[{"f", " ", 
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], 
     RowBox[{"4", " ", "m"}]]}]}]], "Output",
  FontFamily->"Times New Roman Math Dot",
  FontSize->15,ExpressionUUID->"01feeb67-c491-3548-9a4d-7b17d88a9627"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.878991100431857*^9, 3.878991184871414*^9}, {
   3.878991234414964*^9, 3.8789913030712023`*^9}, {3.8789913582546396`*^9, 
   3.878991581166211*^9}, {3.878991724516187*^9, 3.878991739613547*^9}, {
   3.878991773901545*^9, 3.878991870737391*^9}, {3.8789926029953084`*^9, 
   3.878992636698899*^9}, 3.8789927320779896`*^9, {3.8789928409952497`*^9, 
   3.878992905339512*^9}, 3.878995919429066*^9, {3.9353293623332787`*^9, 
   3.935329381719551*^9}},ExpressionUUID->"6f70997f-58c7-48d7-a2e0-\
3bbece8d9250"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Rotational Coordinates",
 FontFamily->"Times New Roman"]], "Section",
 CellChangeTimes->{{3.878995909626322*^9, 3.878995915945773*^9}, 
   3.935329390777519*^9},ExpressionUUID->"213f8d8b-58bc-4378-8211-\
dc5cfbe7db8a"],

Cell[TextData[StyleBox["Defining the parameters of the Lagrangian as:",
 FontFamily->"Times New Roman"]], "Text",
 CellChangeTimes->{{3.8789973010838337`*^9, 3.878997314825804*^9}, {
   3.878998071658715*^9, 3.8789980733544583`*^9}, {3.87901778637593*^9, 
   3.879017789742855*^9}, {3.879020307608977*^9, 3.879020310975895*^9}, 
   3.935329398838684*^9},ExpressionUUID->"29abd8be-7767-4c5c-8920-\
8f4435cc8eda"],

Cell[BoxData["ClearAll"], "Output",
 CellChangeTimes->{3.8790203163883667`*^9},
 CellLabel->
  "Out[2917]=",ExpressionUUID->"d38ba872-8cf0-4998-b97b-05bb30b2385d"],

Cell[TextData[{
 StyleBox["Where we define:\n",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox["\[Tau]", 
        RowBox[{
          StyleBox["M", "TI"], 
          StyleBox["i", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "$\\tau_{M i}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fada0b66-98ce-994e-a037-c9d082013b7a"],
 StyleBox["  the sum of the aerodynamic torques of the four rotors\n",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Tau]", "\[Psi]"], "\[LongEqual]", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["i", "TI"], "\[LongEqual]", "1"}], "4", 
          LimitsPositioning -> True], 
         SubscriptBox["\[Tau]", 
          RowBox[{
            StyleBox["M", "TI"], 
            StyleBox["i", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["K", "TI"], 
          StyleBox["d", "TI"]], "\[CenterDot]", 
         RowBox[{"(", 
           RowBox[{"-", 
             SubsuperscriptBox["\[Omega]", "1", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "2", "2"], "-", 
             SubsuperscriptBox["\[Omega]", "3", "2"], "+", 
             SubsuperscriptBox["\[Omega]", "4", "2"]}], ")"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "$\\tau_\\psi=\\sum_{i=1}^4 \\tau_{M i}=K_d \
\\cdot\\left(-\\omega_1^2+\\omega_2^2-\\omega_3^2+\\omega_4^2\\right)$", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "96d585f7-0384-ba4b-abb2-826693344890"],
 StyleBox["\n \[OpenCurlyDoubleQuote]\[Tau]\[CloseCurlyDoubleQuote] as the \
vector of corresponding moments in the direction of the angles of the frame \
of the body\n ",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
tcKZhpm771fQeZQlbhjWysLGdcH57JrdbpnkWdcAwyxHnECYfhDZRydY6ek1
GRsq9+GhHGbK0c2rSLFu780cEqtqaomqAvxVUF+JyI1c/Z8qrDwvjZ3n2Azm
yCioJLLow5kfLbHGA/f/h7y4qhSNiEziitmJa11NMPqggOcK+w6cVVxQWMqt
7Sr7vl8nE0mPPPSYkgxtVRhX5rUyxEz7+T9DmlfXRFa5jmxIhaamqCTwXuzs
ZSrpkfsEvVR4V0FkZFQSmcg8McxCMmo8XDlqFLNq/cQCFauCtURkXor/AFOs
Yc8NDySDDsWbHsmOlPt0m2vFdPBPxdPBqrDu+XU2xmgdV8YpyJILOBzNprIV
RUXwpe94cjhcXEBm3MF9ukV6U8wHhypOHIDIyKgq8nALzNjZO5ohvdXC9JPr
ghKq/cqc97di36m0sY12iCx4GzzCHKM5+8Qyy7nZ/2WVIY8picyjIywwzPQH
/+dk+zH+y12DzDBDh7mX5ecQGQnBc2YEJGuw5EtBVNx3N0OWTBzSd8CQCcsO
3M5Qfp2sRG9nY0yvmcdlxTkKEBkZ1ebIjGuz7Q0wQ/vxQYl5zNyEnR5jA6sv
shRe/G3GYfJdURW0QmRR9rGJ1noGLTz+yS56cHTjjsgP6OOLkpvzHAwxWodl
CSQXoUU5RyVfqm877W95b+2Ki+J2jLMxabMgthQ5HFWRHxX3YfDcyfM2/xl6
YP2M3i3pLdx3PVamMuP6zBYGmInLmgeKC0pAZGRUE1nwLmS0tR6G6ZtY2Ng1
NbfquuJWlfw1IcCzz86cvO8FS+YKq2K0QuSyON/2NEzfosvPnp4rDsTnq5Lj
4b8JdjOTrpmSLbVmRMx3MNS3mRwmJ6UkKogNXrfaq7+N4zwNiiw3Ktbj06GR
7zkCgVAgYKUemWxr1mtrrdx9dYiMw5KRnJ71+JM5igfiIDIyl0iXR1SDyAmf
72LWwMjIiGZi0WX2sZefFyQFJW+iw7Yv93BqPXzempCrqUWIFQRU1wKQEpn/
/sSsbs1buIzyOZmci6sYCvPuyo40zLTnthRSY+uKqai+nYec5SpRXnTQhn1x
qedG22pSZPlRifCS0s/jFP6rHf2b9VQmMvPOcifJHemj9I6AyMisJlseUROi
KOVC0MrFyzaFxrz58oPiKQen/jBqbdTTs54egVHhKwa5TNhzH2mxmepaAJLJ
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
+pi/FkvmXYIvp2uKvmRgxYRkRiYg2RmVxMx2sKH07SfNiSy5dObTQ9PaN6ws
xDZpPTnkIUUHlCtFo3U9dQNERgY9h0vkhM93MWsgfc3HxKLL7GMvK3IkIuab
qCP79v2TkFGx1kIw3zx8mldx2L2o+Pn1I8EHwpPIpXt0S2QJeGaET98mX9aj
hm5JIL+0rEY0W9dTN0BkZFRZjCGKUi4ErVy8bFNozJvSynPqhSWvr6wZaNNq
zJ4XEpVLby8ZMC40TVguKrq61NWm7S9/JuRwSTVfnRNZ+qrjg+AJDkafqrB/
C8+olwS2Zut66gaIjIxqq6piIR/H8RrDZXHpXZ+OxuYjQ94JJCLPdx1+UCJy
aYxXO6Mm7sczCZJm6qDIEljJ24c20TO0GbT2Btn3otSPJut66gaIjIw6yyPw
l4F96A3a/i5pHJUiC9NDh5sb2M+8TvobdFFkPP3ish6mDVtP2f+ovibINaG6
rqdugMjIqFNk0YfTY5tgVmPD88SVIrOT13Y2MXFZ84Ct/OMf0TmRxWVP/5ra
1tSi5+IL9ZqyrgbldT11A0RGRq0Fi+yk1d1M6H12v8QrRWZE/mpvaD3p5AfS
P4mOiSzIi9k4pFkj+1H+dwrrexG5CpTX9dQNEBkZ9VYeM2N9e1g6zr2cX1wh
8ruyZ4EDrVpNPvReqPyzn9ApkblvT8/v0tis06xjqdo1hFVa10MIBVzpipSM
n0HAkfx7nkAolP5/AjaLrf7SThAZGTW/QkDkXF83sudk/7NhM7sN3nIh1Gtw
79lHnpIeV5frkshixoOg8a0aWQ/wu5atdQNYxXU9/NyHZ7eNd7J0+Pl0jR9C
XHI/cMz3zX6Yvetc/Fsm+1nI+J7j9qao+40sEBkZtb8LJMKLXsee3j6vs5X9
mNV/RTzMZpPvjaXoisiCrKu+/a0aOU4ITi7VkgRXVeTW9XyCKLoyt1MD057b
qm0iRuTFbhnS1Mhq/F+vuNIeWVTy4OTeE/cZ6hYOREaGkpf6CGFB1FzX4fsk
vzbyT6EbIrNfhM3sYGre3Stczk7VFCIS4lzlXyq7ruczzNvbPd07WjrMjS75
/O/46RG7Fv/Y0dJqzJ9pkqczQQh5HHYJR6D+nwpERoait3M/ryMjowMiE4Vx
20Y2b9h8xNbYAvQEl1DWw4/sVFQsYGfGHfZbGnhf+fqwzLqeT7Dv7d4Q/Nev
rZqOOlZZ+sVJDd++488dM763GrHntUAy+n4auW/usP6zj75W/7FyIDIyFSJH
FYtlUYe/tvT2skETQpWILPNLGdFfucjSvXF7WDTq8EvYcxW2E8D/i7v5sqSG
/lySU1ExOz3+9Jaf25g5/Erq2SyzrqfiC5OD1x9+krzF1brbxsfSNJ249OHR
rYGRz64sbdfELeB5hbrCDycnt/lhXSJKBoQkIDIyEpGbTzr2NEMGWQV1GTRx
WSyFvZFYWJQt61tTTnq0/HpFFpc92j+ltWmTviuvZqmSzGXfXTN88pGaD0Dy
U1GxUJh9ekyzOg6yeCn7/whJ4X74+6em9r9eY5QT+bdDtuy/XVAa5+vSpO+W
Rx8fKMUR8zt0XnFLne+wVgIiI3PJo2VDU2tZ2Pb0iSlR/heoSlncmj7NZX6x
acMWk85+lSILcm+sHWRj2mpcUBJDpfiLb/i4dph3s9ptR52KFkVMsGtZJ5H5
Lw+u25PMKS+NXdTaeuih1+8iA7cefVgq5iSt69mkx9pPXXBZ9HIXpwURlGy1
AiIjw3z9OFkOT9PYFJYwiDjpKQ/lfPNjCvdtrtghBGUrBdJUbGxt1rjr/DNv
VViOERMCxv3AMXYWA/a8rtKX156KCthy+NTq6yyy8O2RP3beZUmG+am7ejd1
muqzxj88VSIv7/G2/lYuvnEf33Zkx692bTMzPBenQjaqd5fQRUTyoXjVRKzg
q6n7VoJJxUkT5QQjYddPLU0sB665nsmRtR+WXHCcx+Uw819E+E9xsdA3sJ91
tbqD1aeivBeHZg1wlcHgxWczK0bkdRJZTAi5Lw8v94uU7mUiLjg3sWnj3isv
vueLCCEzeftAC8fZl4sqXn/hpvj3bTkq6M7d2EcFKqQ0lUD17hKALkDBSRN4
xmXvPpYGhk17/7J6qz95tm3dsGbFol/ce7WzMTOhSbfsMO2143n1taOaU1EK
e2QRO+P+paDf+nf32BuVWiQsZyZsnr/lRp5QWPz6Tvi2qZ0sGn//46azD7I4
4vKyu6t7te27+Oj9HCq27KN66QLQBdS94CZmpYRO/7QLiH7trbCUYWRkaKBf
ubOXvu3Uf6ufrFprKkrp0FrSIwt4LBZXSHyc2/DY/AqZRJUlmxyB8NMLqZJ/
ZOMCasZOIDKgHPWKLC6O3Tz8875cdaXWi4U1p6K81COeg3vLYPiyC1lfhtZU
HG6lQUBkQDlqFZn/6uCk7+mmaoLuOPWfvKqtV8ZUVHGPTAhzz41r1nzqpXz0
ojrtAUQGlFO1BEaa0qtbDYwYLyZ1qDlJSqrrhzgVFeSnRIbM72Jl7brorxvS
Wa72Uy9VQYAuULUE5t69e+qrgaEExKkoIRTi0rksLrPSU9uor6ogQBeoWgLz
3Xffaa4GBqhJfVUFAbpA1RKY48ePa64GBqhJfVUFAbpA1cIToWQEqsEaGKAm
9VMVBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAv8fykH
FfQ=
     "], {{0, 131.89372455203664`}, {230.27931367733964`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{100.9904, 100.9904},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{230.27931367733964`, 131.89372455203664`},
   PlotRange->{{0, 230.27931367733964`}, {0, 131.89372455203664`}}]], "Input",
  ExpressionUUID->"059cf680-8814-654b-b8af-3956a80629d6"],
 StyleBox["\n \[OpenCurlyDoubleQuote]l\[CloseCurlyDoubleQuote] is the \
distance between the rotor and the center of mass of the quadrotor\n \
\[OpenCurlyDoubleQuote]",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "i"], TraditionalForm]],ExpressionUUID->
  "e78e3530-963b-6e45-9de5-adbdbdd0d778"],
 StyleBox["\[CloseCurlyDoubleQuote] is the thrust force generated by each of \
the rotors\n \[OpenCurlyDoubleQuote]\[Omega]\[CloseCurlyDoubleQuote] as the \
angular velocity transformation matrix\n \[OpenCurlyDoubleQuote]\
\[CapitalOmega]\[CloseCurlyDoubleQuote] as the vector of angular velocities, \
to \[OpenCurlyDoubleQuote]mI\[CloseCurlyDoubleQuote] as the inertia tensor of \
the quadrotor\n  \[OpenCurlyDoubleQuote]",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox["\[Eta]", TraditionalForm]],ExpressionUUID->
  "296a11eb-184b-8645-a097-4251e54a8cde"],
 StyleBox["\[CloseCurlyDoubleQuote] as the rotational coordinate vector that \
is defined as : ",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", "\[Theta]", ",", "\[CurlyPhi]"}], "}"}], "T"], 
   TraditionalForm]],ExpressionUUID->"502f412a-fa76-1548-ae91-8baccaa6a520"],
 "\n  \n  ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 101.95028438346615`}, {252.3804242779512, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{100.9904, 100.9904},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{252.3804242779512, 101.95028438346615`},
   PlotRange->{{0, 252.3804242779512}, {0, 101.95028438346615`}}]], "Input",
  ExpressionUUID->"d3f66498-956a-cf4c-b6fd-e146afa67174"],
 "\n  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[CapitalOmega]", "\[LongEqual]", 
         SubscriptBox["\[Omega]", 
          StyleBox["n", "TI"]], 
         OverscriptBox["\[Eta]", "."]}], TraditionalForm], "errors" -> {}, 
     "input" -> "$\\Omega=\\omega_n \\dot{\\eta}$", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "86e53cd3-45fd-9742-befc-d2ad762734f6"],
 "\n  \n   ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["T", "TI"], "rot "], "\[LongEqual]", 
         FractionBox["1", "2"], 
         StyleBox["I", "TI"], 
         SuperscriptBox["\[Omega]", "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "$T_{\\text {rot }}=\\frac{1}{2} I \\omega^2$", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2f80aa54-43e7-b140-b995-32931f6f7364"],
 "\n   Where I is the Inertia tensor \n   ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQ1QFOcZgG27Sp04RmxEEURJNeVibTSpktBopgk22knixIwxVYSSiE6c
kU4jVdoxk7SmM9bfMjg2Ro0HCkRQRCwBIuEniYqCDRCRQ+XnBIrkgAN2l7vl
9va6HCEl3GJ29777dvfufWYScSH6ZPee/bvb7wt9/Q+rN/1w3Lhx237M/2t1
7I5fv/VW7J9fmcL/Zk38tjc3x8dtXBmfELc57q0nX/8Rv/AI/89PfjBu3ODX
DgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw
BH1jQyvtBsin/z4bllNaTvuYcjfMneIfKMSsp7YXm5X2A+TR+9nOpbMFN+vU
KT/93Zl2SMdNTLkvzwz8za6P8lz5uLiq26a0HyAPm/mrko8FNurpv68Mmvli
FoTjLnw4QaExBSZWCLvSdoB87IKbtPPixrlBEI77OMP5/cVupT0APJiLIRwk
QDi+BYSDCAjHt4BwEAHh+BYQDiJkhWNjGKuFIr+FtjDMgIcE3UM7pphUIRxE
yAjHaiw5sXtH1LLgqVMG8Q9e9NvNbx/Ku6W+t0u1Y4pNFcJBhOwjTuvp10Im
EMSEgBf2lZtUux/XjikmVQgHEXKvcVjjsZUB/CYOiU4zqvvtHu2Y4lCFcBAh
MxzOlP3GHD9iQtC61DZ1vxq1Y4pFFcJBhMxwegr/qJtIEAGrjjSq/FM52jHF
ogrhIEJeOORnf1k0iSCmRh64yXjGCxXaMcWjCuEgQlY4/ZW7fvUgQTwYsauy
30NeiNCOKSZVCAcRcsKx3twf6U8QkxYmlpGe8kKDdkxxqUI4iJARjq3hyEsB
BDExLD5f5Y/raMcUmyqEgwjp4djbTq0LGk/4hb5x9mt1r37tmOJThXAQITkc
zpS9MdSPGD/ztdRWdd/e1Y4pRlUIBxGSwzHnx4dNJIhpL/2rQeW3d7VjilEV
wkGE1HD6yhIXPkAQ/s/tu2H1pJf7aMcUpyqEgwiJ4dAVf3tqMkFMfvKv11T4
ScmRaMcUqyqEgwhp4Vhr9j7rTxAP/GJ7aZ9nvdxFO6Z4VSEcREgKx/LlvuVT
CcIvNPZ8p4e93EQ7pphVIRxEmHJfCJwd9X3hcAzDWOmWf2/75SSCP6dYnHip
y8owarzk1o6pMqrm4t8/HLgyE8JxF8POWcT4sH803veHuqvOJu/aHv2cbobz
KaspD+lWbNq55/inzaMvZVkbY6FI2rnxWStNkpRNcJmnsLtjOriIpij2m59g
SJJmHR7DLdUhvf9DWcWG0Hzw535E0LZqld+fVz/OcH72PeEM7Rwt9MjnegV2
jkx7Rdbezc+Hv3qo2kI3Fu5eG74k5tjlyy7L9Lc99yFG2aZRB7Mz9myJjNhw
tHHw8TG6Kmn10ui0Zg8+9SZ/pepvd195b8W8YCeB06aHrdr9Rae4FJoPLvAj
ZkI4bnPv9PKAoFdyTWj+NNbW35geo3s64Vj6iczLt27VN/XZhZah+dsQmw7Y
Oou3P/ZIbF4X/33OUq/fGn+8TgV3sgVUyboLKTk17V3m7taqnMOHLhhIsUec
rvz1s6c/m9IKp2puMjSSJ8JRbtiWlJeD50WfMtCcg7NzYy5THlcr9u6HK+dG
ftAweJjpqcx4P6tBJY9Zu6oyVv400nrv2pnUvBtmCWeUPaVvPhIMNwfcB/3w
UN1FCYtCXjzawn7PMuVxterKj9Etfuc6zfVUZaecr1XPG0ACK3CgszpXn13Z
wZ/2SqgAwkEEwnDs/BkYR9YV6N+NWqDblNvpYBlWaBmCv8oDps5vkFd3PDE/
rrC+4mz6J7dV8QDPGKpsr6Eg9aPPWy38EchitthEdwDhIAJZOAMdhptNLdfP
ncqva8mJe/TxxIKaKwWFn1ePXlZU0a7w+Y+Q6TdWjCF52ZyIrUmnL7ep4iRN
WPW/PXfykg9klDd1mEwdDSX6tLJ7oq8aIRxEIAvHcHxDxDMxSSVGi8PecS5+
aXjU/sLiIy7LSoxKX25bBEyHrbi2tHXL1qd+1auO15WgavPXFUlr5s+YNmPo
ptqshbEpd8UfxSEcRKA7VRugSKqfGdr1cf0kOfi10DLlEbBibfxvWaqpNPNk
WauKBicQXIEcM2LAT5KkpKxTCAcRMHY0D2O8VFR+p/biyYwyI+XdLykIBxEQ
jsNBVyevWbJ8y+HSZkoFdy48C4SDCAhnEP7ch7Kq4X6fx4FwEAHh+BYQDiIg
HN8CwkEEhONbQDiIgHB8CwgHERCObwHhIALC8S0gHERAOL4FhIMICMe3gHAQ
AeH4FhAOIiAc38KLw8Ez3/0wcsLBa+gO2jHFpeq14eCa734Y6eHgNpSPdkzx
qXptOLjmux9G7hEHn6E7aMcUl6oXh+PAMt/9MOJG8nQBo6GbaMcUi2pPadzc
md46kieO+e6HMewMHe83//sGJBwNTkP30I4pHlXjPx+fOCEkwTsHJMQx3/0w
8gYkxGnoHtoxxaPanR/ltQMSSprvnhOP4H8va0BCSYaKoh1TTKpefI0jZb57
O9lUVyuO+haL0OFZzs0BKYbKoh1TXKreG46U+e7tbZnRuumiCAr/U7HQPOAy
wpFiqCzaMcWm6rXhSJvv3tJadj5LFGfyrpmE7m5KD0eaoZJoxxSfqreGI3m+
e5tohIeikByOZEPF0I4pRlUvDQfffPfDSA0Hv6FctGOKU9VLw5E+3z0jGuG3
oaWGI91QKbRjilPVO8OROt8913cjfd8uUfw9+UKTReCPkBiOVEPl0I4pVlWv
DEfyfPf2tswNYQGimLkkAcFdNcmGiqEdU7yq3hiOnPnuOVI0whtFUjhyDJVB
O6aYVb0wHLzz3Q8jJRxlDOWgHVPcqt4UjiLz3Q8jKhxFDSWhHVOFVL0pHLHz
3XsEEeHYuxU1lIB2TBVT9aZwxM137yHEH3HEGLI2xkJT306WwfA/yToXUiTt
/HHWyv8plOf+39w3dVmoTlXnryMml7KKLMGbwlEUlIN1WNsqsvZsiYzYcLRx
8E0juipp9dLolIorWXs3Px/+6qFqC91YuHtt+JIY/W2FP6osaKq/esV1YVqz
wk+MCqqmNZuvvLdi3tBkhoHTpoet2v1Fp6i3TiEcRKAd5Ya1dRZvf+yR2Lwu
/jecpV6/Nf54HW3rb0yP0T2dcCz9ROblW7fqm/qUfyd/DFOBhYqf5Qmp/qf6
QkpOTXuXubu1KufwoQsGEo44eEE9PBR798OVcyM/aBjcO/ZUZryf5fyKbUl5
OXhe9CkDzTk4uzo2mqCpsL7SCFkxVv58zXrv2pnUvBtmmDwXO8jHVevKj9Et
fuc6zfVUZaecr/3m3aPuooRFIS8ebVHTpGeCpsL6SiNoNdBZnavPruzgT3vF
ZwDhIAJ5OOTVHU/Mjyusrzib/sntfod9cJZksq5A/27UAt2m3E4Hq5oZA0eZ
3meh4rhasb2GgtSPPm+18Idwi9liExsChIMI5OEwhuRlcyK2Jp2+3DbgGOgw
3GxquX7uVH5dS07co48nFtRcKapoV8PpzyjT+y5UnFFWHH0nL/lARnlTh8nU
0VCiTyu7J/aqEcJBBPJwuLa0dcvWp37Vy28ai+H4hohnYpJKjBaHveNc/NLw
qP0lRsWvtr9hpOn9FyrOd6y43oqkNfNnTJsxdFNt1sLYlLuij+IQDiLQhcPa
+L0eSzWVZp4sax2+3TxAkVQ/M7Q75PpJcvhrRRE0FVyoOMJWHEN9500cCesU
wkEEqnAY46Wi8ju1F09mlBkpVW8VQVN16nvACsJBhMyRPEdDVyevWbJ8y+HS
Zkot1/5jIGiqTn1PWHn1SJ44kTeSpwD82QNlVc0ds/shaKpOffRWXj2SJ07k
jeQJaBVvHskTK7JG8gQ0C1zjIAJmZPMtIBxEQDi+BYSDCAjHt4BwEAHh+BYQ
DiIgHN8CwkEEhONbQDiIgHB8CwgHERCObwHhIEJeOINzi1uokQO0qHUadO2Y
4lGFcBAhJxyrseTE7h1Ry4KnOkcE8w9e9NvNbx/Ku6WS54xHoB1TXKoQDiLk
H3FaT78WMoEgJgS8sK/cpNr9uHZM8ahCOIiQfY3DGo+tDOA3cUh0mlHdH7XV
jikGVQgHEXKfx+FM2W/M8SMmBK1LbVP3q1E7pjhUe0o3wvM4KDDsnEWMD5P+
PE5P4R91EwkiYNWRRlUOaf5/tGOKQ9V4cIEfEbQNnsdxF8POwB8ScyWHQ372
l0WTCGJq5IGbqnk+XxjtmGJRNR7Ujf/R9LcgHHeRF05/5a5fPUgQD0bsqlTN
2GPCaMcUjyqEgwhZ4Vhv7o/0J4hJCxPLSA95IUI7pphUIRxEyAnH1nDkpQCC
mBgWny80raiK0I4pLlUIBxEywrG3nVoXNJ7wC33j7NfqvjmjHVNsqhAOIqSH
w5myN4b6EeNnvpbaqu7Vrx1TfKoQDiKkh2POjw+bSBDTXvpXg8pv72rHFJ8q
hIMIyeH0lSUufIAg/J/bd0Mtg0CPgXZMMapCOIiQGg5d8benJhPE5Cf/ek2F
n5QciXZMcapCOIhwfnLgZ6LDsdbsfdafIB74xfbSPo96uY12TLGqGg/+fAIx
Ez454DbSRvK0fLlv+VSC8AuNPd/pWS930Y4pXtWuj9eGBMBInu4jciRP59zi
dMu/t/1yEsGfUyxOvNSFb0p5SWjHVBFVc/HGuUHw6Wj3EfVYgb276mzyru3R
z+lmOJ+ymvKQbsWmnXuOf9rscinLfGfiFivnYG2MhSJp58uBtdL8Qk++Mtww
HRSlqW/nBeC/TXt0DHZ3VqrAEpFAOIgQ+TyOc+dooUc+1yu0c6SuvLdi3tBE
YYHTpoet2l1SezVr7+bnw189VG2hGwt3rw1fEqO/7clPW8o0fS+n6PSeLZER
G442Dj48RlclrV4andbs0Wfe5K7UL4yXRi/pFHvNAuEgAulgHXTdhZScmvYu
c3drVc7hQxcM5OARp78xPUb3dMKx9BOZl2/dqm/qU8GFqYApa+ss3v7YI7F5
Xfz3OUu9fmv88ToV3Md2VaUEVrNYIBxEIB7lhrHypzfWe9fOpObdMA+f6bAt
KS8Hz4s+ZaA5B2dXySYTMGXvfrhybuQHDYOHmZ7KjPezGtTxkLWrquBqFgWE
gwjkw0MNdFbn6rMrO/jTsW83TndRwqKQF4+2qGveJlfTrvwY3eJ3rtNcT1V2
yvla9bz946oqtJrFAOEgAm04bK+hIPWjz1st/KHFYrbYWP6sjCPrCvTvRi3Q
bcrtdLBqmfRstKnzhURe3fHE/LjC+oqz6Z/cVs3jO66qgvLigHAQgTAcjr6T
l3wgo7ypw2TqaCjRp3164+bNppbr507l17XkxD36eGJBzZWiinblz39cTMvu
Oa+7GEPysjkRW5NOX25TXnIIV9V2UlheHBAOIpCFw/VWJK2ZP2PajKG7PbMW
xh4tOboh4pmYpBKjxWHvOBe/NDxqf4lR+cttV9OUu0PHQa4tbd2y9alf9arl
ZeWqqq8tH0NeHBAOIlAecZgRw1CSJGV3DFAk1c8M7Q+5fpIc/lppXExZGy/G
Uk2lmSfLWlU1NIHrSnVdIgUIBxEwdjR/hma8VFR+p/biyYwyI+XlrygIBxEQ
joOuTl6zZPmWw6XNlEruXHgQCAcRQ+F80sUJobQcLviTH8qqlvt9yBDcpN2f
QjhIGAxn9trUaqMALV8PwPrVKJyts1Vom9akrX8YwkGAKXf9w5OnBAox66kd
xWofGwYYg97P3l46W3CzTpkcuvYMhOMubF/9l5VjUN3oAyf9Xoqdbq65PsZ2
/bK+F7ar+9jHBnZLGoa7z4ZV2g0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAPMv/AFJYDio=
     "], {{0, 109.07967489979247`}, {196.05823919897338`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{100.9904, 100.9904},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{196.05823919897338`, 109.07967489979247`},
   PlotRange->{{0, 196.05823919897338`}, {0, 109.07967489979247`}}]], "Input",
  ExpressionUUID->"f1789047-e00f-8348-95c5-3d78e500ac7d"],
 "\n  Now the Euler-Lagrange equations for rotational motion are:",
 StyleBox[" \n  \n",
  FontFamily->"Times New Roman"],
 StyleBox["  \[Tau] = ",
  FontFamily->"Times New Roman",
  FontSize->17],
 Cell[BoxData[
  FormBox[
   StyleBox[
    StyleBox[
     RowBox[{
      RowBox[{
       FractionBox["d", "dt"], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"L", "(", 
           RowBox[{"\[Eta]", ",", 
            RowBox[{"\[Eta]", "'"}]}], ")"}]}], 
         RowBox[{"\[PartialD]", 
          RowBox[{"\[Eta]", "'"}]}]], ")"}]}], "-", 
      FractionBox[
       RowBox[{"\[PartialD]", 
        RowBox[{"L", "(", 
         RowBox[{"\[Eta]", ",", 
          RowBox[{"\[Eta]", "'"}]}], ")"}]}], 
       RowBox[{"\[PartialD]", "\[Eta]"}]]}], "Text",
     FontFamily->"Times New Roman Math Dot"], "Chapter",
    FontFamily->"Times New Roman Math Dot",
    FontSize->36], TraditionalForm]],
  FontSize->17,ExpressionUUID->"102f4478-74b7-e744-93d7-1840c11c69f5"],
 "\n \n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
EEIIIYQQQgghhBBCCCGE7MT/ASghoHk=
     "], {{0, 75.}, {350.4, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{350.4, 75.},
   PlotRange->{{0, 350.4}, {0, 75.}}]], "Input",ExpressionUUID->
  "9cda0e43-718c-c14b-bd5a-293073075b99"]
}], "Text",
 CellChangeTimes->{{3.878999527207488*^9, 3.878999546566629*^9}, {
   3.878999598582442*^9, 3.878999630343187*^9}, {3.878999661409255*^9, 
   3.8789996767440386`*^9}, {3.8789997291349106`*^9, 
   3.8789998734706287`*^9}, {3.8789999815746393`*^9, 3.879000011958141*^9}, {
   3.879000066446086*^9, 3.879000069950686*^9}, {3.879000186957074*^9, 
   3.879000742195122*^9}, {3.879000797499174*^9, 3.8790009048925467`*^9}, 
   3.8793531614658*^9, {3.879353209421022*^9, 3.8793532101700463`*^9}, {
   3.879353244459539*^9, 3.879353245781893*^9}, {3.87935334454309*^9, 
   3.879353362832951*^9}, {3.879353393143339*^9, 3.879353412224239*^9}, {
   3.879353464606314*^9, 3.8793535544843407`*^9}, 3.9218666116405883`*^9, {
   3.9353294114976826`*^9, 
   3.9353295073913383`*^9}},ExpressionUUID->"92198bab-e530-42a2-803c-\
49a6670a4c5a"],

Cell[CellGroupData[{

Cell["Rotational coordinates", "Subsection",
 CellChangeTimes->{{3.879411980251128*^9, 3.879412026279672*^9}, 
   3.9353295172685223`*^9},ExpressionUUID->"5e776090-f5bd-4761-9457-\
b1664facf8e5"],

Cell[BoxData[
 RowBox[{"c\[CapitalOmega]", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.879412038942665*^9, 3.879412080838742*^9}, 
   3.879412672818511*^9, {3.8794127734244337`*^9, 3.8794127893089137`*^9}, {
   3.879425451380355*^9, 3.879425563828481*^9}, {3.879425627979355*^9, 
   3.879425660803975*^9}, {3.879425787482764*^9, 3.879425814608942*^9}, {
   3.879432313796494*^9, 3.879432314199036*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"633e8a5f-8314-4dd3-868a-8b8ec6602b12"],

Cell[BoxData[
 RowBox[{"c\[CapitalOmega]t", ":=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], "}"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.879412219844127*^9, 3.879412240511197*^9}, {
   3.879412317793739*^9, 3.879412365276273*^9}, {3.879412667823517*^9, 
   3.8794126687974043`*^9}, {3.879412793919468*^9, 3.879412801079423*^9}, 
   3.87942558462545*^9, 3.879425673743474*^9, {3.8794258226709585`*^9, 
   3.879425823662838*^9}, {3.87943231993661*^9, 3.879432320489008*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"d464a00a-c726-432a-9042-e33f23720164"],

Cell[BoxData[
 RowBox[{"minercia", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["i", "xx"], ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      SubscriptBox["i", "yy"], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      SubscriptBox["i", "zz"]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.879412453149348*^9, 3.8794125326972237`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"b040d8b1-0f71-4b38-b78e-ae8cc641ccaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lagrangianorota", "=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{
   "c\[CapitalOmega]t", ".", "minercia", ".", 
    "c\[CapitalOmega]"}]}]}]], "Input",
 CellChangeTimes->{{3.879412550855973*^9, 3.879412580611742*^9}, {
  3.879412682286783*^9, 3.879412682490741*^9}, {3.879412816171805*^9, 
  3.879412816963654*^9}, {3.8794246737963505`*^9, 3.879424675594281*^9}, {
  3.879425839552664*^9, 3.879425851251083*^9}, {3.921866764373495*^9, 
  3.92186677119812*^9}, {3.9218668572085114`*^9, 3.921866878141901*^9}, {
  3.9218669272543545`*^9, 3.921866933267597*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"50696463-e322-4f91-86c9-6efa3a6921ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["i", "zz"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{
      SubscriptBox["i", "xx"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], "+", 
     RowBox[{
      SubscriptBox["i", "yy"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}]}], 
    ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9218668787265224`*^9, 3.9218669412991676`*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"75d2af8b-9a6d-4c4e-a440-2dd305ed0610"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<VariationalMethods`\>\"", "]"}]], "Input",
 CellLabel->
  "In[170]:=",ExpressionUUID->"d5d41cbc-ca33-4bf0-b2dc-2037182d2dba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerEquations", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["i", "zz"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
      "+", 
      RowBox[{
       SubscriptBox["i", "xx"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
      "+", 
      RowBox[{
       SubscriptBox["i", "yy"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}]}], 
     ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.879412866716279*^9, 3.879412887686689*^9}, {
   3.8794242022365484`*^9, 3.8794242337611427`*^9}, {3.87942468114584*^9, 
   3.879424687328134*^9}, {3.879424720233259*^9, 3.879424731851183*^9}, 
   3.879425606563072*^9, 3.879425691933214*^9, {3.879432335941717*^9, 
   3.87943233652506*^9}, {3.921866794620949*^9, 3.9218668692126865`*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"a79ea0cc-502e-40bd-983d-0de2bc24d4b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["i", "zz"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["i", "yy"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["i", "xx"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      SubscriptBox["i", "xx"], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["i", "yy"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Psi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      SubscriptBox["i", "zz"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Psi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["i", "zz"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
       ")"}]}], "+", 
     RowBox[{
      SubscriptBox["i", "xx"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
       ")"}]}], "+", 
     RowBox[{
      SubscriptBox["i", "yy"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
       ")"}]}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.879424687703971*^9, 3.8794246970204315`*^9}, {
   3.879424732888826*^9, 3.879424734938937*^9}, 3.87942487968849*^9, 
   3.879425609430104*^9, 3.879425696469021*^9, 3.879432339271866*^9, 
   3.8795969884509215`*^9, 3.879850260069878*^9, {3.9218668083199577`*^9, 
   3.9218668435715847`*^9}},
 CellLabel->
  "Out[225]=",ExpressionUUID->"de54a3a6-d808-c547-af16-c9f617e4c80c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VariationalD", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["i", "zz"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
      "+", 
      RowBox[{
       SubscriptBox["i", "xx"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
      "+", 
      RowBox[{
       SubscriptBox["i", "yy"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}]}], 
     ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.879424961314309*^9, 3.879424966442213*^9}, 
   3.879425724681032*^9, 3.879432343678712*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"bb3ac104-57cd-4ac2-b53e-55b1bcc12cfa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["i", "zz"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["i", "yy"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["i", "xx"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["i", "xx"], " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["i", "yy"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     SubscriptBox["i", "zz"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["i", "zz"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
      ")"}]}], "+", 
    RowBox[{
     SubscriptBox["i", "xx"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
      ")"}]}], "+", 
    RowBox[{
     SubscriptBox["i", "yy"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
      ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.879424967543594*^9, 3.879425725685622*^9, 
  3.879432344784687*^9, 3.879596988549489*^9, 3.8798502602296567`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"fa322f0f-16df-4538-ae24-2b6e82291a4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnfk7VP3fwO/neX55fnz+A2POmDH27NFCKllKSEaUlLVFhbENMfZtDEpE
iihbKG6KkPtbqAgpKbRYuqJcjCydueac635mLBmzMMoYo8/rmrvrNufM53yM
814/78/7yJ44Z+X633/99Zf3/7L/sXLyM/Tycgqw/j/2Dzae3h5uni7OJp4+
Lm4uXron/of9pgn7v33/9ddfnP//FwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAdQWV9AQAAImCTAy+ft7U2PL2y7RY
xkdHm1PIsdUj6ylpzFc3KOH3PjLX8ZIAwEYB/vB3LNkrNCW7uDQ/M/6crbVz
Yv0Qi/+0rpLE2Jg4Go2ekpxyKYlOj4+Li47Lb50Q5RJdV11cL3WIR2XMgjAG
ega/82oNdPh+oHNw7TdgtwF/Fui3aqonrZmxeOfDfbkntxlRHo3xCAPK+PSy
tbEy3BwHycgZnc168PhZ64vX/YyVZeb7E6r10Ws9/KpizZhpDN5BkMEbR7Xw
GWfGP0FW7gUDiPguDgBsNFgdCcbKeocSn8Pcb75M2IvfE9EC85/PbIsxgiDo
4JU+kQUF7kyyMItuFTDY2jEv13sjnvM73eiXIve95yu/ApsN+GOYKD+rglU9
kNy5xJjC9WRNwtbAJ3yyiHxKt8Fh8AYRraIGrehIkYue3Y1BcUsVMt7/bmBC
sLKZbvDfsS/qhVg1CwCwoWBOMKZ4PWTmc6oBHrJM/8grJ2NFzioysloXqkWN
lJGBG6QtTnnrmi7jB34StFOHXDcl0UkAAOsMOjXUVlteUFBa3dI/yf4ZrvXW
xGGNYtp4rDJcR9bCyRBPFoiaiEIGMkkKVlf59MPsMWTpICjvGyuPLvII0/e9
NHQDHwGLvSagY010pyMJLT8kPRFpBR19QLE/m/d2RnyXYA7W0U8fsvNNLW/q
fNvdUnU9il7VP5RDwkPQgcs9S+Vx9cE1o9RVTT+oiVeepjuuUwJCyI5Wbtmd
MyijsyQpOj6BTgs/e8TqTHb7pAgDr3IEdPCajbxpfKcYU3d/CmyhTrDZQUp/
KcbFjc0PymiOsjByznsnFlMz0Xb1+DbdE7ncimO6OTWBelZDFlLyKF8qH0j/
1dngOlzk4JrZGm6oQMr6vNSKIgM3g+Ofzvw7WXKSoEyi0EIuPxmZUxTTD700
FSwurzju6kfgeCBKTkUMEScOEALSX+ius4N8H2QhfxvWp/yTeiYhj8fX+KtE
+gtctkLqp0p5/kZwrZ8uUQZDOHjl/VKzPB9cnxc5uP53utxNUfVU+VJ3A/mQ
6U9ne/is7mQzHE7NKb//52Xgf/x1CRo+K8589SOwOuP2Ek0T3wCD/Tv8eH3l
kLrxxcdAPa4J6HC551a9M6WDa7gIi46UnVaXxRuEPef1BOAGsracDM6c1rVU
COaD6xP5Ild5oF9z7fC65LqlV2C+KCx6xWRPIPcYHtrNnVlH+jOscQTTxJXG
/YURkL5LFkT9i80gwv51mN0pB1X0/R+tKNWCa4TWEYlPQFTQz4Uu2ppupV/W
aq7IwDVbogzWIJjvTueEonIQZErnEeufwXUvv3ZBR6suZ3fweefo0HVbvL5/
g0Bhmvr7rDpWJ4A7l8UocVeEtlEei/g7rGYE5FO6NVE38DGQ618FHcp3UVN3
K/y80i24TI3Q+iDxCawG5F2apcIO8sM18sYn7ropQRi181W8PjU6nOdElFU7
fps3KO6/epgTXIcJ+LKQTzfOU/8RkNwbzT+K1/KuESRMcHPwNryiaymX8ocf
+ethlc/cE6UwdbUjID0p+4k7qQLKVgAiMfHIV1/eSJQigOVqhNYFiU9gdTCq
vfXx5sldaxEiooPXD7ONsnXGJx7ji/ResVKQ2xv9nFfex4tdhAXX008jT4YL
9HDhmgvqiieLv/MfYb1NMcPJH8pYjIzZIXC8MQFvlyOiT7K6EZgtYYYKlmkC
F9wAK4J+znNSJNpliPb9LVcjtC5IfAKrgtkWaySnT34oQExWzQwnWJZzKlpq
2dCR8nPaeGNqM99CEVw/G1w73eZNhKJjj8NMzWJ5V7rnYL2lmymYJb/jU0Wz
oTFubxTXx9iqxhZPMKV3/zwZ+dpReafmjWAPRaQRFpmu8FBWP1spxgXDzQzS
l2pJVHIuBvtnxALSe8mCqOiYP7wGXy/cGrMPr+dfyyXY0103HHV3ut3u4a83
+PE03IA/uJ4efJLlbawkLzzPDNf76amdqeQr9JqqPKuB1fLjzqgx7nooQzuC
GmGuc9QxGNyW0xW8O1BEHWERVhfdVMH++hC4L38FZnvcbpzycT6dDlgj2FHi
QYh4LGfF3IUozLzJ8dhj6EgredLR8by+OOmC1QHXuPsflgr15BO6uwPpkOEW
ggwGklUztnVwdDjq6GBvb2W+R4sox35TRt72qvA6lfFSD1XD8Gc81pzVlWAi
r+FZxR0a/ydwG1bFs2KS66SMo9pq2w0so/jr1EUb4Scc465onizIkEsr6Niz
m3GxsfGJNPqllOQUeiItLiYupVIcl2K2RuzGyh8TNUCa/1B7Xp7IdQ5rD/Nl
7k1BCl40pj73fBxdq8lPdpdGeJFDI6lnXIPL3gseldVJM8Ypkm6sleGZHnxe
kXMlOSnt9r1Hr76II1k8XnFKc19MO8+vg4y/7+7nFkDW6wQTAt4+l88Vgatj
EwRlsUUfgbMXtdBZyzrtvbQEXCLB/Nbb/uLp/XAzHCSDN/bKrWtqae/+IoYL
sd4lmxMgs9VpRdbrS0HXeJM36wfr7SVKes+vXZ71JsVCSQar51UtYgJ3GVBG
M83S0OVmL8wxLnlOmkdzBe8Yhhv8dOSWJoE3OHBLpMmukKblI1v0czYJTzBL
4ovEWd2pUbyp+dWNwFnTyz6y7VSJhPeeiAW2nt+LgyDLdPHpLPTLTTu8nCa5
bjXV4OhQTnD8C4mZa3T4NiX2V7PhrK4UC0UZ7NYLD35XrpGBImdNrZMLS4PM
5xEGxCPXBG9tHC88oSSrE1AvPQux6FgN2cTl1rI7NSfKzyhDBvxlI1PNKbH3
RMrWCBuBPUZj6AFSuji7OkgMdDDLTg6D3xUpRhGCH/lrYYl2OatSixN3KdQa
ySUpJytDQ0SvihTw+aF373/bD0cGC5y18Ca0lwsDcfLeOL4yrZ8HY4yxOIuk
t1J0n6LDVb7WFyqE3xnwE8o2rNo5nvwaOvoPLTjnjUgaTPAIbGbaEknH0l9J
jxpcDYxSV1UZWR3vh+ITIeRjmg2E1fNd1V44+J+wAAkmz+HG6IsFkk7yTT8J
2Q6pHMtbzErADQHaWEXXMsEKh1HsQpBVO/23dG2nmWpLdXfP7BJy/00+DDpg
Qa0fX/ouq7+zU9S/juAR0OHqICdK5ZqkGTcgs0GZjIJL4ZgYr1Hvpye7Sjvy
o43mnfpu3YJr3u25nOA6Y3HhRvgfnzk+1NP1+u3Qd/a506OjSyUKQfh+gcW3
UBZr+XsK/XzLURWj5FK4qN3QLzfs5WQ1z1cL1pBw40U9LME8ef2+tzVioqMg
t26d+5GWZNcNSpFjszpYLxP24AQVF60lEwVORBmCS9HKsSY63lVOD/TxCaSS
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
AACbgv8H0fUpSQ==
    "], {{0, 43.8}, {196.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{178.11089108910912`, Automatic},
  ImageSizeRaw->{196.8, 43.8},
  PlotRange->{{0, 196.8}, {0, 43.8}}], "\[IndentingNewLine]", 
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
EVS/NkbpfiHIUHMx+fUASkeGx2CwlE3NwbBJQOk47kRraUldH12LYzwcFnNx
ljgzIII/Qr6yzdAxs48hWRnF/F7gYvC7cRDaPOBUlbex8e06FbriDhCdNv+x
P7hRG51tPmukNT8qODQiFo/Dxz1KLHk3IbEzjzHcTE6KI2TkZGem4mLTnnVO
Sv059VNlblYOufRxASk7K+Ufz6AySWRL9lgTMSo673XH1/6er58biLG5nWij
4wIuMt33mvgwIPCfAJfTtl7+fnfC01/2z2AwrcZ9Hu4g8Zzu7/vuNvysqQTU
zqrcTBK5pDg/Jycz+Z5nwBNhpRldRaFuNts3bXcqEiWB40++ifc4Y75750Hf
qk/vK4gZxMzUmIDrNxPrRqQKx2gisY16X+dEBAaHBLjZ2F7z8wsIS3+lZCN2
X5qN4SnlgFWqwWo9wVRHZU5q4sPrN5IaJVsGke68tGrRLD7rC9HjxOmwhmml
h8UdyHY6fL1aRWR1rT0FESLB5j0KuvswFheHw8cmFr+fF2xTURI+OYOYk5kS
F5ta2TEnWLRnt7DaWGw+K6B1VuZl5hQVPy7MIWYT/rkaUDbMY3ST71222rF5
64XHQ2IdNMZ72R7dZ3joVuWnD8+ImVlZadEBPjcSX4+o8HTia9dnRwQHhAS5
nDrj5ed/534GSptQ2VrFtScTcITMbGJWMh6fUjHXXNFuWPGkI4WehvoXM3vn
PBPZZct64wC0tYQ/ixZ9l1gI0SF3I0SmwD0iFMt5LnRTYFQCNgeF7gYVlbC4
Q0C79uIinNWq35Y7KRYlzDTdM7fGQVrvBQi7msu7vJvPZmtzwT/S8zjI5cwZ
Bzt1P+euxDZMLHFgiT9W7GXwr22WHn63/e4If275OJlu+GPzOeWdaCJYn3DH
tlmlqlq9Rqn02fXbVq9SLSRW5Q1VhtpYXMv6MCX6YKB1Z182swptoooyjpTc
cbhOaKWIs8+yZ76WBZ69EPVqnD/L+pzg41cyiEi+F+jdWVfd80R1QPqKfI/o
627WNdTTF/+YepWgZKXlUT6S77p7hBZ2jDMnXsUn1owizKHaCEe7EAzLgDXu
81CqfLavM/Ao+1lTsboSrvsXD8gq3UX0cs0XPzg2MlZ7a7ehXaHkPSJAmIOl
HkZ6ln6EJx9FmXvZjK4Mh+0WEeJpeYwmEtqoveDuFfdQsthGCfEiGw3XRFw4
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
XEm36N/5HPoUQn8bbmP1oFn0O6XKd78NrpMpLm66b2XzoElcXHlr/0k8yiQ9
jzH8lhR+JzAcn0bMJRHLWgakL0Uurb+eGH3/wSM8LiYqNCzucdsPpij82njV
ff9oYk5SQmomMTc7NSm1pA1LAgUp7LG24sSHsZkZ4V5XQlNT4/GE4tZBGtaw
A9je2kJ/iQu47ipKj7vJ0PSSb2BMWbecKTksUZguLsJkIhzeXM4V9FIpgrHq
ML+YbCIhISWLSMpJTUgvbhvnCb+32oghl+2N//5b/+hFv/TWiYnWzBCP00a6
G/WOOvo8Kvsy3JQR4mZr/NefhuaX/GKfYXyZCG1UEh+Fz8iI8PAIS05NwCWX
oNqIP0p2NDwchjk6vSajZILpzrKY0AeJBYWRt/1wxHwiqbSxZ1p1diSkE3fO
8oH82lRVT4GPrkyJYN8+sLKKlBb7HrTCocR1FgmWGHHHPwKXSsrNIZU1D84L
9jUpOizyES4uJjLsHr64VSJY9GenBEabC8aqwv2ic7KTkpIzSSRiekJqaesY
TzD9Lkv43I11NxlYOPpltIh0cNf99J7Nm7YecfSNKvsy1JQZ5H5m52ahTlxu
xlYorXhhj70rjo+OzcgM9/AMTUmPw6UUtw6htwmVrVVce2LMvQexODwuMvQ+
TtZcUW9Y6awzHwtiYpIzCI+i01+o90xLQ5XvkqCi5altkFJbNBHDA/zD41KI
eTnEJ81yngvNFNiUgNFBqXCDSkpo6m3RxCFgbfjS2i+D38agBPbX5PNW/7xZ
S2m9gZWDg4iiJgi/chZzK6yOGKttjnmKAz2ibyVpzldxyCjZt5JglvE+3NIy
QtzlmWkMO3I4VLS6TVj8LsLy+ENp8b2jh+6qCATGl8bzFAfu5Cv+AyIO9Cm6
3Fw8TwGdxeWxpZE+OUphThdHwBWek9aWllI5Ij4zR4MFUtN1gZjHedBMJa0U
a4aJCP0Tn0cf+jYuSYyjVDqmnC5HVaVFFxJfhoVIv+/nf5d81iFM2W1gX8Im
thG1LYOg1kYzb8NMjX3KMeddxmo9KVyRFX9UEbJbqSJlcNSn5EM6ky6cV0z/
pUawaMoUFYdbW0S0iIvfhJqZ/VLBYrO5qpP9nA4k136Xlly1eJtQWfmfqT1m
z7RE1DRI9PaoWDy8sEHO/ZEGQsBmC4wOCptHWJIQFhXhkmqPrRkspgRuf9bl
c5pkvPkPgM+VRsPmcFGfl/ipiiJfYwi+/J8LoyXy+D7fcoy5xCgvvA875w+x
uezJhnAL42vS1yDl+Y1DFwvFxY33j+69+hTz23G54Q4UEx73a76MfaYl7m7e
T2WcRn60V+QSSY+ft33paXtKeJTTLg4W+ONjZV4Wqbi67cvXtvLER6SPK9+m
uQMlyUXqbIR8TrQz9SrGnuR4Cdajt2Wl1KuIrqwE51uez5WH2OLrqlAm5bm3
2YWCYXHxA3Nj718u2EVtvqzXLiWs1LVXDvT2KG6Qudm5j6vffel59zQxNucX
N8ilOijtXHvlRLgoSGfqVY+UNZTWe9nhMsc6q3MIiUkpaZkFVe8HZjiKTkuA
jL0rTcXFp8ZHhMVUoG7zAMQgH3FnzHyfYXP63PGahKCwBBKZhHfes80xWxoD
hDtWmxAQnpBTRIp13b31YhbWZbTLD+V1GvHjkmJ0IPSfqQTyvaH2/Q8Wrbso
wPqwxfl/ij6KVgEi3xtr34lKH9+xMTM/f4/8cWoVdA4pdWkkdUvDkU9J56wC
qjW6VU2tx+4jpz8dxvpxMtNGuBVCVr1VeR4VyuSO1SQF3E/KIefGOpsYLNjf
s/wsZvPlvXYGcaWuvVKgt0dRg6wRN8iiO7aHzJ3+Ibf/6ga5dAelhWuvoAgX
gTdaFXl7TaX1Xm6Qr+XphKftY0zRqNp015P73jdTmuT2dvMpLQSfK1G1IywO
MljiZX/3JSQqUwl3oNDHxof8ffEXDp/2pbW1bxphc5AekvMhF2m0UFFxm6T4
K9H14KWMnxof0SrMT+W5DdhGD7QNhy2Nh8ygM5hzw7vopSsK8/PT3EY1Nppp
jnE8j2td3s2PlObHJZrEW6W1ZUc8Ku9f5KZUKFNc3C/RMdH5yMV0VblXlo3F
bL6s1/70NG+F2sRKoqLlrXCDXEEHtaIiVA/3x+vk8OT6NZTWe7nhjT65Zesc
20yRmkTAHioPMLd9KJv6E0y+jLBzCJPu+KM23jhwPPzd6uzOrg6Y7cmenrhF
E/1xvuW5mF0idjOQ0VdRrucj6ib5kuICl8Ou2aLiuofOThGvJleTVNkQ0GpR
1NmI3V8UfPVB7fK7H4aGQy3IcFNJUR1aduE5VCiT8y3f7ZBzjljH0ZfOP1wR
wa6kLqFNrCJACMpwx1tLil9rNa33mofZmeZ45Fxkw7yrEoyVXjA8EPBaPMXP
fIc7beqc/VXqDSmVbgaGrlWwyV8d9E5SYFBG25R658/sfpyIJ5KJhFg8qWFg
bq2fsDg+nlhAIjyKJ9UPoC4BBNYmyPeKqICYOgwBjVaAxbMLq1Ams7s4Po5U
QEx+FJcLggWAVYaW03r/W8Bm0Ol06bJwNkdonqlad0Nda9HQNX/8qZ/JDs9C
WVBHpCvh+KatLlVoYfeAedijjXmJOc0T6rXGkSTRRRAOD0MxsLZh9VUQUiq/
LIhYsoYAwQIAsObhs+nDHTVFeXmFZFIW6UnzAH2k0EHnT/P4zyz+SKHHTj2n
rF6GJGEr83uBm+4fewOw7fL4j0bAZsywVsUKE2B1IOCy6LDpEQAAYAURMAde
4rzcQ/LbJ8UfazO9z8nZaX57/tA9mz/EGSvx2LrBwNLzpt+d28Kf277nTf/8
PwsTrwAAsDjQAwYAAFhBBJONODuTs7GNk/Ob06cao05v+23d4XstdFpj8J5N
B0LrJySjPAjlbeiRTeuPP1pj6egBAAAAAPgPh/420kpvq0ehwsZqZvs9802/
7fF/Mc35TrT/a4vbY9maS05Pqt1fmywetkGXBwAAAACANcRUzZ29vxu45CsE
LxP8KHE1WL/f/8WUgNkRe0znUIQsgS23L/uijs7ZBJTkTwAAAAAAAKsWZkec
xfpN1olf5PswgrGyG9t1T8e0sUTZo/DHDE7KYuIhnQSHrftvlA2vyp22AAAA
AAAAKmB9ij+50dCjakqujNmVfmnP0aDKUVHHhjdc6Gp8Kl2cQoQ/WhlkYXKF
2A2DPAAAAAAArDHozQ8tdzvl9CJ8UUZhAY9D+5R7w9ohsmZEui2L05vhZne/
YYrDnmiMueTgX9YPPR4AAAAAANYevJHaaNeLAaSmbxOUH901qcFetxJqvstH
Up35mI+LIWQSomPSn/fSILgIAAAAAABrEz4y9e1j/dO8zIyc0hdt/ZMMtvJq
HQ4iituDIBC+GgAAAACAtQ2fx+Ww2Rwulwcx0wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBfwP8DquSu5Q==

    "], {{0, 49.90573361428413}, {544.6854354473297, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{477.92079207920824`, Automatic},
  ImageSizeRaw->{544.6854354473297, 49.90573361428413},
  PlotRange->{{0, 544.6854354473297}, {
    0, 49.90573361428413}}], "\[IndentingNewLine]", 
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvfdXU0308Ptd9/5yf7z/wb3vuutdj89jVxAQLGBBFEVFQQERRFARC6AC
FgQFBESQllAMBAgptEAAG6CglCgSOgrSlColkJByclK4OSmkkECQIup8VhaL
zMk5Z2bvPX1mz/86d+242//xP//zP97/l/jPcWcfUy8vZz/r/1v85eRV70sX
rrqet7h6w/WCq5fhuf9THHgJuSD+PfL/NAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADaEfAg
WLSMzxcJIIi/jM8HAAAAwJ+PkM+TAvOFGi6LIDFcFgKby0W+COZ5ILu7Mie7
qp+3ZDHkcdlsLqz4LhijFWS//syYLyIAAAAAAGiGzxlpKyVhEjEp2Myckqa+
KbVem3CyMS8q8Kbdbv31m0yPOl/zDXiSXjU4R80mon9IfZxYPgAtWRQ5n1Pd
j1t54ju5StEeqUkORb8ZAF1AAAAAACwcqPMlNvVFyyhH3PeDJtuLn9zyS6sd
Ve0Dint/jMbI45vXWkV/GJ+398ekxvuHFfXBc/xkoTBpUad3mjgmNrGUQ4Wj
79F3I0p/aOqwAgAAAACgHcFwsb/9RfQnuqwKEfEGX963to/8wFL73VDORb21
u/wrGPM9Ee4m3vJMoLGXOKJc5sQEc1Z3Eu7E+VxD1XM13QEAAAAAgDY4rdgL
h52ja8ZnelCikUJ34wNBVar13GS5/641hhdzhubraUEtqItuz74s3bjn3Aj6
cm6cefSeuUKvAwAAAMCfAo/NYrF4PBiBBwumpycqPI23OGR0KU/ucZqij6/b
cAo9b7XGbY096xDdyFEJhCEeDHEgZDRUBCPra2Ce+Ctv3nWhutwH92ScO6Fe
WQMAAAAAMDdCHmuwtSI/KzcvNwtHePGpjzWUe37reuvEz8qrTPrwLvpr9gVX
z9fL4vcRXQ/5lk0qh3Fan2ckxIR4B5BaJ0eaS0jYtIw0VIjPvYxaxpwVIKft
eXpSTPDNAKL4vpbXxPS09AxUsN/d9E8q9019enTMPq4NjH8CAAAAQFdEnL6K
uJtXgvJaxiGk9zfV8yaXmHbPfM1W1+x+pdUt9JJbJmsNrxeNzNdhY1QHHLRR
6SMKR0pxubTJsTe3DuxzfoB92UYXd+ngqTaU3QGPgkHtK2iEIyWZyH1lvuZm
5wNTX7XK7ks4vf+qyn38fqKjucfz0eXcYwgAAACAPwjReE2c834nNHVcsdNh
oib2zPa1/x16XKe09oVV9+Tg2q0Oqd3qmx1EajOBwmGKm9lZ8oCidhKNVWfi
6thwT4a93k5vcjdH+iZua5SVsW1Gp9axVPF9ODxyX5rjVuOb5K6Z+6KtjOxU
76OXXTW3wWp/1J+B+r5HgDaApAAAwDywPkTb6u24nvtduQvGaX58dP3aPf7l
SuOXvG6s08a1h8Pr1FaDClkDoyyV/hvcS3Awc305qggRQZP9Y3zRaPEN452+
L+QXBEO5Fwz33H2nMkiqgvi+PvF9Y8Veu3b4vFTcl+NuYOpfoXIfo+rWwaMx
LRwNT/lj4LRhPaysvHCdYIx3Hjhtae5Wx69nAkkBAABtTJT7H/hn25XsAeUK
TPSDcs3w30MBbyYUY4misUJP439MfF/RVR8Ad5GxRaqdLqT6M3UpVh0jFT+f
WR1kbnCe1CffoT751n/X9is5w3MuI0Xuq3m4z/g8oV9x310zo8t5qvcxqn0O
/enVH5P21N54hxO6iTX/b/9umLToU8a7HROagaQAAIBmOK3oYxs32GC+Ktdf
opFiH1M9exRNuenMpAbtX7flHP67qnsVdj0ujtCuOuQoHC50221P+KY29AR9
RtkYH49r5c7cGnl02+lnSq8WaZy5g9rQJw1PKt3XEHlk+6mkr6ovpZddMbfF
dv3hg5+a9z0CZgMkBQAA5oT7JdFmi/G1sgmlMM6XjIumJx6UqPSuoC9Jths3
WkU3K3WvRPypL5l+t1Pa1UsZBvXBoRMxraoDT4L+LFej/YGV8mWjcG/aWWOL
sNqZ9jmXPjIyPnuwStBPumi452GlfFMD3JPhaGgZ+lG1Xc/vIzgeuPpyTLdk
AwAImh2yL7eb9lUA8BS/2gAa+RWwPkWeNnMhdUNCEdL7EsCML1k+Dk5PKoZm
dMFH/Fx3kTz01ph6v/wBSeFyp0ZayA/szF1SOmb5/RTXdG4HvV+NqwROvL27
w8STIvdNJhot9jQx9ZkZS52iRdkYG9hEflDfVTHx9rap8bVCxX1F3sY7/dTH
YKdqg4+dRc+qiP9I+Bp96QgQtXAkDsk5Eo90y+METsBlszjQYmoHkdigeDCP
x53XY/oyv4Ld8z43p1LdITu7+31eduWAaugKCVd3FhchwRiNklXyZXV4itds
zlpZvAH+/LuXjFkGuqo08hchGHoX4345kPjp2yj9R0dF6sObdxIrvrNnzIvX
X4EJvOl+ylx//eZdxzzvBz4ICgwI8PV0PbF/l56eqVtapwav19BnlPPpJ3XK
tgX35Xvb3iL3y0dEmdXBew3dCDMTgZwvqe4H9AxPoVrVNsv35Xva3cwdUNyn
OoEoi2VXqrNtGHVqcbL4LYC+knM/jKlnf3ioBh8RcOPUTrGaTE+cv3XvSTZt
fOnzEjxYEmh72DHy48RPlj8iaKSxKBWdmJocGYZ6pT4+viTo9goRnYqNQJcP
QuqhaeEJFWpu2uEhKi7igddp080b9HaedPP2j8paDuHqjljbmZEBXvY7tmze
tMv2/I37TxYaIf5odXI46s3gL+9wQF/zc6mzzFkr8ODrh7aHnCM//KwBqr5b
U1ZadsQG2lCERSViEyPD417LDXTVaOQvQwhNfGuuepmdgSMWltf3jrN5qi1J
pPfHlTU0IWim98eWnnykOdNBbUnu51EtKqWIQNxqEyh+gD5lcAKtPEDK47CH
qjMKP6uvXlG9D5lAtI5X29/O78F7OkWoeyj9IxEMvsTm9Whocoj7A4zmqBOb
1x2NrqUvVwcF6sm+YmZ0yL9s5KeeLqTTMLe8nlYMcWGon3LzbPB7Xfz0CBdS
sOv4CgYVfSe8WN0hO+ND/N3Hmty0I8JtirJZv946avmEuxAkEYq23rDx6NNP
Pxch4Whl/L3Ikl/sKV4w+CI9b9ZWKu1APVnXzbYd8S8dXXy8tWalZUVIr8P4
Xo+WGmiht1PIO7mBrg6N/I0IBXwYOeaPL1iithD8Lcf3agxVW+kmGMhyM9kb
VKM60snvfZNfPefOdUF/tut284dqfmegtpSb3pjWv2Lkc7IyI7Necz0vHCa7
b1u7WweH5IuAz5qgT7J/ykpE4+8inJzCKqRVJ4N6x+J4ZMO8o08CZmfbIFfH
F+r4CrgH7+OFqle7AHcTfK+j1UNlCIfz3I3+MQ0oXy2O9cQR8tBfs2cR2oY7
M309UA2/dG/IZGU6QYs5a2ERBjjr3Vqz0rIhNtBIR+fwcrmB+h08EaEw0NWg
EcCSMEVL9g/O69FcJ9Er/ExNvYpUBx4YbWWvqPQ5DZtefmf3rhuFKlWkYLg0
+nbUu/E/fLWCFHYjIf0dXfM1xrtA03+NLufOvZNkUYhEIqGQL/ipgT9OfcIZ
c49M+WA5veS6oeHV0nkXKzGqQryxn3UrEXR8BdSCdr2A+Qyph6LcLj1TD52J
xvv7puv0L5OXUbgLg/nu/t41264sRtuCvlyvM2HvfqGneHYTHvteizlrZDEG
qP7uObLScsFpQJ2xcMcrDPSKkbGHkoH+eo0AlgpGQ2ZE/MseDSUX3Ev2PONP
GVIe5+Z2Vzyv7J17KALuzfM+c7dI+T7+j2pMRGrVEoyFrG4EPGSIi9WRm5jX
yeZCvNnp5bbEnli/0S5hidb/8CWjAXzEAzqPx2Uh7xPxxvo6W+uo1fXD0rUH
IojLYbPZLHHzVQgj/tJ5PIjD1RA38fWxF3cP7vAkD8ouQu2JthsMrpSOa/it
CpNV/u5JOjlz1fUV3NZY59MxTRz10HhHu9hGLRtHuS3xx9ZvsU3sWC1DDGJt
H9+0wTZpUdqGe9NcbB5UaSltRTAkNjQpqmthhTAkdY8vvgDxla5oMBrNyMy5
nZyYq8WctRpgW11NzU8Y4Kx3z5GV5ky91sTPm3rh6At/851eeQoDTTqxcftl
ZQOdWyOA3wpo4BOFXNWnaaaKzeaqmwesw1JAtfv4Y7Siwsoe1hL2/GAuZ350
HYxbEkR8aLK7ihj5ICg48Iqdw01//8Dw9Pe9U6px4PcTXPTX7A+pWYqsI2J8
LsnKJJKLCnJJ+MzUR14PiwcE0+wOctg1251btl8oQNwkCMepid4Ox/YbW94t
+dz0ioDLzEyLCfT1S64amqVI4RD5uomxK66HLZ075nzPvWy0xuyh1uHxGXSu
/nR9Bb8P73b4Vtmkeijh4kGfN1o8EImvum3590AQdbWUS/w+ksvWdfuCFxmh
qdpH1qfiNPWthdwhWk50UGhkPBqFTohNLmwYk+U7AXuwloxBYXB4QmYKGp36
um1cVhcx20qyccR8SkEekYDHPLoRWKzJnS9izj1VhKeBDx4FXj7j4B3gfz8i
/Z2aOYsYbaVZOBK5kJJDJOJSwrwCnyMG2J4fesVux8YdbvmDEgP8kOh59uie
XYdul35ufE3IIOCwcYG37iRXzjZAxbvnz0rS1GfHPgx5Go9KQKHjkymNstQj
ic9/hk7JIBBxqQnx2JJWWeK1ZBmVhw7lee4ycMvsVhjoFf1/9wWq6FC7RgC/
H+Km0vIuZRLyeEu5Bg/qKnh4+exZZ8e5Pi7X42vGVqq7KaC35IZcvxpKbh3l
jL1PSiwfhjiD5ZEX7INV15/QS313rDXyLF4Kr9/cL0m+/oX9kLQpy+rIvHE1
W7LWlgeNlt/bbyB36CqCOH1F3jsMT91NedGE+EvnsdtxjjtPRqhPqQhHKN5G
/5nYePrf878v/tz1dbNY/+8WF/UVvBrQtfrT+RWMGv9Dp1Hqh3Yxq/0P26C0
9aXoJb67/9nuXbRqXKrTS26brDHxLFrkukV+H9Fpj8eLWU7sBQMloXbWNzOb
JpAOELMDf83KNrQWaUfweij3XbxTaHSJd3zeVGfhw/OuMZViU+R+eXbTv6hP
bjTt+Fse2bPVK6A3k0OueobmScw5MRkx54GKSFfHYOXVLNz2pFsBFMWzCN4e
OTIDHKm4u8fYMW9QboD9RZ6mBjb+mOfNMgPMcN5hHalxTk/XrCQYfB1y5rg3
QZb6duLVw3ahH5mI40dKoNONVEXii4KcXWPfIzdrzTIzCEcKPbevN7LxuiOx
z3v3bp+32PS/tyqtfp9LIwDASrC6en/8Xsod6+O+5HYWXzQNfSY8kzao4V6S
0z43rNKSOXZ9pOU6vTPYnqXYSzD2+tbBU6jaERYX4sF8AfQ1N7VEdvbHFC3o
oKGSP3Pmxwd715sFvJavV2O8v7lru2uh2owUs+ah+YYD4dVjsoXD9A/hh9dt
tNbFSZ2u1Z+urxAOF543c85Vb5kPU87vc8zVcvgIuz7i8MZNZ9K6V4sPbTYt
wmrtZqfURUeIXnZ9j02auqd4ZnXoMSOLsOpJqZkzPkU57DsZ/pExLRx9ftfC
zIsyqFAvpyXZdqddVB17rMTX/DT6o8JoyJgSNSmLzbno9rGTvnkdEnP+gk96
LjNngstel3SFOY+V3Dxgj1J6Vm5K6YwBPjwwU/0hcf0YYL5u94NXMwb4znen
wUXK7ClRnbMSsyr86LbDoVXy1NdG25udCvvAEI6+uG2x73qhSuITbU1tn9LY
c2UZ+WOpQXs3HgxVGOjH0CMb152IbVY1UM0aASw9/9//8//+kZ9fLdf5gLjz
ISvVRIyK4CM7LqRJx0IE/ZTELFn/hP7a3XhPYPXMuB7ci3XatO5IBG1J9vHC
A3m+FkbGZscv+IRjcso/DzMm5Dl5ihasWv3VBu3Vt0ueORaZQb1tanQmp1+l
4Qt/Jzjq61+myNvYcFeq06b1NlH1Gmo/9ebHUOld93gaXbX1MXvbs86vgHuJ
p80uvBhVD8Xb7XN9oXkhDtyb7rh546ElEq4EnU1AS4SwjnprLSMXHyFGla/5
UfUSeKou/OBaYw8laUBsFpuLOP59dWP3eqtolb25E2+uGW86GtE0OUC+aWFs
uOeEq8/j5NyKNiWjkSFilAcdM3HNkJlzX1EiSTaXSn/lYWwapGTOg3m3LA2N
9h9z9QtLzitvUzHAINXqr/aBuZ4tRskA75luc5rV79Q9K03VhR7+z+jqrNSL
Rl/fMtlwPEo18WXXd6w/GtnIniPLyJL0neC0eduVAoWBYsVGZf1U3UA1agSw
DPzyemo1Vn869f4W4XVCxKBhb3u4Xbik9XPRK7RIumKWWR1gbuhCkp3GQS/H
pNGkO/uhtiRrw1OomU6RaKzY0+SfHX4lS7WSjT3WXoq5725/aLexnp7Jwcup
8lOJNVV/2xxwvfLSmkG9Y2rkkKVa+nDa4q0MDkU0yUprfm+mm+FWp2catqpA
3ZSQqy4urudmPmdPG241t3NWCnG54J1IVR981vkVSPVn6laoNrqEVH97XTQf
ZSkaLfY2WrPbZ8mEKzaB9Nvu2g3gwqUL18MLu7WfAzb63HP7WhOf0sVHiFHt
e+BYrFoPebzUS3/NHp/Zs8i8bvypretPqC4AYtTc2r3WwOstHTGasmf3PU5Z
mhnqGRgduoJRO8qaUROw19iFKDfntylpdTJzbk20MbBBK/fx2WMdpc8C3U8f
2WVkoLf98OWUTzMGOLv607fDKxmgv+m2s1nq1Z/OWUmc+utG/5j61ajPSvO6
CHYbN9igVRNf7WP2j+GNN/Q5sowUTmv8cT1LcUUp/crvwV/U0zuX1DbLY6Qm
jQD+PFbjqTTi4jf4yrlz553n+rh5oxc196dr0184XHTRxDxAVkZM1aVj3kr3
hbAbExx32qMbZwQ39SHEfL36PJd0LRwMcWGR+D8+PNOj0HpBDrOjomYA4kFc
DmtioOlVvPsBUzfid8mPNFd/mXNXf9w2lJWJbZpsizHUluJkcMivaFCjCH+y
96fzK8RCPW96JlPNGwwy+LnHDq/RR8wUNcTiX7U5Gj4iNw5XHiLgsKA5gmez
qN7fFDV0/3/6LgTVLva0kMdFuil8aURE8wRLoZdd22ObrjbUxvwYYv6fscdz
lb6wCIKnhT8Kr25ffySyWbUDdNV4g0VI3WBHRbXcaPqbXse6H9p5gfRdKRnC
4eIL2w8GfJKbMzZFbs5NaAdTu/gmRTnA7CivHpQ/q/lVrMeBXZdmDFBT9UeY
p/rTPSuJUx988F+ja7NSL/xRdH3b+qMRqokvvbbjP4vQT8w5sowUbiv6uNGp
jG65gWKctx/wK55toBo1AvjzWJ2n0ix3728hMD8EH7e4WyFxSA59JT2jIJla
wPpK9rU5E16uWCoAtSfbbtx0NKZFqSEBDzaUZBFyScmPQ5/lUXJImdH3g7I6
uMiFxtdZpGwSJiwUk0PJJeJj7gVndyg3QcRlhc9tQo+sABEK2K3oc3Zx0o7V
7OrvoVr1d1tc/amtNxEM5rnvs8NKfiQcfh1os/8qSdctBDrO/en+CgY1wNLm
qfoTmTUBR6yjNb0H6kg8tWX9sTgl4bLa3+UT0yN8ggu/I6UZ7xv+pms8bYrV
UUEmpT/2C6LIgjO9L8bTltwTH9SeaLdhvbWKtsUCGKFibpy2sruf285kdNfW
tDOF0uCaFG+b46f9ye1MZvdHajtDucDl9xGc9l17pTbmK5qseGCpbxFapfAs
JhyvK6vphfj9WV6mO67k9ikG9lgN6OMGx4LfTw4V+fkSehVG05Zw1h7VqDw8
y/wYZGV5Z8ack4pk5px7+6R9RLnS6hNxRenjS1IywDaU05m4RpkBqld/gWrV
3z1x9TdrwZOuWUmS+qBDWy1DK5VTTyur7mX1Z18z3X05V2lKj9UYb739SHAl
QzBHlpHpZzDPw8w+XWagJQ+tza8TNBioZo0A/kTAqTTzwGvP9Dz7sLCHDUN9
LxIzm5kQo6s07vad6FdfmdLMiexhYnVleeitMbvxegSCZFMg4sIwv6hpnAdP
tcbZmt/I7hpvJYU8yuviiovD/OJGyYWYUxZeOV3jbVlBj8idqtUf5dwehzjq
CCTd3zTy7unN8HfISgAIGnvvb27giO9kIy0AEQSNVNwz07N71sYUdw4k39/c
2m1gn/Z1ClLuvsDd6dcdw6kTMG+Mirp49kGxFncIGtB16YvOrxAMkC4c9lRz
yI4cLHLJwvO1aqhUuNmX9NfuulkyI1y4rzzv9dex2ihbu3jEY4dgKOfyAVdS
b+9b8itx8BO707GNkuC8y/sv6rC2dQFIItSd5W74z26fVwpti+F2vsDlfOzp
bnhDyckvaxqUreUXB2fkfezuaSgrzCa/aRpQW+I/9THY2iFhdikMfysKtD7i
mVY/LtnjxqM3kjHZkgE5TgvO0/ZSPHWEK9kQN9VT9MDx9MNXfXxkSdFuB1SN
wmiivR+/n1R5H68d5+0YWCwx55eJuBYmxOwqQd32i50xZyni9pez6dk46qj8
We+jvCNkBjha6b/P2DGzS26Ao+V39umdwigMsMx3l56jugHqkpWUU3/f5vC1
DEXq81Ilqee0ZHqfcEfXyBPfXRRkbxf0Uqxi7VlG8dTujCuOj2skBhp3yTmg
uFeTgWrTCADwF8IbqS9MjEZnZER6eoanYJNQKYW0fqZ8swe38yUq8JYH4pB8
o7HFpdsP4oo7JC1OEcyeQDxDCUcKru1zwSPNUp5kQE1xgeKx3w2nuKCEaLT0
cUAMgfgsCYsjZOGxz7CF9SMCcbO4ITPY84yZ/kYja1f/jLqxMRou5OqZvVs2
bj/ieju6+OtALe7h1bO7tmw1PHb5TvxrlcmrqZbsOBQmIyU6JuNNF3MBe1V0
3/au6yugNpSLzRP1ZSNQG9rJJkrZTTu361VcoO+l0xZbNmwxOHjZ9yGqUCJc
IcyagFgfI+xsn3xCvtNLbx+wQ7VxJMG1j23tntRKgkvuHjiFnjW3swi4XS/j
Ht50t9+/dfMGw8MXfYPiijoU8YW5yB5sPsThQLBA4bxQS7AEXhfmnN0jjZ7i
BezBj6SI+w8i0GmELBKhuK5PrgI+s7eKEBf2JB6FRkWFPkYV1P/gCJFTQksj
/GOI+GfPUnAkEiE9CVtEG5mlBLE5U5KfxuMyIryvh2KxiWgMRcmc5YhGysL9
4/AETFJqJoFExCalU+pHEQOsJwRfczLbKjawi/7pNMQAxQZpqr/B4Jirb2zx
18HajOArDmabNxkfveQf/0qtATR3VpqVekLk/YBIFJaURSQVf+rnKhJPigmP
ikUlxEWFh6EpNEnitWUZVaaac1BxGBwmJi79TbdmA51DI4DfAiFf5isB5usw
P8YF7Zx5kByOwqjPwJQMIU1OCFaRKtIfkDkkl+ymlfcHhJBkgmzyrf9hW6mH
cHiCgThGnrkQcNBW6nJcdkHlnSwuX8CTebeAFc4tkJdJXsWFZI1vxXdp41t6
Cg8SFfXJK/FjJM9a4D7NyaoA92Sdqj+dXwG1PbtwHt2s7vTsc9JFN5RKqDbh
iqbZjRE2NpGS2m+KGn7kcCiyTkSEHMVsc+KpLDjsmGXIEu+T1xahackOW+4U
BxJXEkIBa+DbiMwtplrwqLK3TH4P4arzE6q2uQehzO+JxMGJUO0KJPGIgsRh
xvGJNqNRRWLOzPq0VI3mPPOrZTDA+bKSjqnXnHjdUj+fgc6jEcAqh88ZaSsj
YpKfpabhcksb+6bmPjiU8YFY1PqLztz6neD3Fabk9+q+yYs/8h4dmFg1PFwR
an3oZskYn8/peUMW98f4I5XxD5Iqh4fLw04euFUqufA2r0T3scgVZ4qGCsnp
Wlq//PC3bN/rT9WrJnHo7SvRH3RyIU1/63PYPWeAx+eN10RYm918Kd1/Tn/j
Z3kxTxJMfXxs340XK3WcDvSjuSQ7k0Qpq//aWf8yOZYknVCHfrS8ziKQCt7U
f+2qf4GJJbYolaxQa6qPZ8qv8BTP76NgChZgzkv77oVlpZXk12kEsARAnS/T
MS9aRjhI22iy/fljnzuptXOskeQ0EdLLV/7Ard8PemUaqWkBzQT+0JvYu49S
iYR8ShY6DEXMzycXU3umkAtvo++FYYhEMiUbFY7G5xfkFlO7V/dYC8RaesdB
U/WYu8Fk9b0FU/XJ9x7lad9xoIA/Wp70MDyJRCah3feauOJlizD5IxVJgRFJ
xHxSvMee7Rczl3TiTzvQd2pFww8us6Pgvp3V0fNh5GbJsg3oe01FIxKcH3j6
sPX5R/nNSqfkCYbLou5EV/wST/H0qjRC8y9q9S40K60cv1IjgEUjGH5+18E9
/hNdfjA7b+Bl4FGHp1r78vC3gtTCFSohfms4X15kUbW4o9SCAOJKxlkEQoiL
OOKF5eMtWi/8ZTDr8ZGxL3vVRlUZ9YSI2Fea3LQrI2R+pdF6JiEeDHWR3C0v
y/yVIMH10uBOgsehSxkLOMhukcDS8Tk+sseBoxh40xKMeIqvwkRiqlbMdZ8K
nM8vs2oWZs5L9+6FZ6WV4ZdqBLB4OG1prkdcomrGZzQoGim6YHwwUIsDc9Fo
OZao46zO3w4PbINdcqDB2sL8SnWH7NBAbRG5sn+uigv+ln3Z6hKhgw0Nv4/2
OB9ZKbV4+Fvu5cMeeCS48qm7W+T78dValPFHacWUyt6l9BS/MH6lOa/KrPTL
NQJYPDzkCHjZ5C8PFvcqJiquGuuflrWCYXGzmMflzOy8naojZHyQ1Iwwl80G
A96AlUazQ/b53bRzOgqS0QQyAROPJtX0zawmEQcnJhJySZjYRFJ135Icybpc
LLGneMCiARr53RHyWIOt5fnZ2XlkUibp+ac+1lCes96mo4lfuNOiidYSPBYT
6XMniSrdZwN15GSUIo5quV8J3sfPPK6eXM3lBQCgBCz1+Q9BsECHYAAA8Ecj
4vS9Q3lfDc5pGZeUAVPdb8j4NP+9/+qfyxkQsOqyCWU9bHr5PUuLIIk7PeHQ
qwxKt9Q7Ru4NMz0HXBfoAAIAAADg90I0TkU5mp+Lp44rdjpMUKPPmPyz9nBY
3RSdis+ook9zmmKsjWxQX5D5vkkqjihfgcVqjHf1LQZnXAEAAADg94L1McrW
YLtn3nflMR9OS9jRjf/sDXg7KYImB0b409wm1MltJ6VHfHBasnFVco/1/O/Z
T/HqB5ACAAAAALC6mSi/v2+N0eUcldNCRT8KPYzWHQh4K9lsJJC4lbLXt4qW
+JWCvxdlvpT/XDhYhstsWJV7cQAAAAAA0AanNcF63cbTyV+V+2+ikWK/Hfpn
4urlOxvgb3jn7fuDJf7sRGMVeLLsuEkRoyEvMx84eQUAAADAbwb3c+KpDcae
pRNKYZz29Et7jz0sGZ7Z+8RtSzphYpvQiax2maKRiDRkz4MQGm8swBW1AS93
AAAAAPjtYH16arPHjdgNCRE3tCIBzPyc5XfaOap8SHkDFZP62MHSr/g7l89u
z08vHeLB7IG6AlxB/SDo+QEAAADgd0QwVBHjcTGQVPttjP6joxwb5H03qfy7
+sZf0WRbUVz442RyTpT/HTQpm5BFoXZPqp82AAAAAADAb4MQmvjWXP0iG5dB
LHpb3zvO5mms1fjIMSE/SjAEGkPqGQZsdgAAAADAb45QwIeRY/74c1dqrHoc
9ld5vAUAAAAA4NfA68nHvhgETqEAAAAA8FdB/0ShdILFLgAAAAD422CDI/4A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC/EB6XzebCvzoWfwJAkn88
QMUAwJ8D53Oq+3ErT3wnd/7fAuYCSPKPB6gYAPiTYNKiTu80cUxsAodkLBIg
yT8eoGIA4M+Cy5yYYP5WfgOEiC88WPwH4kLwKvJw/ptJcrWKEWG1xu03UzHC
ahXl9KqOGgCwKoGH6kuIGXgcDvPk/v1Q0qdhMBXzM6xmMa7muP1mwEMNr4g4
XGZm8pPAe2FZtatIlEDLgFUBV0t7VgCJ4bAQOFzk/2VqoQm4bBYH0um0DsFI
WWLiq+9cpNHI7Xtx1+LwzfzBOdz+iPgQxBO3L7nQiriF1SbJFRHlMopRAZ+9
uEguedz+Jg0vFMFIaWLSS7kon9+zPHirYJWoeXVrGfDXwPiIL2rVYO3wUE1m
ZICX/Y4tmzftsj1/4/6TLNr4MhgfPFgSaHvYMfLjhA4l99Sn6KOml3AdkkJI
OER0Mdxx792Elh+LoJGGIiwqEZsYGR73+tuyty61SRIRJT4i4MapnfrrN5ue
OH/r3pPsJRfl8olRCegrmUwdW95jxRYSN7GGG4tS0YmpyZFhqFcroOEPRK0a
XpHMsjCm6qKO7XFTiNJVb6d/hU5qzs9dZjWvZi0DfmOEC8t1nCYitkKzqYsb
tIymaOsNG48+/URftgYt1JN9xczokH/ZiC6Ph398buiQFSwsWsxRU4eEds0N
ciG9DuN7PbpiiAtD/YXeTiHvGDo8f4HSU2YOSUpE2Rx1YvO6o9G1yyPK5RKj
MoLBF1hyN2+RMV2yuAnpNMwtr6dSDVNung1+v+waJqSXz6Hh5c8sC0QsysZ2
hSitdzgkftFJzel5y63mZdYy4K9EwOj6PMDVveEGfyvAUvq0jToIh/M89Nfs
8a9YVovjsybok2xd4ywUSAoWIasj9+7pc9HvRzQWZ6Lxd5GOzuHl0sqAQfU7
eCKiYd4RnYVKT5m5JSkWJdl929rdyyjK5RCjKpNV6fiGFVj2qFPcxBqOcHIK
q5Br+I7F8UgdNMzsbBv8eQ2nFs6l4ZXILAtEIcq823bno96P6qLmynRC/fKr
eRm1DPhLYVSG3Ez5rPPGJNHYWyypVevPme/u712z7Uru8DI2ZUUikVDIFyyo
TS6C+t+hfX1Q5d85Ao3FEacBdcbCHd8pa8LSS64YGXuUjs333AVKTyVKc0ty
mvEu0PRfo8vLJsplEaMq7EYi9h39ZyO4QOaLG6c+4Yy5R6ZCw9cNDa/qoOGq
EG/sT2p4tBxLbNN+60pklp9CLMr38b5+cbqquQmPfb9Cal4mLQP+UiYr/T0S
tOdRGJlA5nJ48ubvFC0z46OktQpz2Wz1wQduS+zxTRtsk3QYF9MJPo8H8/l8
GJbMYrOQYkLEG+vrbK2jVtcPS1ZtiCAuh81ms9iSddHSZdEcLk+5RBFBI7Ts
2ITitnFIANPbO0dnxU44+sLffKdX3qDsNqg96cTG7ZdLx+eL4DzSU2ZhkkRE
eWL9RjtdhhjnZaXEOIOAh4zmsdpzk3M62VyIp7l8F8GQ+JoUCFbqYAnFskLi
gEQC4iv3vDSkRLe4Ccde3D24w5Os0HCi7QaDKzpouMrfPeknNVxHyPjAlFzR
ouGlyyxLJ0tElFmxiUVyUY7Mr2ZyYu7PqFl73OaI2vJoGfCXMlcBLppofU1I
T4709Uv6wJRYJ9SRm1b6Q2xc3K8kT2unsOpJlQzVR3LZum5fMJW5FDETMT6X
ZGUSyUUFuSR8Zuojr4fFA4Jpdgc57Jrtzi3bLxSIvwnHPyR6nj26Z9eh26Wf
G18TMgg4bFzgrTvJlUPybg1vpJYUFZNT2dbZ09X5uYYYm9WmPhYiHMrz3GXg
ltnNhiRwvude0f93X+D86dC1+luoJKf5/QQX/TX7Q2oWLcqVE6P0dXxosrsa
HxkUGPzwsv1Zb/+A+48z3vVOqQ8fCrlDtJzooNDIeDQKnRCbXNgwJi2zBOzB
T+RnCZgMIh6HRcWnvRIXdtKbRcy2kmwcMZ9SkEck4DGPbgQWDwp0i5twiHzd
xNgV16PQ8GWjNWYPqfOOO+pa/Yk1XILHYiJ97iRR5RrOyZBpmOB9/MxjdQ0v
XWZBZJkd+zDkaTwqAYWOT6Y0KmRZm/8MnZJBIOJSE+KxJa0zstRoFYgoPxGi
4rIRUXZ3fqbiY7M1rtyRqLmnivA08MGjwMtnHLwD/O9HpGtRc3ZMcEgkomVU
LIYiV7P2uIkYbaVZOBK5kJJDJOJSwrwCn8uitnxaBvylzFGAsz5lk0p72PRy
f4uDwdWICQmHXuEKJHPcvG9kL7NtpzO7lBtg9JLbJmtMPIuWZA0Y90uSr39h
PyRtBbI6Mm9czZbMo/Cg0fJ7+w3OkiWZQgRx+os8TQ1s/DHPm8ch8U/Z7RnO
O6wjpZMRUE+Br5Xx5q2GBobGko+lZ9GoWvSEI4We29cb2Xjd8b9/T/y5d/u8
xab/vdWNoH3aRo6O1d+CJTlNL/XdsdbIs1g9rgtm5cSIIKA354ZeuRae1zrG
GatMSKwYhjgDFU9dHR6VqqywEQyUhNpZ38xsmkD6BcwO/DUr29BasWB43YX3
nW9haHRI0iuY6ix+cO5C9PtRpBb58uymf1GfPCXt+FsekpToEDfhCMXb6D8T
G0//exIV3/V1s1j/7xYXkg4a1q36Y9VlE8oQDd+ztAiqkWk4gyLTcO4NMz0H
nJqGlyqzCAZfh5w57k2QybKdePWwXehHJiJLSqDTjVSFLIuCnF1j348ItVoF
1Jvve8xgi76eTJLGFp7FI5rVTA656hma1zrKGXufmFwuUXOkq2Nw6aiamkPs
T3rjm2VRI3ha2oZLhjy0x43bnnQrgKJQM8HbIweJ2rJqGfCXorUAF9GpuIxq
+jSnMeakvg1aMv0xWZNJapQ1uVgN8RduqRTPbFqE1drNTqndS7LSeOz1rYOn
ULUjLC7Eg/kC6Gtuakm/tC8yRQs6aCgrt8UwPwaYr9v94NUPWc5jvPPdaXCR
IptS4XNZqszKzkxq0N6NB0Orx6RtRoj+MfTIxnUnYps580ZSp+pv4ZKcZtdH
Wq7TO4PtWbQoV06M4t/0Ft47an07r53FF01Dn4lJ0t4Z3EtwNnfB9iiWBjKr
Q48ZWcz0eBmfohz2nRSXi8Kx57ctzTyLBhVlKKcl0W7Hqeg69vRYia/5afRH
RUrImBJp3OeNG7PmofmGA+EKDX8IP7xuo3VMiw4a1qX6E2sYn1El1nBTjLWR
DeqLRMNUHLFJruHGeFdf1YpkyTILsyr86LbDoVVyWdZG25udCvvAEI6+uG2x
73qhqixtTW2f0tjarUI3NRfdPnbSN69DouYv+KTncjW77HVJV1oByqwKs9Y/
GC6PGrP2qaOZzeMPjOm54jZWcvOAPUpJzbkppbpFbRFaBvwlwFyOCkMl9zxi
aXSVMC4yCiGCJvtH+NPc5jgbo+PRDYgJcVqyMqvlc9z879nROOVV0XAv1lFv
rWUkbWnWWcEDeb4WRsZmxy/4hGNyyj8PMybkA3FTtGCVcrv2gbmeLaZLnu8Y
1Hum25yydW3zwd8JTpu3XSmQd0/gLqzj5o3WT+s15BqdpafMgiWJiNJp07oj
EUsgyhUT47SIUfHQardrmqTwnxb0FSaTZNNa9FfuO3c/qJkZgpqqCz+41tjj
hWJFAsRmsbnTotES7x2braJalSU/Uea1fb11RCMbHiDftDA23HPC1edxcm5F
m1JK5pPBd4Kjvv5likLDqU6b1ttE6aTh0rvu8TpoeADRcBPq5LaTUsPhtGTj
qpQ0/BSvruGlySxTdaGH/zO6qkGWr2+ZbDiuLsvrO9YfjURkqdUq5kPEKA86
ZuKa8Vmm5qJEUodczR7GpkHVCjXTQg9tMPR4qR61ueM2OZh3y9LQaP8xV7+w
5Lxy3dW8EC0D/kqgrsJQDxfXc4qPs42R/l57F6UQV9cbSTWSEXqx2UFtCae2
HY+qQ3Ip/L0Y93JQZovCwVIcvl4p84pGn3tuX2viU7pka8DYY+2lmPvu9od2
G+vpmRy8nFrLkBY7GsptfTt8r7wdzaD6m247m6Vruc1pjT+uZxkp74vxe/AX
9fTOJbXNnvJfmPSUWZAkp0VjxZ4m/+zwK1kSUa6QGKcZ1Q/2GLkRv0sfR3+L
yaibkvwrTvkJ45MoxfLJ8VIv/TV7fGbNa/K6iLabNlsndCiLnlHtu2uNsdcb
uiQlZc/ue5yyNDPUMzA6dAUjT8k8cNrirQwORcj7YvzeTDfDrU7PWjVouJsS
ctVFWcVnTxtuNbdzVlb6Be9EqmYNo+31raJlGi7KVNJwGS5TZfX90mWW8dLr
Rv+Y+tWoT2/xugh2GzfYoNVk6WP2j+ENmSw1W8V8MGoC9hq7KNSckiZXc2ui
jYENWtFTHi+7tm3tbp/ZM2/zxI091lH6LND99JFdRgZ62w9fTvmkU9R01zLg
r2Vh/Rf4G8Flm3lIDWLgorF3hDxZe17EaCDj8lXMd4oauv8/fRdCv3JxKV1F
CENcWCT+jw9zZw4/035FBrOjomYA4kFcDmtioOlVvPsBU3HZKvmRxnKb8LPl
NrcVfdzoVIZs0AZqwzhvP+BXPKhxGdtP9f4WKsnpqQ8h5uvV5iz4iJA4XHmI
gMOC5ghWsGJiFA4XuRsdePBJWhZO0bCYcrpEEOzGRPtdZ+IbFQOIzI8h5v8Z
ezxXWY8ugmDhj+IrBpsOR6iMVk2UiisKy5BPTHFKquUp6W96Het+aOcF0ndd
xg65bSgrE9u0HrmGU5wMDvkV6ahhXXp/0ju/4Z237w+mSjVcgScrNJyXqa5h
TZlFLEMeF+kfSQL5MytItQVLYH4MPviv0TUNsiy6vm390YhmVVle2/GfRahE
ltqsYh6Ew8UXth8MkKu5DpvyVqbmJrSDqV18k5Kaa4MOrDe88kI9atNzxm2w
o7x6UK7m5lexHgd2XdIpagvRMgAgYe7ZK25rko2RbaJkG80UjUSqQxrsQmi8
KT+zuFVloyvUnmi3Yb11TIvSo+DBhpJsQk5Wcnj4s9zCbCLhqX9IVgdXcqXx
dRYpm4QJC8XkUHKJ+Jh7wdkdyrEQl6Y+twk9suJBKGC3os/ZxUmbdrPK7UC1
cvueuNzWecJbMJjnYWafLrldOFzy0Nr8OqFDxyaj7hsfdJekWJTJths3HVUW
JaujgkxKf+wXRPkuXUyR6X0xnjbFan9HJmaE+4TIgwnebmjalNKzVk6M08wP
IVYW/uUSR1TQ16ykQqRsF7C+5vqesntcobzyRTRZ8cBS3yK0SuFvTTheV1bT
yxrIur7X5DK5TzHcxWqIP7nN6tF7hmC4yM+X0KtISVvCWXtUoy6Dh2INu++z
w8o0/DrQZv9Vks4a1nnjA7ct6YSJbYJcw0SaTMONBbiiNnUNz84siFtLKubG
aSu7+7ntTEZ3bU07UygNrknxtjl+2p/czmR2f6S2M1S2o0xWBB3aahlaqSxL
Wll1L6s/+5rp7su5/UqybIy33n4kuBKRpVarmA/mxyAryzsVMjWTkor6ZGq+
fdI+olxVzeUPj2yxCFeJWt2b6l6Irz1uE0PFPr4kpai1oZzOxOmi5sVoGfCX
Mk8BzqRGnD58p+g7l8/uIKeXDfFg9gAtP5NCG1QYFrL7h9Wd5W74z26fVyMQ
JJs8EmfbgsLGcR481Rpjt98rt3O8jRQcltfFRa7kF8uunLLwyukab8sKekTu
VK3+KOf2OMRRRyDpzqCRd09vhr9DJtEhaOy9v7mBI76TLW6FiyBotPzOPr1T
mDamuGGJfB8p892l55j2dQrSbVkB3J1xxfFxzQTMG6PGXXIOKO7VOdMsYN+f
LpKUirIry0NvjdmN1zOihPvekl99Hat9Ync6FikIBEN5l/dfJPX0vs0r+Tr2
6ckph9gGSXDulX1uqt21FRTjNK8D5+kcWNTLhqG+F8m4ZibE6C6Ju+sX8/or
U627BH8rCrQ+4plWPy7Z+cWjN5Ix2Uinj9OC9zzpEV8zwpVsE5vqLg50cHjw
Upwm4XDh+d0OqBpFSqK9H7+f1GnEDu5Ov+4YTpVoGHXx7IPiHt01rPu+Pyb1
sYOlXzGi4fb89FKJhusKcAX1szQ8O7OI4Xa+wOV87OlueEPJyS9rGpRtIhAH
Z+R97O5pKCvMJr9pGpi1t0Asy/s2h69lKGSZlyqTZab3CXe0QpZFQfZ2QVJZ
arMKHeC147wdA4t7EDW/TMS1MCFmVwnqtl/sKw1qLr5/4ujVtAZ51JryUnJa
pFOjWuImbq85m56No47Ko/Y+yjtCt6gtQsuAv5T5CnDRZGsRKjQCk5sbffdu
AiGbRCr80DWp5KCQ2/Uy7uFNd/v9WzdvMDx80TcorqhD0lYTwewJxKWWcKTg
ygGXTKTdzpMOcSquUDz2u+F6FFeU3jta+jgghkB8loTFEbLw2GfYwvoRgTg6
DZnBnmfM9DcaWbv6Z9R21+HEX031Nxgcc/WNLf46WJsRfMXBbPMm46OX/ONf
6ZgBpppzUHEYHCYmLv1NN3MBjlAWUP3NL0lxSfcSFXjL45S5/vqNxhaXbj+I
K5aIUgizJiBW7WNbuye1yHd6yd0Dp9BtHEnwxye2tlGy4NuHbFGfVZK8omKc
5o00UBJj4jNwEZ5eoanpCahUCm2AydMkUAF78CMp4v6DCHQaIYtEKK7rk0mR
z+ytJsQ8fhKLRsVFh4YnFNT/4Eg26o+URvjHEPHPnqXgSCRCehK2iKaL4zUp
Uy3ZcShMRkp0TMabrgVpWPfqTyzVtqK48MfJ5Jwo/ztoUjYhi0LtVtWwtswi
AeYie7/5EIcDwQKBaJ5gBYgsCZH3AyJRWFIWkVT8qV8hyypSTHhULCohLio8
DE2hyWSp2Sp0hTdST0l+Go/LiPC+HorFJqIxFFq/VjXXEiICAyISUgnZRMLz
T3I1a4ubaKQs3D8OT8AkpWYSSERsUjqlXhfHaxJ+WsuAv5TJygCPxLmzNx9p
sf4oScmkMZD2GKyeA5HLXOnRLZL9pvIGrRCSTJJMlvsfsouXvAKeYEoKA/mV
twEHbdGt0isMdZ+/IhaXL+DJ/ELACrcQyNsk7+JC0m6L4qu02yI9RgaJiu6L
ysXPl7xEYx7Wjg7SU2Y+SWoVpWia3RBpc+LpJ6SsnKKGHbMMQbZLI8ERp60j
Jastpj6EWlmFzNpFvaJilB40w2hISxF3fhBfHnOdSiqUuQORuP0Qql6AJH5C
EBEovIFoS4lu/KyGqwLckxesYQxhoRqelspjigOJGydCAWvg24jMHata8KhG
L60rK0upmpn1aakli1CzlrgtKmo/qWXAX8pUHTo0u2teb+0sGi6tenIhD+aP
vI8PSqgcHi4PP37At2SMz+f0vskr6YbEVyrjHyQhV8JOHrhVilzpeZtX8jsO
VegoPWUWLkkJ9Dd+lhfzBnh83jj18bF9N15It0vT3/hYXcgdlAQ/OWrm82KZ
TxfSBX5fESa/9w85ZmaKhgrJWaCG63HYmgVrGPrRXJKdSaKU1X/trH+ZHEtq
ljoc+NHyOotAKnhT/7Wr/gUmltiyAi7EdYLfR8EU/ClqBvytQKz5FzfwesnY
mXXcusEfehPj/yiFhCcXZqEeowgF+bnPa7qnJFfeRt8LwxCJZEo2KhyNzy/I
LaZ2T837xFWJLtJT5ickKYE/UpEUGJFEzCfFe+zZfjFTNsPHHyl/Fvj4GZGc
Fe9ubqSLo5rlh16ZQdBtGcVvwYI13JOPfbFQDUPfqRUNP7jMjoL7dlZHz4eR
myXrRaDvNRWNSHB+4OnD1ucf5TfrcjrjykCvSiM0/zlqBgC0Qa8roHQutHcm
gLiSkQiBEOIiLmzhmREJ7Vf+eH5KktNC5ldafc8kxIOhToLHoUuybRqS4F5J
cBfB/cjF9J7lPltPBzifX2QvvPPz50D/RPkJDU/D0oFBPrLHgaMY8dMS/Ovh
fH6Z9TerGfA3wV4F3Yo/g5+QJPwt9/JhD3wHGxqufOruFvl+XCgNzrli6U5E
gt/HXDr/VBb8y+H95X42/pK88rerGQAArAScjoLEREIuCRObSKrum1n8wOmg
JCaQcgkpsQlZSsEAAAAAAPwhwFLX+BAEC3QIBgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvN/w8UyRUJ
    "], {{0, 74.8586004214262}, {425.6246138246804, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{408.4158415841582, Automatic},
  ImageSizeRaw->{425.6246138246804, 74.8586004214262},
  PlotRange->{{0, 425.6246138246804}, {
    0, 74.8586004214262}}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.879599959889422*^9, 3.8796000144886336`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"bed26bcc-4474-4857-963b-6318769856d7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ggwGklUztnVwdDjq6GBvb2W+R4sox35TRt72qvA6lfFSD1XD8Gc81pzVlWAi
r+FZxR0a/ydwG1bFs2KS66SMo9pq2w0so/jr1EUb4Scc465onizIkEsr6Niz
m3GxsfGJNPqllOQUeiItLiYupVIcl2K2RuzGyh8TNUCa/1B7Xp7IdQ5rD/Nl
7k1BCl40pj73fBxdq8lPdpdGeJFDI6lnXIPL3gseldVJM8Ypkm6sleGZHnxe
kXMlOSnt9r1Hr76II1k8XnFKc19MO8+vg4y/7+7nFkDW6wQTAt4+l88Vgatj
EwRlsUUfgbMXtdBZyzrtvbQEXCLB/Nbb/uLp/XAzHCSDN/bKrWtqae/+IoYL
sd4lmxMgs9VpRdbrS0HXeJM36wfr7SVKes+vXZ71JsVCSQar51UtYgJ3GVBG
M83S0OVmL8wxLnlOmkdzBe8Yhhv8dOSWJoE3OHBLpMmukKblI1v0czYJTzBL
4ovEWd2pUbyp+dWNwFnTyz6y7VSJhPeeiAW2nt+LgyDLdPHpLPTLTTu8nCa5
bjXV4OhQTnD8C4mZa3T4NiX2V7PhrK4UC0UZ7NYLD35XrpGBImdNrZMLS4PM
5xEGxCPXBG9tHC88oSSrE1AvPQux6FgN2cTl1rI7NSfKzyhDBvxlI1PNKbH3
RMrWCBuBPUZj6AFSuji7OkgMdDDLTg6D3xUpRhGCH/lrYYl2OatSixN3KdQa
ySUpJytDQ0SvihTw+aF373/bD0cGC5y18Ca0lwsDcfLeOL4yrZ8HY4yxOIuk
t1J0n6LDVb7WFyqE3xnwE8o2rNo5nvwaOvoPLTjnjUgaTPAIbGbaEknH0l9J
jxpcDYxSV1UZWR3vh+ITIeRjmg2E1fNd1V44+J+wAAkmz+HG6IsFkk7yTT8J
2Q6pHMtbzErADQHaWEXXMsEKh1HsQpBVO/23dG2nmWpLdXfP7BJy/00+DDpg
Qa0fX/ouq7+zU9S/juAR0OHqICdK5ZqkGTcgs0GZjIJL4ZgYr1Hvpye7Sjvy
o43mnfpu3YJr3u25nOA6Y3HhRvgfnzk+1NP1+u3Qd/a506OjSyUKQfh+gcW3
UBZr+XsK/XzLURWj5FK4qN3QLzfs5WQ1z1cL1pBw40U9LME8ef2+tzVioqMg
t26d+5GWZNcNSpFjszpYLxP24AQVF60lEwVORBmCS9HKsSY63lVOD/TxCaSS
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
AACbgv8H0fUpSQ==
    "], {{0, 43.8}, {196.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{178.11089108910912`, Automatic},
  ImageSizeRaw->{196.8, 43.8},
  PlotRange->{{0, 196.8}, {0, 43.8}}]], "Output",
 CellChangeTimes->{3.8798502603026423`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"10e298df-56f2-4164-8bbf-40bb1e684f6e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
EVS/NkbpfiHIUHMx+fUASkeGx2CwlE3NwbBJQOk47kRraUldH12LYzwcFnNx
ljgzIII/Qr6yzdAxs48hWRnF/F7gYvC7cRDaPOBUlbex8e06FbriDhCdNv+x
P7hRG51tPmukNT8qODQiFo/Dxz1KLHk3IbEzjzHcTE6KI2TkZGem4mLTnnVO
Sv059VNlblYOufRxASk7K+Ufz6AySWRL9lgTMSo673XH1/6er58biLG5nWij
4wIuMt33mvgwIPCfAJfTtl7+fnfC01/2z2AwrcZ9Hu4g8Zzu7/vuNvysqQTU
zqrcTBK5pDg/Jycz+Z5nwBNhpRldRaFuNts3bXcqEiWB40++ifc4Y75750Hf
qk/vK4gZxMzUmIDrNxPrRqQKx2gisY16X+dEBAaHBLjZ2F7z8wsIS3+lZCN2
X5qN4SnlgFWqwWo9wVRHZU5q4sPrN5IaJVsGke68tGrRLD7rC9HjxOmwhmml
h8UdyHY6fL1aRWR1rT0FESLB5j0KuvswFheHw8cmFr+fF2xTURI+OYOYk5kS
F5ta2TEnWLRnt7DaWGw+K6B1VuZl5hQVPy7MIWYT/rkaUDbMY3ST71222rF5
64XHQ2IdNMZ72R7dZ3joVuWnD8+ImVlZadEBPjcSX4+o8HTia9dnRwQHhAS5
nDrj5ed/534GSptQ2VrFtScTcITMbGJWMh6fUjHXXNFuWPGkI4WehvoXM3vn
PBPZZct64wC0tYQ/ixZ9l1gI0SF3I0SmwD0iFMt5LnRTYFQCNgeF7gYVlbC4
Q0C79uIinNWq35Y7KRYlzDTdM7fGQVrvBQi7msu7vJvPZmtzwT/S8zjI5cwZ
Bzt1P+euxDZMLHFgiT9W7GXwr22WHn63/e4If275OJlu+GPzOeWdaCJYn3DH
tlmlqlq9Rqn02fXbVq9SLSRW5Q1VhtpYXMv6MCX6YKB1Z182swptoooyjpTc
cbhOaKWIs8+yZ76WBZ69EPVqnD/L+pzg41cyiEi+F+jdWVfd80R1QPqKfI/o
627WNdTTF/+YepWgZKXlUT6S77p7hBZ2jDMnXsUn1owizKHaCEe7EAzLgDXu
81CqfLavM/Ao+1lTsboSrvsXD8gq3UX0cs0XPzg2MlZ7a7ehXaHkPSJAmIOl
HkZ6ln6EJx9FmXvZjK4Mh+0WEeJpeYwmEtqoveDuFfdQsthGCfEiGw3XRFw4
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
XEm36N/5HPoUQn8bbmP1oFn0O6XKd78NrpMpLm66b2XzoElcXHlr/0k8yiQ9
jzH8lhR+JzAcn0bMJRHLWgakL0Uurb+eGH3/wSM8LiYqNCzucdsPpij82njV
ff9oYk5SQmomMTc7NSm1pA1LAgUp7LG24sSHsZkZ4V5XQlNT4/GE4tZBGtaw
A9je2kJ/iQu47ipKj7vJ0PSSb2BMWbecKTksUZguLsJkIhzeXM4V9FIpgrHq
ML+YbCIhISWLSMpJTUgvbhvnCb+32oghl+2N//5b/+hFv/TWiYnWzBCP00a6
G/WOOvo8Kvsy3JQR4mZr/NefhuaX/GKfYXyZCG1UEh+Fz8iI8PAIS05NwCWX
oNqIP0p2NDwchjk6vSajZILpzrKY0AeJBYWRt/1wxHwiqbSxZ1p1diSkE3fO
8oH82lRVT4GPrkyJYN8+sLKKlBb7HrTCocR1FgmWGHHHPwKXSsrNIZU1D84L
9jUpOizyES4uJjLsHr64VSJY9GenBEabC8aqwv2ic7KTkpIzSSRiekJqaesY
TzD9Lkv43I11NxlYOPpltIh0cNf99J7Nm7YecfSNKvsy1JQZ5H5m52ahTlxu
xlYorXhhj70rjo+OzcgM9/AMTUmPw6UUtw6htwmVrVVce2LMvQexODwuMvQ+
TtZcUW9Y6awzHwtiYpIzCI+i01+o90xLQ5XvkqCi5altkFJbNBHDA/zD41KI
eTnEJ81yngvNFNiUgNFBqXCDSkpo6m3RxCFgbfjS2i+D38agBPbX5PNW/7xZ
S2m9gZWDg4iiJgi/chZzK6yOGKttjnmKAz2ibyVpzldxyCjZt5JglvE+3NIy
QtzlmWkMO3I4VLS6TVj8LsLy+ENp8b2jh+6qCATGl8bzFAfu5Cv+AyIO9Cm6
3Fw8TwGdxeWxpZE+OUphThdHwBWek9aWllI5Ij4zR4MFUtN1gZjHedBMJa0U
a4aJCP0Tn0cf+jYuSYyjVDqmnC5HVaVFFxJfhoVIv+/nf5d81iFM2W1gX8Im
thG1LYOg1kYzb8NMjX3KMeddxmo9KVyRFX9UEbJbqSJlcNSn5EM6ky6cV0z/
pUawaMoUFYdbW0S0iIvfhJqZ/VLBYrO5qpP9nA4k136Xlly1eJtQWfmfqT1m
z7RE1DRI9PaoWDy8sEHO/ZEGQsBmC4wOCptHWJIQFhXhkmqPrRkspgRuf9bl
c5pkvPkPgM+VRsPmcFGfl/ipiiJfYwi+/J8LoyXy+D7fcoy5xCgvvA875w+x
uezJhnAL42vS1yDl+Y1DFwvFxY33j+69+hTz23G54Q4UEx73a76MfaYl7m7e
T2WcRn60V+QSSY+ft33paXtKeJTTLg4W+ONjZV4Wqbi67cvXtvLER6SPK9+m
uQMlyUXqbIR8TrQz9SrGnuR4Cdajt2Wl1KuIrqwE51uez5WH2OLrqlAm5bm3
2YWCYXHxA3Nj718u2EVtvqzXLiWs1LVXDvT2KG6Qudm5j6vffel59zQxNucX
N8ilOijtXHvlRLgoSGfqVY+UNZTWe9nhMsc6q3MIiUkpaZkFVe8HZjiKTkuA
jL0rTcXFp8ZHhMVUoG7zAMQgH3FnzHyfYXP63PGahKCwBBKZhHfes80xWxoD
hDtWmxAQnpBTRIp13b31YhbWZbTLD+V1GvHjkmJ0IPSfqQTyvaH2/Q8Wrbso
wPqwxfl/ij6KVgEi3xtr34lKH9+xMTM/f4/8cWoVdA4pdWkkdUvDkU9J56wC
qjW6VU2tx+4jpz8dxvpxMtNGuBVCVr1VeR4VyuSO1SQF3E/KIefGOpsYLNjf
s/wsZvPlvXYGcaWuvVKgt0dRg6wRN8iiO7aHzJ3+Ibf/6ga5dAelhWuvoAgX
gTdaFXl7TaX1Xm6Qr+XphKftY0zRqNp015P73jdTmuT2dvMpLQSfK1G1IywO
MljiZX/3JSQqUwl3oNDHxof8ffEXDp/2pbW1bxphc5AekvMhF2m0UFFxm6T4
K9H14KWMnxof0SrMT+W5DdhGD7QNhy2Nh8ygM5hzw7vopSsK8/PT3EY1Nppp
jnE8j2td3s2PlObHJZrEW6W1ZUc8Ku9f5KZUKFNc3C/RMdH5yMV0VblXlo3F
bL6s1/70NG+F2sRKoqLlrXCDXEEHtaIiVA/3x+vk8OT6NZTWe7nhjT65Zesc
20yRmkTAHioPMLd9KJv6E0y+jLBzCJPu+KM23jhwPPzd6uzOrg6Y7cmenrhF
E/1xvuW5mF0idjOQ0VdRrucj6ib5kuICl8Ou2aLiuofOThGvJleTVNkQ0GpR
1NmI3V8UfPVB7fK7H4aGQy3IcFNJUR1aduE5VCiT8y3f7ZBzjljH0ZfOP1wR
wa6kLqFNrCJACMpwx1tLil9rNa33mofZmeZ45Fxkw7yrEoyVXjA8EPBaPMXP
fIc7beqc/VXqDSmVbgaGrlWwyV8d9E5SYFBG25R658/sfpyIJ5KJhFg8qWFg
bq2fsDg+nlhAIjyKJ9UPoC4BBNYmyPeKqICYOgwBjVaAxbMLq1Ams7s4Po5U
QEx+FJcLggWAVYaW03r/W8Bm0Ol06bJwNkdonqlad0Nda9HQNX/8qZ/JDs9C
WVBHpCvh+KatLlVoYfeAedijjXmJOc0T6rXGkSTRRRAOD0MxsLZh9VUQUiq/
LIhYsoYAwQIAsObhs+nDHTVFeXmFZFIW6UnzAH2k0EHnT/P4zyz+SKHHTj2n
rF6GJGEr83uBm+4fewOw7fL4j0bAZsywVsUKE2B1IOCy6LDpEQAAYAURMAde
4rzcQ/LbJ8UfazO9z8nZaX57/tA9mz/EGSvx2LrBwNLzpt+d28Kf277nTf/8
PwsTrwAAsDjQAwYAAFhBBJONODuTs7GNk/Ob06cao05v+23d4XstdFpj8J5N
B0LrJySjPAjlbeiRTeuPP1pj6egBAAAAAPgPh/420kpvq0ehwsZqZvs9802/
7fF/Mc35TrT/a4vbY9maS05Pqt1fmywetkGXBwAAAACANcRUzZ29vxu45CsE
LxP8KHE1WL/f/8WUgNkRe0znUIQsgS23L/uijs7ZBJTkTwAAAAAAAKsWZkec
xfpN1olf5PswgrGyG9t1T8e0sUTZo/DHDE7KYuIhnQSHrftvlA2vyp22AAAA
AAAAKmB9ij+50dCjakqujNmVfmnP0aDKUVHHhjdc6Gp8Kl2cQoQ/WhlkYXKF
2A2DPAAAAAAArDHozQ8tdzvl9CJ8UUZhAY9D+5R7w9ohsmZEui2L05vhZne/
YYrDnmiMueTgX9YPPR4AAAAAANYevJHaaNeLAaSmbxOUH901qcFetxJqvstH
Up35mI+LIWQSomPSn/fSILgIAAAAAABrEz4y9e1j/dO8zIyc0hdt/ZMMtvJq
HQ4iituDIBC+GgAAAACAtQ2fx+Ww2Rwulwcx0wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBfwP8DquSu5Q==

    "], {{0, 49.90573361428414}, {544.6854354473297, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{477.92079207920824`, Automatic},
  ImageSizeRaw->{544.6854354473297, 49.90573361428414},
  PlotRange->{{0, 544.6854354473297}, {0, 49.90573361428414}}]], "Output",
 CellChangeTimes->{3.879850260322161*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"400924c2-98a1-4800-adf2-bca93384b170"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 74.8586004214262}, {425.6246138246804, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{408.4158415841582, Automatic},
  ImageSizeRaw->{425.6246138246804, 74.8586004214262},
  PlotRange->{{0, 425.6246138246804}, {0, 74.8586004214262}}]], "Output",
 CellChangeTimes->{3.87985026033716*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"72a93c5a-14d1-4da3-b235-805770116f52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dltrasphip", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["i", "zz"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
         "+", 
         RowBox[{
          SubscriptBox["i", "xx"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
         "+", 
         RowBox[{
          SubscriptBox["i", "yy"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], 
           "2"]}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"dltraspsYp", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["i", "zz"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "xx"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "yy"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}]}],
        ")"}]}], ",", 
     RowBox[{
      RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dltrasthetap", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["i", "zz"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "xx"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "yy"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}]}],
        ")"}]}], ",", 
     RowBox[{
      RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.879428935312357*^9, 3.8794289386384273`*^9}, {
   3.879430492130706*^9, 3.8794305160431724`*^9}, 3.87943236418471*^9, 
   3.879598491432991*^9, {3.8795985767290754`*^9, 3.879598638400505*^9}, {
   3.8795992561387186`*^9, 3.87959928529699*^9}, 3.8795998000331984`*^9, {
   3.8796000448237143`*^9, 3.8796000861618724`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"55ccdd38-d3a6-4915-af4c-0078082e8da7"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["i", "xx"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "-", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8794289394395022`*^9, 3.87943052613305*^9, 
  3.879432365720836*^9, 3.879596988619935*^9, 3.879598498066371*^9, 
  3.8795985686417675`*^9, 3.879598639690524*^9, 3.8795992874644785`*^9, 
  3.8795996864409595`*^9, 3.879599916012616*^9, 3.8796000873524437`*^9, 
  3.879850260502735*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"34cab7ad-f25a-4b5a-84ad-dbb827c343d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
   SubscriptBox["i", "xx"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["i", "yy"], "-", 
        SubscriptBox["i", "zz"]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
         SubscriptBox["i", "yy"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
         SubscriptBox["i", "zz"]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8794289394395022`*^9, 3.87943052613305*^9, 
  3.879432365720836*^9, 3.879596988619935*^9, 3.879598498066371*^9, 
  3.8795985686417675`*^9, 3.879598639690524*^9, 3.8795992874644785`*^9, 
  3.8795996864409595`*^9, 3.879599916012616*^9, 3.8796000873524437`*^9, 
  3.879850261870064*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"b223469d-deb4-40aa-8630-8ec02c4bf5bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
      SubscriptBox["i", "yy"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
      SubscriptBox["i", "zz"]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["i", "yy"], "-", 
     SubscriptBox["i", "zz"]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["\[Psi]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.8794289394395022`*^9, 3.87943052613305*^9, 
  3.879432365720836*^9, 3.879596988619935*^9, 3.879598498066371*^9, 
  3.8795985686417675`*^9, 3.879598639690524*^9, 3.8795992874644785`*^9, 
  3.8795996864409595`*^9, 3.879599916012616*^9, 3.8796000873524437`*^9, 
  3.879850262171796*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"25a21a22-8ec8-4ae9-b6ac-5f82148de934"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAAAAgkv8PHwJZmA==
    "], {{0, 69.}, {550.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{474.9504950495049, Automatic},
  ImageSizeRaw->{550.2, 69.},
  PlotRange->{{0, 550.2}, {0, 69.}}], "\[IndentingNewLine]", 
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
jc4VTCFfiUmPxe2E001y3eGarjjVi/Yu/KDR/rB30h6DiY/Rxy2O3n0/wR9+
csNqp2dxvzwSMD8n2pvbP6AwRsqu7j6O+TBEZyFsDpeHfMtNKe9VStBp1cGW
q3eHV41Ipy9T34fv/3uNLZpNylBlBdqYYq5QqIsFpkaeX9tzFPNRwQSpZSom
qAnZsWZPmNwEH8IOrPn78EPFRa6nZrGkMPjsno5vovN9CLT8e9vtZ7KlDyde
+24xPlukMjaMVnN753rLsGq54cMO/rXKTmlp7WkYTff2rt96A/UGT1onbPpv
TXpqSrN5R6gtAr5KqK3GmCOGdvHiMXvj1Rlk2ShnekPcmWulih0gs4hhkhKy
x0SasE2hdeJCt18U6hVVofjWQdsbea3iKnzJTCqVVcHF0hWnMDlRs4YnKaGW
prKETVTXj4E712wNLJNf/TVzI/cS1avXSsM6IKBWZxBEwaMx1sboGEbi4Bpi
ptzB8W4+j0XBY87Yoff2Owvc7qKbtja++VKHkB7JHEJ23umOU9CEJklM8Uce
39hn4VWirAmHzUej6xi/ZUDTD//v//V/r8h/i2pEHeF045wM/toXSdHrfCRG
Q6TVGgvfKk06QlhzIb7hCZDxviHuFKsJc8ToyIN6kWKZn7NFoUcC90f2A6Jo
3rlgoiLk0CY3vGR8OK+nJJEs3SSb+uyCmXmIQkUm68L2/9f00hP5CE6EQWew
pgTDz69tWm0TpbT+3tgLz82rDkY2jvfnXdtnYrrrkNv1u8l5FS2DE2PK0Z7z
g+RkaHi+SPbcx+lIdV67yi6qXk0rU03FB8r9POIoVOVMXHW9RdSmmBudLMDg
9OX5WpmaWdic8QnH5lR8UWcC53VGFwvlJsA5rVtj+0DZBBzNlhTe6pXj28fb
lgb22A5ZYJ6ouWVu5KzyFMz5QXZab3peXmpnipPB34ejKWrvdYzPEfvXbb72
TlP2o5NrFH+v/9akp6Y0m3eE2uoVaetTrJ2pTXSDRFtZGVUK2oomKGlrFjEI
cxalhA2NExe8/c6tXmEVKoOtt7mlfZVWoTiZ3CqrgseWbbcV7omaNTxJuaOc
sNUG7TSxT57OLWjVN3cYnshVuXrtNIzS4UrXJnTwsCh4xB41tI2RBo8sokLw
yInKQDfoUt/tVzNCh4Qe2HwmTaqJ3qLELJlDnnuYbQ+Sa0KTJISaKPPevM5a
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
BO+eTtimUKtRZPuim7Y2vvlS25MeyWxPdt7pjlOYq0l7F37QaH+YTBYTH6OP
Wxy9+35ian6a1N77jMaI/au3+el33zoAAIBfCQ6LqcRA2a0LDylUpWMs5bU5
Od04J4O/9kVS9DXLUBiM96zf6qtpzgHCmgtx4ihAxvuGuFOsJswRoyMP6kX3
PObnbMI7Wb8d90f2AyK6ja84fXm+VqZmFjZnfMKxORVfBifGZPcb4Z1ZKWH7
eNvSwB7bIbvBTNTcMjdyVu1P4PwgORkani+S9RxwOlKd166yi6pXujFP1oXv
+cvswhP5gHOEQWewpgTDZd6b11lHNSt+e+zFlY2rbCMaxzVXdbps53VGFwvl
ZeOc1q2xfaBSNiVs72qTC09nlD3y7J9tq6yjlct+edls7cGIJganP+/aPhPT
XYfcrt9NzqtomVG4ZgQTlcHW29zSxHn1FK+nOJksHRBJfeaxZdvtGWLQQahi
TfSKNPEp1s7UJrpBoomsjCoFTUQThJpA56Apzdc7SbmjnLDVBu00sU+eTn1o
1Td3GJ7IVdYFOtfMokbh04NywoZKjSLbhx7YfCZN8n6R11uUmCWz/XMPs+1B
8qxosi5s/39NL82Q5Dw1qb33pxifIqxXbfF9C0uxAQDwm4J0FIddcHU7Jf/n
YmdquOO4q8IRN7d/kqpH5A/SguHHXhv/2uRTrrdZZeIetk3eaoOxYIKSfsPj
nPsZjf/OeIYXd0qivfC2gLTEHze0Fj7mT4luiCUZT2V3M37/C0IG6pUsGCOt
5dgAj+N7t5kZGGzacz7144QkF1CTsBk6ELtlfY0TNf7mRiezVG6RzJY4a+O9
EbK+Pm53hrvJBudHzcrZ42j5FcM/t/tUq771YXdk2q9dZ5vQpvj1iSrfrX+a
XXlJ1VxVadnNcTYG+yJlfUrcLuJZA4NTSS0qZb+4bPTXNp8Zs/DYncSjG1Yd
TlQuu/ratr+Mr7yiiuzUVv4oyOPYga2mxgYb959PqZ1A95p8our2dlP3zB8S
O1JfYfF1k+L/RFoSDpsdwagMVtJFqBLEmkg4amQTJdVEKUFBE+UEYj0DrYOm
NF+vuoTN9FjGtC5o1X47DB1VUid0rpnSrEZ1CdvcapyiVQVamriSZbavwKZR
ZLZPsjU5ipH3W46We5r+YX59Zv40P01q632JgfesgmmiAAD8zmjfcTFZE7br
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
    "], {{0, 80.56211283448724}, {589.6005957001854, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{483.861386138613, Automatic},
  ImageSizeRaw->{589.6005957001854, 80.56211283448724},
  PlotRange->{{0, 589.6005957001854}, {
    0, 80.56211283448724}}], "\[IndentingNewLine]", 
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnelbE2kSwOfZ/bIf9z/Y3Wc/6Cwio4YRDYrgAR4zICCH3KcMKgwCAsow
oDAziogwHIIDBBIgnOEG5QoqEEYOOcKhcoZDrpCEpLvTOdwEBLoDgutGDeb9
PeHoTld3012prreq3uJfzt6m7n/56quvfP8m+2bqFKB/5YpTkNnfZQvnvHx/
uODl5nrSy8/tgtsVHee/ylYayL7Ysi/5728AAAAAAAAAAAAAAAAAAAAAwJeI
WIig0o+4f6kYQUQfcf+AbYlEJFwGFUk2eFuKyID5cgQwLF8Qb7FDwdDT/LzG
caHSzlAICwQwurYsnmsvznvUx93qRABqhAia6a3JSUlKSSVl5ld3sRYVbKmE
01kYHeZ//oi25jf6Jk7egaFRGY2TmyiplN2SFplEn0CUdopQX5qnqbFP1isY
c9ozzQ9+S6ybAIYZsATyqoqUVtkzC8ksMsIZKI+6GpT+bBZvmWU2mdt513SP
hnFMy/yWNpnHiA+5VcZCN9nkf4XXHm19WNc+qYuPXSuZfZIYfKdmeqPHCEDN
EL8uD7HxSGxlv9UGqXCy6mczm7stfIXtpvI9CBp6IQ3crfaIDlGv+txvFyj5
RGHewgJvnZFHX1ECvBM64I0kAGoFxCRd+M4ppnl+1a5JZ0o9iUbhjXiV5dBD
9HbqeORPbWX/kJ4ED/c/+pXnWGyOmJXvZ/frE94nOhxAhREKZOM42VBPjhCV
eQ0LDT7EvbbkQawjDHXFmO7abZW4pYbCzN8dbGM6IdxKFBGiCITI3Q0pKh9W
okLZonDLyMb7yKHDZGdzxc8dQA2RCPmTzIai3ILCglxKdmUriz9V4LpP0yyp
Dzu4YmW5aO88HtG0le0TsahupwNrOdh1ELOCfD/2F9/QHCZnprs6h5ROTk/4
JeAn8jPuproM9VZkJMdG+IdSZXI9j6gZ6RnkhIig4IxWnNxi669nbeJ6gYOh
1kghVkOc/+Xwwp55RG6TF4frCqjpPxnu3OeWN44Z1LGrr+pq6PxYNrOVGeU2
hZ6ywFluyUwNpaCdM1d31ei40w1SVS9bZmjRxd6E80aXiiffPXCUzFRnyuVq
Aw0NXMPSHjLfyt23PuGFkxONU+0NL1XMfszYNUC1kc43xzmdcExkzK+F3Raa
f7c7qPGf05FtmCEfvy3qlMY+27QhxcibVMFrlrwucTdwoE2sKZp0rimT0iaQ
+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
AAAAAAAAAAAAAAAAAAAAAAAAAAD45PwXk73xgw==
    "], {{0, 47.053977407753614`}, {169.67949428856605`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{122.61789337412053`, Automatic},
  ImageSizeRaw->{169.67949428856605`, 47.053977407753614`},
  PlotRange->{{0, 169.67949428856605`}, {0, 47.053977407753614`}}]}], "Input",
 CellChangeTimes->{{3.879599368232023*^9, 3.8795994131127596`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"475b6d4f-72c8-43c1-8f5f-311108908e6f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAAAAgkv8PHwJZmA==
    "], {{0, 69.}, {550.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{474.9504950495049, Automatic},
  ImageSizeRaw->{550.2, 69.},
  PlotRange->{{0, 550.2}, {0, 69.}}]], "Output",
 CellChangeTimes->{3.8798502622914677`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"c790a293-c77c-4fd7-b5bd-443c46f195a4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvfdfU9v3//l5zPwyP85/MDOPeXzn3vf7XjtVbGBBbCgoKCKCCCo2kKug
IkXAi4ggCKEZCCQkhF5toIIFUCEUBQVpSpUSIKScVCaVFBI4CaGI6/nw/X5c
TpKz91nrtddZZ59d/p9Tl23c/7f/+Z//8f4/hP9n4+JjfuWKy3Xb/1P4x5FL
3ufOXHI7bXXpH7czbldMTv3vwoNewv+ZCf9D9N9TAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAALCI8NgIR7CA5xfwEIS7gOcHAAAAAABYXvC5bAkcLl/NxwJE
CIsugsFiif7gzXFCRufbnOx3vWy91ZDNYjBYHPnfvBFKYfbzLxNzVQQAAAAA
AGAlwGUOtZSTsYnYFFxGTllTz6RKzxh/vDEvKuiqwzbDVWvND7pc9g28n/6u
f5ZcTEB9n3ovsaIP0VsVmV9SPWysvYjtLIVqD1Unh8W/7INuNgAAAAAAVjpI
+1Nc6pPPw0w2m42Mt5bev3Y97eOwcj+bAEEmGiNt1v1lHf1+dM4eNlpNnP/d
kh7OLF/RFhol6tiWTU6JTXTFo/zhN/F+EeU/1XUKAgAAAAAArBR4g6X+x8/G
11KlSY+A3f80wPZ45Hu6yvcGcs4a/LXVv3JirjNyOjOveSVQGHquKIs2Nkab
0WXHaSf4XMbUs9T9AgAAAAAAYGXAbMad2e8SXT063UslGCr2MNsd8k45Mxuv
8N/6p8nZnIG5erOQz5iz7o++6u9t6OzwenL+OfHvG9oiFfdrwUNY+htECABo
4LJYK3CQAjQlAPgtWW4Bjc2g0+lsNkcEm8Obmhqr9DJb74jvUAxQzKZom79X
H42fMxFjNT886RjdyFQ6yEHYHISJiN6RCjiimQ0ctvBP9pxzSNH8jtOFP3VY
Nb0EhLeYibancVE5zfS5vwoAegLpfoJ5kNM4qs/xEEsONCUA+D1ZdgGNz6b3
N1cWZOXm5WYRSE9qe+gDuac3rLJN/KI4vr+H6Gr4587Qqrl6srg9mW57fV+M
Kx5jNj/GJ8Tc8Q4kN48PfSoj49LwaZg7PrfwHydmTdmYLY/Tk2JCrwZmCn/3
+Xlmelo6HhN63S+9Vul3k7X/Hjoe2wJvRZVgdhQHX7yRVj+2kCurAMAMGN8K
Qq/4kZpnb9y/ENCUAOD3ZTkFNAGzpzL26sWQvM+jiKiHbbLrZW5m2i3LPze4
ZfcqzCugll3b9JeJZ8nQXHWeqArcY6fUD8cfKifkUsZHXl7bvdPlNu5pCxVh
CwtqwTjsvlDYr3nuAn+oLEP0uxe+lhang1KfNUt/l3Bs1yWl33F7M50sLzwe
XgbmXC4IJijJF11v5XcywSjAosMZfHXXzSPy7dAKWHIHmhIA/OYsl4AmGK2O
ddnlHF8zKl/HY6z64YmNf/137706hf5/et39PX9tcEztVB3GIVAZ0cYfLHK3
OJnfJ78wwUhVBqGOwenCHzfY4j0d91jNUdZm9vh2jW9Yhb8jEEW/S3PaYHY1
v2P6d9HWpg7Kv6O+uGRph9N8qt8NwVhV1Klj/qU/9DnoRnUZPN2+sjL4bS5U
Z3g/X4Y7HQ95NueI12WOXpsSGtmAtFY64OFfkWUR0Ojvo+0NNnvm/lDMG5mf
7h1c9dd2/wqFt5rsTpzzmr/2h9epjOHg0/uG6UpJJ6eb5Gjh9nRYfkSAjPeO
cAXDpf+YbfF9IvuAN5B7xmS732ulV6dKCH/XI/zdSOmVrZt9nsp/l+NhbO5f
qfS7iXfX9hyM+cxUc5bfEeanFLeDXhlt+kxgmS1pHtY2nhntml88M1twF6yt
rxBm+crKQN2SgIAqvMHnQQ6OEe+ov3LHlD6bEhrZgLRWOigCKbAsWfqANlbh
v/sPo4vZfYopl+Bn0WWT/+wNfKkwYEMwUuxl9scm32dU5RNwOvJxJcodW6KE
zdy1VPnNqfD8tKoQS+PT5B7ZbIvxV/5bN17MGZw1XxX9rjp4p9lpUq/8d34W
pufzlH83UeWzFxI2KdzevKv7j0RU63cSBo0SfdRsm1PCJ83DrmmUB8fNNjvH
N630kdnqlwQEVEFacG67z6Z++WUnV+q3KaGRDUhrpYMikC4kfI54diGbjbAQ
zi/e+73oLHFAYzbHH1qz2g77TTHjEgyV+pgbHMdQFB8AaDUhu/5ef4r4Q3ly
K6OeEEtqVX745A8Wu287Tvqu0uWLfMHYmdnENrOmfxp50OjYI4WiBWrzVqQl
/ojJEYXfNUQe2Hg06ZtyodQXFy3tcR3wSnRKtKhKstM2N+wXvRtD/TJ42n5l
ZaDuQiEUzoDfX/iPpc3dX3UCt96bEpr28du0od8WNR5erNjBGagvy8QTCQTs
/YCAMHLtILyZ1YqlDWisr4l2680uvxhTOMb8ij9rfvh2mVIPFvI1yX7NGuvo
TwpdWALu5NeM6zdSWlVjy0TN7b2HY5qVO3x5vVlupruC3sqmmHK6006aWd39
OP2UwaIODY3O7CTm9ZLPmmwPfiszEKcL72SyL+yD8tMJt4fktPvS0xF0l72y
YXyMtDM7m9m9rNaN+Q3gDDQ8yyQQMjKS7wfdupv1EUKhCMHo81vbd/k9HfkV
X4tCUwIWBWEa9ZyMzyASkqMC/MPJCxY7eEMvEhOf/WCJUkNWzxM/q/1XC/pB
3dqwtAGNXht5zMKV3InwBaIeLh5n4muWj6Pz/cqBaS9yRTu+d5AvGPxp7v30
JyKBxZoc+px/28HSNaVtRu+gMDdz3+P9bFTp4Ngrv82bvIpkO0gJhku9Npn7
TL9hnaRE2ZkZ20W+V10zZOzVDXOzy8Xy35V4m225rvpmdvJj6KGT8TNSx+UM
T2RHJl0EU7zRl54eqybeBu82c8V3L0yTZ6EwMVffG1ygRCCUKlv4jMqadc80
vaFsCt5QeWLSU1kofHxr355rhYsfCnUxAY/FoDOR+YSfWUsVjDy+unXHtccL
G+AWpDXpuymh9w6aZqbM/L04zVK1X92roIeLX8rgIYwdyQny2OFvtddXizRK
m4ufrI0+aH6OIBmQyR/IdDXZfOv12Fy/mvq1YvqKCGia4A28jvE4H5RZ+32Y
+rOtMjX46s3Eyh+M6bqweyuxQVc9jloarlq39ZBXQNDtkKDAQF8vt8O7thoY
mLuntat5m4t8wbgcu1+n6GNOT4G3/bX8Xlnso1WF7jBxJ00PaGN+TfXYbWBy
FNOsstxuT4GXw9XcPvnvlAfCSWvZkepif7dmcn62WEw4A9UZkYFXjm9ev27t
VvvT/wTcz6KM6iNU0D9G7DNySFyYXSYm3meWNM/RdJFvBbk1iy9mATLUWJIa
n5iaHHkX80z1fbz+UTXFZF3Uoe3u8lDoZrDFvxJNKNQfQhM0lOAwibjEyPDY
5yhNwOl/Hmy/1yXyva4rjIlKLU3BJKckPgiLLVNTKq8v64zZNr+XmicXzZuF
aU36bUpaeGfiA3HOZqYMp78syH6/U+SH+a8Tt0TtV7kK+flaVIHT/yzIYc/J
BzpLeG4N65mJ96RSBQdP1j6w3XYmQxY7yKcMzf1QpVFTWrdfzs8vDW3SpkGn
xBw0d0xA0c0hdEju+yWJ6b9pQJsNPjL2/dO7p9l4QmZxRX33KIOt/HAq6mFj
SZ9dEWS6h40hPsJQHxWRliSP05jPyl0QwrSXJ/9C/FHjw/GKr03ZTMZAFb74
i+q8AeXfiQbC2caprJDL7SJ6OUeo7ny6zOEhyERTtO3qNQcf1FL11sOGtCU6
rLcIXphX7MwmUnrFHO2W1/8kPW/G0i8LDZ9KwV678qBygMVBeouungx9g8YA
fN3v6TNNIQyFja3yUGi72XGBsmYN8Kl1WF/PaIkJir2d77xGpQGkK8vTwuiA
f/mwTvoTlppy1SumQlRqX5H3qZDXM5fVZjXHHTbYF0nRpn1q65oFaE16bUra
eIfZlImr1O72iHRlX7Qw3ev/Ymi+17007Ve1Crh8LaqAdGdd2mm4L7Bcx4tH
o2G9wvxEVHYw5+fXBnnsiD245eTc2wlJ0br98nniL/Lpbbl+x05Fv0Gxrhiv
/ykur2vxY/pKCmj6hc/jisY8crk8PWXRnO85vpdiajRZWJijum/aEVKtbAtu
98uCqlnXvuX1ZrtttAxW2WsBaUm56o1t/pXeh4rhD+ZdMPxzu3+l/rIrwchj
TzMD19xZFiPWHc73wtTinjm66sffppPqF1nJgtHXEc7OdyslAXui5qaVTWTD
nD0UPFp7Sz9LN8GrNYU8FObdcDgd9WZ4EZdYFJog0sklvEJmgut7DkfMbQIx
XPoYdZyhkx0Eo28inFzDpIanVV/ffyiicWap1LKrZganCD/Qv+XRwTX6bk36
bEpaeUeoLVzRXM1sBvPwohJL0X5Vq/AundigVRXmc/EoNaxHON+LUlQdLI8d
OTccXR5oszyrDhcvQHpfx/v6YCp+MHkohDb+Fp+xBDF9BQW0X4BJSrJ/aF6X
+iyKWnnd3PxKifJT5ETLi2c1s69wQq24uW3rP8VKSR1vsDz6RtTr0V9vUDPt
dcCOP40u5s6+sIlWMD9HWxtYBGjMlOeDYLgClznX7l+MJiLuDXX27+gbZn3C
CcsLGbKX89QyTxOTS+VzTkCZeHfHG/dFp7WQNJtCGArfxPlej0UZCvUFswFz
wsqDKDfBRVOzC3ObYEo0cFXA53N5OmUlzPp4510epOlSn18yM77wYmaprC+Y
g+t3BlSj7rjQxTX6bk16bEpaeUcw8gpHbtZSlvPxohJL0X5Vq9CYiXutTRXm
dfFoNaw/BMOv0tUGDwHS9zruhk9spTaxQ/uLFyBDlOyHCaUtowiPQ21tH56r
p4PRSErXyiF6YIUFtF+CiYaMiLinXWqUyenO9zrhXzSgqEpWZ+Xjt92zd7ty
uvO8T/iVKP6O+7MKG5H6Trfuz6WF9fmhzdrV9kn6nCoxVultZnA4+Zs+TskR
jbtkMdmyTHiyjoSXzAnhsBgM1RJ4bNGLKHprfmJuO4OFsDU4RMBBhB9KQDgK
STZfWJxoXrtoYjvCVfiAK+765Qo/EI0Cpc84L3/kid+ezV75/dJPkNZE+9XG
F8tHVb+oyvg7f48kdNvPojSFKBRmPUwskYXCIXVu0N4Cc5tg+Im/5ZYreXIT
JB1es/G8qgnUnEbAHulpb6mrrq4flIzSFSAsJoPBoDPECw1IKsNkqfUmf/jp
zd3mnvJS2xKOrDc6/2Km4fmDRa4Ghi7oO6u0cI0MvbcmvTWlObwzQ1uUDPwH
cZaorplp9mJzXU2V1ItaOHGaBWu/c6p3RhVyk3M0VmHmyYQX39veQqmuatBe
wlpoWHdmBg8i4f0MBwuQYUpWXHzJF3HsaFMXO/TSftlDH8lRMTlvW9q7Otq/
VGc+zGrR2G8ldUhbbmLeLJrQKIl5xPSVFtB+EZC+2qL8dz1qsjAeg8FStRkH
xUQQld9xRyglxW+76HrsXeOwmHOj44s0Jbg9ZNcNf+8MrdFjms7tyXFab+xa
POd2r3MiGGsuI+KwkT43k2po4rMhbTn4ctFkXdY3krfNiXtV47JCBFxkvOsd
6UHQ7X+Dzp9w9A70D4hIf909OaMSfNaA8Nku+M6DOEwCJj4uuahxROJMHqP/
Y8Gj+BQ8KZOQmhCHK2selTa3iZbyLAI5v7goJzOTkHL3StDjPmWV8AfyPTeZ
uRG6GJLRlcwfuedN/7QInrtnBG1WgNYU7KFaUlRstigUdrZ/qSE+zJ45cFx7
CwhN8KUsKyMzv6Qwl0zMSP33SnDpDBPkeW01ds/olJvgouF/dgYpKUu9JRmt
BWEXHTav2exeIAo+/NH3iV4nD27fuvdG+ZfG5yQ8iYCLDbp2M/ntwIy2KSz1
ipnJWYK81PzzRn9bBL1XY/jxN/9s3nAQ8xVtCqZ9wqb31qS3pjSrd4Taek5K
T470vZ70Xqat3DSptshets535c1MhHoxMNry716237J+45lC4V/aOFFy0oVr
vyjUO12FzipiZEhQaPD54ye9/QMD7uFnVEGthhmt+eEXjpqvNjtX0CeWcE2y
l6OtxaYDN8q+Nj4j44nE1Jjgq9ex6q5eGw3rhih4ZOKSH1y7/mg6eGSnvZAG
D68jJ8KrRQ4WplGk6Jjsd83t3R3tX6tJcTPSKP20X6Sr0NfabN0GE2MTM/G/
fV4lagchiR3yLjPydkho0EUHx6v+/kHh6W9makKjJESaqM1/lIDFZxIJOExc
2rOW6Zj++wW0XwZhjr2wL4b4bLY+s1ykozD4/MmTLk6z/XP1jKsemfVxFQ3U
shub/tzkVaLPyTdIK9ZG9CQy7/5rel026UUXg1pxa59ViHiZd/7AM3yReCQw
+3vuPxYGjgTpKsU86qf8O5e8wvKah5kjbxKTKwYRZl9lpJtTqMqwT17/8zsn
bLxJTWOi5zFaa+al/Q5hH2iiXc+Kgpz/SaVQEfHT2GR7SYiL28M3Q/wpVmvS
tcCiHkTyGEVvJXlfyFEe/MEfKvI2/e8mOy//W/4Bwn9+vu5Wq/6z3lV1HrEa
UGYFKE2BdBf4HjJeb2ggjYRmVl6lqjd7HSwwxfqa5Otf3CszQVvGP5eyVU1Q
7LVxlandlZtiC9y6deO01dr/tUFhCrYQjZZkI0OVftvNnPIkT4sChNlb4mVu
bOePffxpVFgdNqMV77LZNlJ1DIvQ8F6b/rPxmKefuFB/f9/T+1b9f4au8h1J
FJikBFuu3xFcizab0j5h03tr0ldTmtU79NpscrlIW/5We0KrpNoiFEq1lX/F
wuhYhuJi4BrFwEaGK27tMpbu4IzaiSIWsv2iUK+0CrlhFy+H5zWPMEfeJiRW
iqvwwM3xX6V5BJo0LJKwv4WJS16fTMI9pV5bzI7cSn3cJLn6NvxJc5uIGePi
tNKwTtBrc0jl3QxqpZ/V/mCpg5/jC7ukwePKzg0OxHYE6Sq4ccDEcL2hNHQY
W3mrPijorf1yWXRl1DUYHvVz7h3PS2H5Yk0kJYo00V8ReeZ4qPKsFo2SEGqi
OMDlGlauidLbp85EvxEq6rcMaMCCsVg9bAxKhPVf65xTO/U5h5z5OWb/mq1e
s2zPigoBtYaIf0edYjbF2JraSZ4jxmsImU3Spz56Y5ybryQd4XaX3Dh0xDev
jc4VTCFfiUmPxe2E001y3eGarjjVi/Yu/KDR/rB30h6DiY/Rxy2O3n0/wR9+
csNqp2dxvzwSMD8n2pvbP6AwRsqu7j6O+TBEZyFsDpeHfMtNKe9VStBp1cGW
q3eHV41Ipy9T34fv/3uNLZpNylBlBdqYYq5QqIsFpkaeX9tzFPNRwQSpZSom
qAnZsWZPmNwEH8IOrPn78EPFRa6nZrGkMPjsno5vovN9CLT8e9vtZ7KlDyde
+24xPlukMjaMVnN753rLsGq54cMO/rXKTmlp7WkYTff2rt96A/UGT1onbPpv
TXpqSrN5R6gtAr5KqK3GmCOGdvHiMXvj1Rlk2ShnekPcmWulih0gs4hhkhKy
x0SasE2hdeJCt18U6hVVofjWQdsbea3iKnzJTCqVVcHF0hWnMDlRs4YnKaGW
prKETVTXj4E712wNLJNf/TVzI/cS1avXSsM6IKBWZxBEwaMx1sboGEbi4Bpi
ptzB8W4+j0XBY87Yoff2Owvc7qKbtja++VKHkB7JHEJ23umOU9CEJklM8Uce
39hn4VWirAmHzUej6xi/ZUDTD//v//V/r8h/i2pEHeF045wM/toXSdHrfCRG
Q6TVGgvfKk06QlhzIb7hCZDxviHuFKsJc8ToyIN6kWKZn7NFoUcC90f2A6Jo
3rlgoiLk0CY3vGR8OK+nJJEs3SSb+uyCmXmIQkUm68L2/9f00hP5CE6EQWew
pgTDz69tWm0TpbT+3tgLz82rDkY2jvfnXdtnYrrrkNv1u8l5FS2DE2PK0Z7z
g+RkaHi+SPbcx+lIdV67yi6qXk0rU03FB8r9POIoVOVMXHW9RdSmmBudLMDg
9OX5WpmaWdic8QnH5lR8UWcC53VGFwvlJsA5rVtj+0DZBBzNlhTe6pXj28fb
lgb22A5ZYJ6ouWVu5KzyFMz5QXZab3peXmpnipPB34ejKWrvdYzPEfvXbb72
TlP2o5NrFH+v/9akp6Y0m3eE2uoVaetTrJ2pTXSDRFtZGVUK2oomKGlrFjEI
cxalhA2NExe8/c6tXmEVKoOtt7mlfZVWoTiZ3CqrgseWbbcV7omaNTxJuaOc
sNUG7TSxT57OLWjVN3cYnshVuXrtNIzS4UrXJnTwsCh4xB41tI2RBo8sokLw
yInKQDfoUt/tVzNCh4Qe2HwmTaqJ3qLELJlDnnuYbQ+Sa0KTJISaKPPevM5a
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
BO+eTtimUKtRZPuim7Y2vvlS25MeyWxPdt7pjlOYq0l7F37QaH+YTBYTH6OP
Wxy9+35ian6a1N77jMaI/au3+el33zoAAIBfCQ6LqcRA2a0LDylUpWMs5bU5
Od04J4O/9kVS9DXLUBiM96zf6qtpzgHCmgtx4ihAxvuGuFOsJswRoyMP6kX3
PObnbMI7Wb8d90f2AyK6ja84fXm+VqZmFjZnfMKxORVfBifGZPcb4Z1ZKWH7
eNvSwB7bIbvBTNTcMjdyVu1P4PwgORkani+S9RxwOlKd166yi6pXujFP1oXv
+cvswhP5gHOEQWewpgTDZd6b11lHNSt+e+zFlY2rbCMaxzVXdbps53VGFwvl
ZeOc1q2xfaBSNiVs72qTC09nlD3y7J9tq6yjlct+edls7cGIJganP+/aPhPT
XYfcrt9NzqtomVG4ZgQTlcHW29zSxHn1FK+nOJksHRBJfeaxZdvtGWLQQahi
TfSKNPEp1s7UJrpBoomsjCoFTUQThJpA56Apzdc7SbmjnLDVBu00sU+eTn1o
1Td3GJ7IVdYFOtfMokbh04NywoZKjSLbhx7YfCZN8n6R11uUmCWz/XMPs+1B
8qxosi5s/39NL82Q5Dw1qb33pxifIqxXbfF9C0uxAQDwm4J0FIddcHU7Jf/n
YmdquOO4q8IRN7d/kqpH5A/SguHHXhv/2uRTrrdZZeIetk3eaoOxYIKSfsPj
nPsZjf/OeIYXd0qivfC2gLTEHze0Fj7mT4luiCUZT2V3M37/C0IG6pUsGCOt
5dgAj+N7t5kZGGzacz7144QkF1CTsBk6ELtlfY0TNf7mRiezVG6RzJY4a+O9
EbK+Pm53hrvJBudHzcrZ42j5FcM/t/tUq771YXdk2q9dZ5vQpvj1iSrfrX+a
XXlJ1VxVadnNcTYG+yJlfUrcLuJZA4NTSS0qZb+4bPTXNp8Zs/DYncSjG1Yd
TlQuu/ratr+Mr7yiiuzUVv4oyOPYga2mxgYb959PqZ1A95p8our2dlP3zB8S
O1JfYfF1k+L/RFoSDpsdwagMVtJFqBLEmkg4amQTJdVEKUFBE+UEYj0DrYOm
NF+vuoTN9FjGtC5o1X47DB1VUid0rpnSrEZ1CdvcapyiVQVamriSZbavwKZR
ZLZPsjU5ipH3W46We5r+YX59Zv40P01q632JgfesgmmiAAD8zmjfcTFZE7br
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
    "], {{0, 80.56211283448725}, {589.6005957001854, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{483.861386138613, Automatic},
  ImageSizeRaw->{589.6005957001854, 80.56211283448725},
  PlotRange->{{0, 589.6005957001854}, {0, 80.56211283448725}}]], "Output",
 CellChangeTimes->{3.879850262315454*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"83256ba0-7c4a-42de-b531-b71ac6f0cf28"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnelbE2kSwOfZ/bIf9z/Y3Wc/6Cwio4YRDYrgAR4zICCH3KcMKgwCAsow
oDAziogwHIIDBBIgnOEG5QoqEEYOOcKhcoZDrpCEpLvTOdwEBLoDgutGDeb9
PeHoTld3012prreq3uJfzt6m7n/56quvfP8m+2bqFKB/5YpTkNnfZQvnvHx/
uODl5nrSy8/tgtsVHee/ylYayL7Ysi/5728AAAAAAAAAAAAAAAAAAAAAwJeI
WIig0o+4f6kYQUQfcf+AbYlEJFwGFUk2eFuKyID5cgQwLF8Qb7FDwdDT/LzG
caHSzlAICwQwurYsnmsvznvUx93qRABqhAia6a3JSUlKSSVl5ld3sRYVbKmE
01kYHeZ//oi25jf6Jk7egaFRGY2TmyiplN2SFplEn0CUdopQX5qnqbFP1isY
c9ozzQ9+S6ybAIYZsATyqoqUVtkzC8ksMsIZKI+6GpT+bBZvmWU2mdt513SP
hnFMy/yWNpnHiA+5VcZCN9nkf4XXHm19WNc+qYuPXSuZfZIYfKdmeqPHCEDN
EL8uD7HxSGxlv9UGqXCy6mczm7stfIXtpvI9CBp6IQ3crfaIDlGv+txvFyj5
RGHewgJvnZFHX1ECvBM64I0kAGoFxCRd+M4ppnl+1a5JZ0o9iUbhjXiV5dBD
9HbqeORPbWX/kJ4ED/c/+pXnWGyOmJXvZ/frE94nOhxAhREKZOM42VBPjhCV
eQ0LDT7EvbbkQawjDHXFmO7abZW4pYbCzN8dbGM6IdxKFBGiCITI3Q0pKh9W
okLZonDLyMb7yKHDZGdzxc8dQA2RCPmTzIai3ILCglxKdmUriz9V4LpP0yyp
Dzu4YmW5aO88HtG0le0TsahupwNrOdh1ELOCfD/2F9/QHCZnprs6h5ROTk/4
JeAn8jPuproM9VZkJMdG+IdSZXI9j6gZ6RnkhIig4IxWnNxi669nbeJ6gYOh
1kghVkOc/+Xwwp55RG6TF4frCqjpPxnu3OeWN44Z1LGrr+pq6PxYNrOVGeU2
hZ6ywFluyUwNpaCdM1d31ei40w1SVS9bZmjRxd6E80aXiiffPXCUzFRnyuVq
Aw0NXMPSHjLfyt23PuGFkxONU+0NL1XMfszYNUC1kc43xzmdcExkzK+F3Raa
f7c7qPGf05FtmCEfvy3qlMY+27QhxcibVMFrlrwucTdwoE2sKZp0rimT0iaQ
+QA2hMO+tCFo+UgwM9qYaEl+9U5nRSZHyZLLpdvvI/rTBlflYowPnMfLsWu9
DC1I794V4EuH3xJjSTj0Y8EY1jBC3ZEmmhpHQ+gYB0E4RHLU0vjudptCPEPC
n5jl46wqOpJta+BWNbu2RopwxudE0tlyP+LhwMqVN8RTBRd0jgY/xnkhOGRy
LJncXPkVvUMBVWty+Z779UMacHLcxqunTGJ7oA32AlAHFughRju+vZw3gdVF
6XSJt87Xp0PrFtYe1tK5Uh/iDt3Ah2z8DtBBGqkMbwrlmqzvUo53QmT75zWF
G+53zWGtJDE49SF6By/nv940ECKXa755nOiaPb4mF2xw4GIhXo7bFHAaaLL6
AjETz2rttkh5iVVF6Ux5gD7BJqEdO37iMcJP7NrrnDWGT6YJOihx2QP4Z7rk
dan7EZvsUYWkCNKXYEE0jWPCq6J3Tb61/gNzaOmGXi7Sm3hO5xxG7vnd7w9a
Jb/EH5Rde9nQkjQIvAs1Be5PsthL9K5dwKyD+ske+uY3qnE2D+lPttTSMo7p
xhg9qWixPzPoWuqAovpwGTdOm8cy8YEE8Xiu24ETYU9XAh/oSLoD8eStZ6vO
CsyemZlfH3wQj+d46By9+XQlwiZztu11zvz2J97JEbGy7Y28qube788GfHnw
W+9aG7jkDCESqdwmilFuf26ArWNUw9Sq7RXJy4YGcy4Rdur7Vk0jy8Dw4kwP
7cZ5Q5fUF+tqL2RK637K9+E8buVCffAhXZ+SlaSyzGn20dUPWHVWFtujLYj7
Le62KIb4Fuqv6RO9S9fkynyJh4MUnZzFZxFnHRLXfaZUFansosqjMKhQ9gOU
PykF8dTjWM+LYdTW0Vn29IuGtJv+15MaxgSrz3nheENKmL+nlaG25h69sz4/
h90IDwsNDfRxMz+hRyDou6e/2qCISOZIOFlHtWFz1SiryNfyKm18xeXgNUUc
03HPXnWaof40TyOCjlUCUyGfwiryOe9fMLEmh3e2357lYJqT5S3G4v93LT4V
ovnukqR70cmZmaT7UbEU+rAABA+VgQRZGO1urMojU6il9I6ReYEQPwST22QY
WirmhBBk1SYLlss7NzYoSG+yp2tCD85EigV8SLy2QaLVfvNErAcihARTTeTS
PsVBG15O7mybxSukQETDWT6OdxSrRFQU0UhhkGMAdYAnt8nILCPxB5eYp2yg
y8pBIhah8rJkkVhJVxQdzQ/0imW8K30snsh11z0W3ox3JUQjdUVNmyY3xON5
bgcNbypkGZHeVH/fFOb2cC14jbdNja49Wo1RooNkByOX1Jfb4+zVkcX2ByER
hcMb3yB2Q5C+/pWyOZzWcntrHzI2N05s+vUjen6lOG0Xv66JuRb9eH57WDUe
I+I0wSIFE7fkPrlmQHBMX5dwAqgM3OeZd+KrhjeohUBHaD52ISVTWGcXHmqo
eDqy+e1ERwp97YLLsHKi6aaUO2mNs9ukOhkdIdsS9jkVYaoJoe4oY01iQD17
EzHAZwaZaC2hNbI2UE+xQAArKh+65WyqdXKiufay0qfDfCXaYxSGtgb+0APy
O24b7Sa4PcIkQJH+RHPNvY65LDDtRZWRoB95wqhEqNQoFjJYfPOig4OT/WYv
lx/jm+c+7CHAbQkx0CBcqMFEKJEXyRaaWlagZgSgXD6uTV7WZPdqTAoHGUg6
J9PkVKDJH86///HPL/L1ua/rJvA7bsm8C9dKTFEK3BdvprnHIWdMmVMe1YzP
rnKqqMnvZZORD7XJwuEMm317bLGZHX7Hb2d2HfSrBiM+gBJBhkoiLjs7uzpt
9nL3TfxQP/kNrzn85F7jOExKiFPnp7fHNgU4FwDl8nFtssxTfvyrsb43bWLl
kwB3J5jrOyR9stm7gPdmi05GCsBqdwfRoTx/Gx9yD3dpbu30kxhHu9v07RIP
Vx/knYxqqSkP/khLpxTUdK7rZKQAt4VaxlR2UwyVB53tpMXfiUoip6fG3b6T
Vju4uD3yk2oE8qoqI6WyZ+ZtJ6OKyIDrac828SihruwM+pwa3saVqk4hqOpU
RcSvK4JtPeMxnYwmqsJMbO8x3lWjho4Wp5WC1BZA1YB6092+d4nGdTIqu0A8
Fda4cYMM6SydRAUtKgAqyAadjLyI2tbk5ToveTMhIQytdg9abMsmL08RQWGB
QO1GfgDVZamTEb0oL6+QlpOZUyHvZFToRPjGJKkffiNdYFZnkVLuBlxPZvCW
dBl5kU9e6rAJv8z2NbWLbOKoocMMUD2kEOtxgq9XRP5KJ6OhOlpWesixr7Wd
8yfE/La87NphAZv+05mT4c3yAnzJ1ENyyZKxFo4W+BkQbClgYjTg8yOdZyTY
GzrH4zoZMWLsdHdofHerbZHNyCI3st9AXbFmBywS+uW+MYdBoXa9DcDxO+Pd
Asu37NIFAHxs+H9GW+4/6FOI72TUc8tEa8ex0HqOFOFMzIjewF0J5749d68D
Wnozj9K4UmogGsu7lwWyXIDPzgL95+M7D1zMn8R3Miq9dGCXUWj9Uicj8dIs
VBtt45ilKdfoWFlm1crmkslaSuZztUuQAFQOiHnfbJeW9QPFTkZBh7Tt4lZb
zaOjWU4HT0QsTeWXzjVk0d52p5BynxdmFr0AFhnw2YH7kqx2E31qcJ2MBjJ+
OHb2JqaTEdybbK5reX+pP8Ziew61XR6AkyDzncWUst7tMcEf8KXDb71ncdSd
utbJiNeXG2TtFE3HzTnlMSJtzwSVj8EiwUBRRs2UEBVMtBVTijsmgT0GqAji
qYbYSx5hOc9G59jTL+ikcN/gZPqYYmsdKae3LO525ANafnTI9cScvOzcEsYQ
BwFlYAAVYqmTUVNlHoVMLavfoJPRW0RCBEGmq1Oy27nLeUAQeQOoHu/ZyYjf
QSE1v7v9NwCwPRAOF5EqN/nfIgDA9oDdWlICJq0BvgQEoCQZAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAD45PwXk73xgw==
    "], {{0, 47.053977407753614`}, {169.67949428856605`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{122.61789337412053`, Automatic},
  ImageSizeRaw->{169.67949428856605`, 47.053977407753614`},
  PlotRange->{{0, 169.67949428856605`}, {0, 47.053977407753614`}}]], "Output",
 CellChangeTimes->{3.879850262334969*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"6dd464aa-fed0-47b1-a07c-c83eaa0b351d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dltrasphi", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["i", "zz"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "xx"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "yy"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}]}],
        ")"}]}], ",", 
     RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dltraspsY", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["i", "zz"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "xx"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "yy"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}]}],
        ")"}]}], ",", 
     RowBox[{"\[Psi]", "[", "t", "]"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dltrastheta", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["i", "zz"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "xx"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
        "+", 
        RowBox[{
         SubscriptBox["i", "yy"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Psi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}]}],
        ")"}]}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.879428449168952*^9, 3.879428452055166*^9}, {
   3.879428534814678*^9, 3.8794285466480947`*^9}, {3.8794305898294306`*^9, 
   3.879430593993904*^9}, 3.8794323790447383`*^9, {3.879598700848051*^9, 
   3.879598720437153*^9}, {3.8795994410211*^9, 3.879599463297908*^9}, {
   3.879599793928029*^9, 3.879599795321077*^9}, {3.8796003854002275`*^9, 
   3.879600395451821*^9}, {3.879600437858259*^9, 3.879600458731973*^9}, {
   3.879600575198997*^9, 3.879600584305574*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"a2208245-c9b3-4f2c-b0a1-1b091ac74a51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["i", "yy"], "-", 
    SubscriptBox["i", "zz"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.879428535599395*^9, 3.8794285484226217`*^9}, 
   3.879430595664913*^9, 3.879431979719593*^9, 3.879432380461606*^9, 
   3.879596988887305*^9, 3.879598721703916*^9, 3.879599466113827*^9, 
   3.8795997163518076`*^9, 3.879599900604106*^9, 3.879600397039729*^9, {
   3.879600439399046*^9, 3.87960046018984*^9}, {3.879600578883497*^9, 
   3.8796005853210335`*^9}, 3.879850262553138*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"f8aba8eb-0464-4368-81f3-602c4b9f3d6e"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.879428535599395*^9, 3.8794285484226217`*^9}, 
   3.879430595664913*^9, 3.879431979719593*^9, 3.879432380461606*^9, 
   3.879596988887305*^9, 3.879598721703916*^9, 3.879599466113827*^9, 
   3.8795997163518076`*^9, 3.879599900604106*^9, 3.879600397039729*^9, {
   3.879600439399046*^9, 3.87960046018984*^9}, {3.879600578883497*^9, 
   3.8796005853210335`*^9}, 3.879850262563139*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"cbdb0db3-df91-4bde-be4c-631e611eceb2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{
   SuperscriptBox["\[Psi]", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["i", "yy"]}], "+", 
       SubscriptBox["i", "zz"]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["i", "xx"], " ", 
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["i", "xx"], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
        SubscriptBox["i", "yy"]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
        SubscriptBox["i", "zz"]}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.879428535599395*^9, 3.8794285484226217`*^9}, 
   3.879430595664913*^9, 3.879431979719593*^9, 3.879432380461606*^9, 
   3.879596988887305*^9, 3.879598721703916*^9, 3.879599466113827*^9, 
   3.8795997163518076`*^9, 3.879599900604106*^9, 3.879600397039729*^9, {
   3.879600439399046*^9, 3.87960046018984*^9}, {3.879600578883497*^9, 
   3.8796005853210335`*^9}, 3.8798502670353575`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"ed1c3dff-df0e-4da5-aaa5-c238daf5a6fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
pw==
    "], {{0, 42.}, {300.6, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{300.6, 42.},
  PlotRange->{{0, 300.6}, {0, 42.}}]], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"ee6faa11-59ed-4795-9861-c495c887afac"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
pw==
    "], {{0, 42.}, {300.6, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{300.6, 42.},
  PlotRange->{{0, 300.6}, {0, 42.}}]], "Output",
 CellChangeTimes->{3.879850267138011*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"98cb595d-9dd1-49a8-998a-22bd988ee7a4"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8795994366982145`*^9, 3.879599436703229*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"31749ec6-6e9b-4afb-8d1c-e55bbf548aa8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dtltras", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"dltrasphip", ",", "t"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dtltras1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"dltraspsYp", ",", "t"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dtltras2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"dltrasthetap", ",", "t"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.879430530237259*^9, 3.879430542601666*^9}, {
   3.8794306720015135`*^9, 3.8794306768210735`*^9}, {3.879598741950974*^9, 
   3.879598768220607*^9}, {3.879599475170763*^9, 3.879599494151727*^9}, 
   3.879599544554394*^9, {3.879599788328932*^9, 3.879599789106273*^9}, {
   3.8796005291966567`*^9, 3.87960054494494*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"5c4d4a4b-5761-49b4-b747-c29dabbe6b84"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["i", "xx"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "-", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.879430543126323*^9, 3.8794306815351133`*^9, 
  3.879432397134244*^9, 3.879596988996528*^9, 3.879598887856203*^9, 
  3.879599497712716*^9, 3.879599903705316*^9, 3.879600547203831*^9, 
  3.879850267271525*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"4f5761a6-b4dc-49be-86da-9d3f5da62d82"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubscriptBox["i", "zz"]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{
   SubscriptBox["i", "xx"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], 
  "+", 
  RowBox[{
   SubscriptBox["i", "yy"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.879430543126323*^9, 3.8794306815351133`*^9, 
  3.879432397134244*^9, 3.879596988996528*^9, 3.879598887856203*^9, 
  3.879599497712716*^9, 3.879599903705316*^9, 3.879600547203831*^9, 
  3.879850276837394*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"4811e994-9384-42b5-90c8-e6636cb49b52"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["i", "yy"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}]}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["i", "zz"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.879430543126323*^9, 3.8794306815351133`*^9, 
  3.879432397134244*^9, 3.879596988996528*^9, 3.879598887856203*^9, 
  3.879599497712716*^9, 3.879599903705316*^9, 3.879600547203831*^9, 
  3.8798502819582586`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"bd0ceee0-c14b-4285-853c-598a0a37cdf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 113.4}, {268.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{268.2, 113.4},
  PlotRange->{{0, 268.2}, {0, 113.4}}]], "Input",
 CellChangeTimes->{{3.879430639219083*^9, 3.879430640766316*^9}, 
   3.879430925645881*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"3668e013-01f8-4bcc-ad20-820085219227"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 113.4}, {268.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{268.2, 113.4},
  PlotRange->{{0, 268.2}, {0, 113.4}}]], "Output",
 CellChangeTimes->{3.879596989031252*^9, 3.8798502820252233`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"a817971a-ccdc-45f6-82e0-dd6a78b3dfc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"dtltras", "-", "dltrasphi"}], "\[Equal]", 
      SubscriptBox["\[Tau]", "\[Phi]"]}], ",", 
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dtltras", "-", "dltrasphi"}], "\[Equal]", 
     SubscriptBox["\[Tau]", "\[Phi]"]}], ",", 
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"dtltras1", "-", "dltraspsY"}], "\[Equal]", 
      SubscriptBox["\[Tau]", "\[Psi]"]}], ",", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dtltras1", "-", "dltraspsY"}], "\[Equal]", 
     SubscriptBox["\[Tau]", "\[Psi]"]}], ",", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dtltras2", "-", "dltrastheta"}], "\[Equal]", 
     SubscriptBox["\[Tau]", "\[Theta]"]}], ",", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dtltras2", "-", "dltrastheta"}], "\[Equal]", 
       SubscriptBox["\[Tau]", "\[Theta]"]}], ",", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.879430686196331*^9, 3.879430790186917*^9}, {
   3.8794308875964155`*^9, 3.8794308917060957`*^9}, 3.879432447395793*^9, {
   3.879598941662818*^9, 3.8795989538596272`*^9}, {3.879599016050709*^9, 
   3.8795990341232634`*^9}, {3.879599512415535*^9, 3.879599567834694*^9}, 
   3.87959978318427*^9, {3.879600603544278*^9, 3.879600630605411*^9}, {
   3.879600665157226*^9, 3.879600672105628*^9}, {3.879600712958562*^9, 
   3.879600719846915*^9}, {3.879850191493586*^9, 3.879850191946695*^9}, 
   3.879850233411231*^9, {3.879850495429229*^9, 3.879850501981786*^9}, {
   3.879850532256115*^9, 3.879850532539503*^9}, {3.8798518062569265`*^9, 
   3.879851845010665*^9}, 3.9201972764237976`*^9, {3.9201974599577713`*^9, 
   3.9201974866307735`*^9}},ExpressionUUID->"1f9e9b45-bf43-42be-8960-\
92b3d3d04280"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Tau]", "\[Phi]"], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["i", "xx"], "+", 
         SubscriptBox["i", "yy"], "-", 
         SubscriptBox["i", "zz"]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], 
     SubscriptBox["i", "xx"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8794307109675035`*^9, {3.879430778710758*^9, 3.879430795042411*^9}, 
   3.8794308926378207`*^9, 3.879432400496087*^9, 3.879432448484607*^9, 
   3.879596989078853*^9, 3.879599035900506*^9, 3.879599808565557*^9, 
   3.879600632719272*^9, 3.879600672703107*^9, 3.879600720959174*^9, 
   3.8798502821107593`*^9, {3.8798505038110943`*^9, 3.8798505336283464`*^9}, 
   3.879851846517707*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"fc36739b-8e04-443b-8610-2c0e046d932d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Tau]", "\[Phi]"], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["i", "xx"], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["i", "yy"], "-", 
         SubscriptBox["i", "zz"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Psi]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["i", "xx"], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], 
     SubscriptBox["i", "xx"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8794307109675035`*^9, {3.879430778710758*^9, 3.879430795042411*^9}, 
   3.8794308926378207`*^9, 3.879432400496087*^9, 3.879432448484607*^9, 
   3.879596989078853*^9, 3.879599035900506*^9, 3.879599808565557*^9, 
   3.879600632719272*^9, 3.879600672703107*^9, 3.879600720959174*^9, 
   3.8798502821107593`*^9, {3.8798505038110943`*^9, 3.8798505336283464`*^9}, 
   3.8798518465367093`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"553197b7-fbee-4911-8879-0cdbabc02ba3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Tau]", "\[Psi]"], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["i", "xx"], "-", 
         SubscriptBox["i", "yy"], "+", 
         SubscriptBox["i", "zz"]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], 
     SubscriptBox["i", "zz"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8794307109675035`*^9, {3.879430778710758*^9, 3.879430795042411*^9}, 
   3.8794308926378207`*^9, 3.879432400496087*^9, 3.879432448484607*^9, 
   3.879596989078853*^9, 3.879599035900506*^9, 3.879599808565557*^9, 
   3.879600632719272*^9, 3.879600672703107*^9, 3.879600720959174*^9, 
   3.8798502821107593`*^9, {3.8798505038110943`*^9, 3.8798505336283464`*^9}, 
   3.8798518465497065`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"90fcd4d7-16e3-4d66-96fc-2dbfe6d985c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Tau]", "\[Psi]"], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["i", "xx"], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
           SubscriptBox["i", "xx"], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
           SubscriptBox["i", "yy"], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
           SubscriptBox["i", "zz"], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["i", "yy"], "-", 
             SubscriptBox["i", "zz"]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["i", "yy"], "-", 
             SubscriptBox["i", "zz"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["\[Phi]", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["\[Psi]", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["i", "xx"], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"], " ", 
        SubscriptBox["i", "xx"]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           SubscriptBox["i", "yy"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           SubscriptBox["i", "zz"]}]}], ")"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8794307109675035`*^9, {3.879430778710758*^9, 3.879430795042411*^9}, 
   3.8794308926378207`*^9, 3.879432400496087*^9, 3.879432448484607*^9, 
   3.879596989078853*^9, 3.879599035900506*^9, 3.879599808565557*^9, 
   3.879600632719272*^9, 3.879600672703107*^9, 3.879600720959174*^9, 
   3.8798502821107593`*^9, {3.8798505038110943`*^9, 3.8798505336283464`*^9}, 
   3.8798518465716667`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"9175aaa7-fc65-463b-9ca0-5ccd7743d93b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
          SubscriptBox["i", "yy"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
          SubscriptBox["i", "zz"]}]}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["\[Tau]", "\[Theta]"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["i", "yy"], "-", 
          SubscriptBox["i", "zz"]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["i", "xx"], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           SubscriptBox["i", "yy"]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           SubscriptBox["i", "zz"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Psi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["i", "xx"], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["i", "yy"], "-", 
                SubscriptBox["i", "zz"]}], ")"}]}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["i", "yy"]}], "+", 
             SubscriptBox["i", "zz"]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8794307109675035`*^9, {3.879430778710758*^9, 3.879430795042411*^9}, 
   3.8794308926378207`*^9, 3.879432400496087*^9, 3.879432448484607*^9, 
   3.879596989078853*^9, 3.879599035900506*^9, 3.879599808565557*^9, 
   3.879600632719272*^9, 3.879600672703107*^9, 3.879600720959174*^9, 
   3.8798502821107593`*^9, {3.8798505038110943`*^9, 3.8798505336283464`*^9}, 
   3.8798518465966625`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"652c9b52-5f22-43d1-898b-d95b23d9463d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Tau]", "\[Theta]"], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["i", "xx"], "+", 
         SubscriptBox["i", "yy"], "-", 
         SubscriptBox["i", "zz"]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], 
     SubscriptBox["i", "yy"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8794307109675035`*^9, {3.879430778710758*^9, 3.879430795042411*^9}, 
   3.8794308926378207`*^9, 3.879432400496087*^9, 3.879432448484607*^9, 
   3.879596989078853*^9, 3.879599035900506*^9, 3.879599808565557*^9, 
   3.879600632719272*^9, 3.879600672703107*^9, 3.879600720959174*^9, 
   3.8798502821107593`*^9, {3.8798505038110943`*^9, 3.8798505336283464`*^9}, 
   3.8798518466111965`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"1ded0d82-8bc9-4df5-8790-57157c2d8f70"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
zHgifiCqAAAAAAAAAID+z/8BGZW5hA==
    "], {{0, 51.6}, {183., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{183., 51.6},
  PlotRange->{{0, 183.}, {0, 51.6}}]], "Input",
 CellChangeTimes->{3.879598404552697*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"83c119dc-caaf-4fd7-bd47-f978fa153f82"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.879851872310319*^9, 
  3.87985187232029*^9}},ExpressionUUID->"877cd64e-eda8-4914-8c43-\
95a0f4012b51"],

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Dkt9ZAKhth0JeeQIQ9sglvpojwml7e0Y2FuFluEZll7EkZRWR1+Iz3nHqNff
khd50VJfVHiN1Jf7L95/2vbybTNr6PmBFwPuEGqomJp+U5+DM9IQUf7RN7Ox
jKU+UrbfdvVVX/x4JaNx/iQBb6Ur9bQDEuM41/2RwrSvJGU+w8okflR9R3yj
0YoEOSoilxnkEPWp/OL3CPmYGQ3beb/YruouKjT2maq0zAvh+MKadxoidmZe
3fOFgvGP1zMaX9Jb0n3MFFWMj4UXT17gp2df+vpn75u5zZiaT/GCEmeyWR6Y
IarLY6kvN34XcsXUJYzIheL8ICn8oOZKsY3HoonPBxiu2CCZeeXo3fKOASya
jiOVabevHrIMziSzzUOjpqUH+Uh7YEh+5EiDE0GI+kojonJHE0wawU3HJ+pR
fQMhMplUx3vt0TLPh+ELx4e9hPzCd1qD+wfx1m7NNXJWPo/fbJPWcN9Wf73o
N673iF0TT0bApvpGBorRPNPA9nrh4xiG+grSbpnrSRrYBRa0ciGp4jv1IWln
0GNykr/W1eSs5rrU1JKurpdI2ul872l2pMPJyExSZ0laWl1nJ897NqI+FQ8c
zuMaMrgbnWaCqu/IZT+/S3HE+nae97vq6PMJBUyh0TIzylpbaT0ZF0LTC6sZ
o73qzExKyzSSzyHi7T2aEgJqx0Py2aREz/b8SnmF0HbXeGLXhD5hTayp4w3M
qQ/Jq3IC9hjvtg0I8dtu6OESEO6zf7uVXUB243wf9PWT4tTkxXVc7qMpJ9Pv
1Dt70UFqnQjYH4DGPGq6s5r0EvDDNUwEQKbzuQf3iN1YIUcZqqzRdLpbyuu4
h0Q9A8VPx/xOC6/7DwK/0WJzQDVsQ4tapm5le5q7wYZlYD26ZoC9h3akuxgq
/hsoHr76ZMKeO1P1DdHry4sqGjpfcG3AONxLSgl0/E5z1RIxCVljmysp5Ofv
b8TX15yAO6i+fLWU9t4rWS30sXjak+wov9rMPaWObSTcTvA7smmdkLiuyaGQ
7BY61h5UWKYbjy/t6Bg3uXLUfpkzPMe7GyouQ9R7Ia6a0yCtjt2hIwOA6rGg
PHaJDdOJiVeObVVa/rEAAEIrv9h+/Dqhrmv6d4T+xHebmp37XVLP+/ovTMxY
ve/9M5jvu0li2YLF5rjM5l5WZv4/6qM/8doksXTB4u+vFDS/wF4OiklIEQbX
ElMb8liDPsazjUZwPx2ZXkZKZg76MGBzvjf6nwZ+vVEMAPXjIQUtnBKiZ3l/
pfwZAJtPhZV0MHvUUGv6FUslBd2dFxKrssNNHQP8YoPdzZU+l9ty6m5px/Sm
1M8F9Y10Jp9YLyYEgP65R6NqG6++npSTCqsXAaDnnljbgxEfH+swynxIKNgz
WulDYaSbAGi+qfTNHZ6nuRpuWPpW9ckfRnJSVFk9+b4Waqvkdp5Pqur5cyzz
bEg4tWn9YqHNp+4WT2eb3zmhvpdPLiqs+Te6MDogp+UlI7CNU99gkb8SYyN3
Mz9CU+9kM2wGe2oKc6e3WLWwoasfkzM3ITOmOvZbNL0E292iK8a5K0PE29u0
JJDP7Tz/WxUVeRlhpSUl8OXJsKdtaP8aG/cNVUTt1ZYWENrhcq+ic8qZXLOl
vlfU5vqWDvoAd9aPlQcrSaFTivQ87tdRGU/kceprS7GXQ0MfOBxc2D6p49OZ
4rBBXHhaGyDouiZUw3VUc4tR9b0Nhvr6i29u1RBHRoEBecwiILvrUhO7X2+d
ADB0Cp06/M2W+rhLdbDh2hULkJvzY0gRU1zj1EcMVl6LJA5g8eHw0na4LBoy
EaPqU7dyDr6XypHqpAQ5qK//bFR9Nb+Z6K0bjYMo7OrrLwr6Rl0cgB0eMRVT
iWpuqK8n2UFODA1t+u4P66iDI+PV10NwVliDHuL1pXtyXQ/35gPRaLRnz541
QviBpqamV6/Y7fdpjPtUj13La27N9jJW+Wwy9Y3U/GaKalPVJjCXY50r5Z75
l7LTSqyAyk+/PmliCxJ//fVXV1cXV+8GlUr9888ZZqblAUpSaMFH2Tm+phtN
PTnV155ykpl4/hBc2MrFUuORI0c+/vjj6d1hrCMoKLhgwQJet4KLfPDBBwkJ
CWzvHj3Pb4vqqreqT8c+qLC1Y2bqe9laUZzD6R48wNloyFjsOxMaz3k9v6aF
9gfbqLGiokJPT++d/ndIPxQQmHiv+QkxMjIqKiqaWbdve3hCVlQI+SGHbxW1
MzwpDvVVsBJPPdeE2p7Jnbr34bogj9P+OUFfXx+vm8BdBgYGhoc5jJH6B7Z6
64WAkMWlpGrOUkpD7D59GQEgZuWdTqGPkKNMdKTBJOO+kaooU13ks995xJDf
Y+b5+vVrrt6NGQc+lOaEQ7IigoiEL6TU04bGqe9lltcGCSSlkDoaUdnxllEf
dF3mOTWxe3UQkakdv5nfzB62erI8tyivAEI7zyei0Y6e72ushgRJI8cw5vmB
7OrrTHPdorR0PrkuI2+GflI2ESRUYBzqq47ctW7VP7k96IPwP/UJDnqywmCT
Q3hx21hP6c//dauaKJDc401gTr3uL75hqbFaAGw8FsSYD8qmPnTGtcpKoc0O
d0vapuxrc0Z9SPaZfFpXTHi5mRf+GW2ITX0DhX4GUsuXb3ZPqn9L1gmBIAzV
xNrryAhLWvikVrO2iRhqiLXXlxGWsriQWkUdzVQ7s3x3Kq8SENI6FlLQ3P9G
fUNVUba60kIbj17NezaN6S5zSH0IbXhPC/GlambOMYlBh6VFTZ0jksLPWSov
lzFxflDdPZNjUiHzjueFN35WWy2uw7a+73O5LU7RZe0cemLONBP9l5TJqbg7
V762v/FrWtYDb1MluS92Xkqqml6ONbfUhzD8spoQ6rJXa62QwAKwWEzLwvFG
am33wPBfvG4YhI+gE5NwR40VlwsuX6m4zTbwcf3EU6eH6MTfr9ibb/xM+CN0
lrXsV9ZesU+b6UPT7WxzTn0sJlrjAIFwB3q2t3tUEvbW9/EKqD7I7AHVxwlU
H2T2gOrjBKoPMntA9XEC1feOdOBdNdBdc9+AzjTb4h5dgZVdDbEMj9RHibYw
XDduGojmsV9zmnm9XWDPk8v7dx4PyWnuheqbPlSCj5YsulRLZue5FHL3a1ii
mR5DHcWp+VWN77CnxHtjoDbRxXDDMgCENA9celRHgxVt/qUm0kxFfCHY4nKP
3AkfW3wB8xAxIPr9+WR4ehFfQyW4ooc2zOohtpC/R238YUM5gfUH/ODpRfxN
XwFOR2HlLB9iC/lbNCY5GSkuEt11PrkKRj5+ZrA0UF9RZLYPsYX8Hboen/9G
dbmQuVtcJTy5na8hR5opiy9UsgsvaeO1aQaZHsxz24Hx6dCS5/P5ND7+p/a3
Q6qSgmsOBeQ/w84hn5C3MVB8y1RHEmyyv1nYBgtD/Ext7EFVCUHhvf5ZDb1T
fzUEAwyUhpjqSgDln65lNcFCPz/TlnRCfa0wMIV2J98wVBnxH31psO7AZXwd
zFb4GVatYeu5hCpod/IJzFqDyPfnk6Ddydewag2ap2JYxzVAMA+z1iBk6hrH
nR3iIbPEYAmj1qBgd7u4De41zB8waw3A2Cm0pAPanfwMOQKtNYgfDMhvggMI
/oBVazCwv1kE7U6+pjaaYXfuwUG7k18YKLxhqiUOVNFzPqHdyccMloTs2CC2
ENYa+IjOx57fqK6AtQY+Z5Caf+OgvOgnAKyx8MSTqX/CagPWGR5oTL/8nYqo
AADK1t54ygu4Yxgf8leMtb6E4PhNuvf6p8EIiFUGSoNNdCTGv2UwAs5lyJEG
6HG1o1j6ParPZZ5gO8oe35Q5dYY031ObcNhMa+wUFROX8LigXUbyY++Yydkw
YhevWwmZGlJEZG49Ix6SI93in6IHRpOjovLqGadJk6Pc456WtcMlEZiCEpeQ
V8GoAtYm+D3Izmx8RYlPyCWyruAeZGc0wnn0fEU33i0IX8YR4mgE91v4chj1
sAo1xy8yNZPYPe5KBox6fAYpEolxnMv+yBFucfll7XDAgVGQIHc/O4s9yFES
/MddgWAfKh6NcRxmDI3gdotQVg/9GYzSmxcYk5ZLYgt7vTn+d1Oz4KQ0PoOE
xLiCsg40xlEJhNL2DvT4SNYAEJUhcqkdJp+YghLn+3tmJuPs6d6cXGJjYzcl
3u9+RmYj40puLrGhESaffMATv+/kV374xiqzwj16Gu+ms55t409Lv5Q6KD7s
0JuD26Hx+djJ0WYuV6+fNdEQGXvHTF3CiDAEQiAQCAQCgUAgEAhklP8HrgZd
0g==
    "], {{0, 56.32218507897781}, {212.45583738652388`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{182.61890984168082`, Automatic},
  ImageSizeRaw->{212.45583738652388`, 56.32218507897781},
  PlotRange->{{0, 212.45583738652388`}, {
    0, 56.32218507897781}}], "\[IndentingNewLine]", 
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
CAQCgUAgEAgEAoFAIBAIBDIc/BeU6QT9
    "], {{0, 67.72920990509989}, {218.87228885121755`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100.9904, 100.9904},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{181.84678508409178`, Automatic},
  ImageSizeRaw->{218.87228885121755`, 67.72920990509989},
  PlotRange->{{0, 218.87228885121755`}, {
    0, 67.72920990509989}}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.879596998998081*^9, 3.8795970329520235`*^9}, 
   3.879598346550682*^9, {3.879598389062157*^9, 3.879598484107535*^9}, {
   3.879598516802399*^9, 3.8795985648914833`*^9}, 3.879599226370615*^9, 
   3.8796007856786933`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"cc9c9ee0-e421-4c65-9f5d-2f3a32908ffc"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.879851889677449*^9, 
  3.879851889682486*^9}},ExpressionUUID->"074a69d5-6271-428a-bf79-\
100b71c7c49f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.879851892979189*^9, 
  3.879851892986288*^9}},ExpressionUUID->"ac42e089-0de7-49ce-9e66-\
6abb6263491e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differential equations of the 6 degrees of freedom", "Chapter",
 CellChangeTimes->{{3.879685053887931*^9, 3.879685090662639*^9}, 
   3.9353295323386536`*^9},ExpressionUUID->"7c4c2d9d-f200-4320-8aa8-\
40958963effa"],

Cell[CellGroupData[{

Cell["translational movement", "Subsection",
 CellChangeTimes->{{3.879685455757083*^9, 3.879685460966928*^9}, 
   3.935329539221115*^9},ExpressionUUID->"f22881b5-87ae-4a3f-affe-\
3af11fc7cfb7"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"m", " ", 
    RowBox[{
     SuperscriptBox["X", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
   RowBox[{"f", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ")"}]}]}],
  FontFamily->"Times New Roman Math Dot"]], "Text",
 CellChangeTimes->{{3.878983860196519*^9, 3.878983909120954*^9}, 
   3.878991715356921*^9, 3.879596985794761*^9, 3.879685232528631*^9, {
   3.879685282943234*^9, 
   3.879685284237903*^9}},ExpressionUUID->"0349ce47-44c5-408e-b0b0-\
9c6360ea462f"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"m", " ", 
    RowBox[{
     SuperscriptBox["Y", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
   RowBox[{"f", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ")"}]}]}],
  FontFamily->"Times New Roman Math Dot"]], "Text",
 CellChangeTimes->{{3.878983770918446*^9, 3.878983829139646*^9}, {
   3.878983911613883*^9, 3.878983913624037*^9}, 3.878991675946819*^9, 
   3.879596985959109*^9, {3.8796852626724854`*^9, 
   3.879685288007357*^9}},ExpressionUUID->"08daca3a-19fd-43c9-975c-\
42ff758f4149"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"m", " ", 
    RowBox[{
     SuperscriptBox["Z", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", "g"}], "+", 
    RowBox[{"f", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}]}],
  FontFamily->"Times New Roman Math Dot"]], "Text",
 CellChangeTimes->{{3.8789839682156506`*^9, 3.878983997672508*^9}, 
   3.878984047632148*^9, {3.878984104576431*^9, 3.878984117430263*^9}, {
   3.878984152030038*^9, 3.878984180394531*^9}, 3.8789910797797403`*^9, 
   3.8789916194691954`*^9, {3.8789916619093294`*^9, 3.878991664568226*^9}, 
   3.879596986016282*^9, {3.879685312836437*^9, 3.87968534273425*^9}, {
   3.879685421278494*^9, 
   3.8796854494218183`*^9}},ExpressionUUID->"ab78898e-4764-4ece-b7dc-\
c59c7acfcdbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotational movement", "Subsection",
 CellChangeTimes->{{3.879685437958716*^9, 3.879685445558564*^9}, 
   3.9353295462212696`*^9},ExpressionUUID->"0aaeccda-14f3-4435-903d-\
22b741ccfafd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
  FractionBox[
   RowBox[{
    SubscriptBox["\[Tau]", "\[Phi]"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["i", "xx"], "+", 
       SubscriptBox["i", "yy"], "-", 
       SubscriptBox["i", "zz"]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], 
   SubscriptBox["i", "xx"]]}]], "Text",
 CellChangeTimes->{
  3.8794307109675035`*^9, {3.879430778710758*^9, 3.879430795042411*^9}, 
   3.8794308926378207`*^9, 3.879432400496087*^9, 3.879432448484607*^9, 
   3.879596989078853*^9, 3.879599035900506*^9, 3.879599808565557*^9, 
   3.879600632719272*^9, 3.879600672703107*^9, 3.879600720959174*^9, {
   3.8796853584118958`*^9, 3.879685372206511*^9}},
 FontFamily->
  "Times New Roman Math \
Dot",ExpressionUUID->"72bb4c44-fdcf-4b44-99a9-44be7cb299fc"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[Tau]", "\[Psi]"], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["i", "xx"], "-", 
        SubscriptBox["i", "yy"], "+", 
        SubscriptBox["i", "zz"]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], 
    SubscriptBox["i", "zz"]]}],
  FontFamily->"Times New Roman Math Dot"]], "Text",
 CellChangeTimes->{
  3.8794307109675035`*^9, {3.879430778710758*^9, 3.879430795042411*^9}, 
   3.8794308926378207`*^9, 3.879432400496087*^9, 3.879432448484607*^9, 
   3.879596989078853*^9, 3.879599035900506*^9, 3.879599808565557*^9, 
   3.879600632719272*^9, 3.879600672703107*^9, 3.87960072096917*^9, {
   3.8796853827956486`*^9, 
   3.8796854001582155`*^9}},ExpressionUUID->"54e23b2b-67ab-447d-acdf-\
5d091c9fa713"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[Tau]", "\[Theta]"], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["i", "xx"], "+", 
        SubscriptBox["i", "yy"], "-", 
        SubscriptBox["i", "zz"]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], 
    SubscriptBox["i", "yy"]]}],
  FontFamily->"Times New Roman Math Dot"]], "Text",
 CellChangeTimes->{
  3.8794307109675035`*^9, {3.879430778710758*^9, 3.879430795042411*^9}, 
   3.8794308926378207`*^9, 3.879432400496087*^9, 3.879432448484607*^9, 
   3.879596989078853*^9, 3.879599035900506*^9, 3.879599808565557*^9, 
   3.879600632719272*^9, 3.879600672703107*^9, 3.8796007209811726`*^9, {
   3.879685405058586*^9, 
   3.8796854186563683`*^9}},ExpressionUUID->"328df9d3-06c0-4299-a432-\
40f0ad1ced4b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9201967374227448`*^9, 
  3.920196739118929*^9}},ExpressionUUID->"afe88d3f-fc76-9d49-9b7a-\
ace214e05a02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["i", "zz"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SubscriptBox["i", "yy"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SubscriptBox["i", "xx"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       SubscriptBox["\[Tau]", "\[Phi]"]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9201967433699493`*^9, 3.9201967901155148`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a34c27db-5e09-dc49-b560-147007489721"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Tau]", "\[Phi]"], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["i", "xx"], "+", 
         SubscriptBox["i", "yy"], "-", 
         SubscriptBox["i", "zz"]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], 
     SubscriptBox["i", "xx"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9201967866271305`*^9, 3.920196791094862*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"99f81076-9410-0b4e-96c7-ddc17cff046f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.9201972217720356`*^9},ExpressionUUID->"f695149e-5e34-7c4f-ae77-\
b7f025735118"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["i", "zz"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        SubscriptBox["i", "xx"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        SubscriptBox["i", "yy"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       SubscriptBox["\[Tau]", "\[Psi]"]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.920197302587555*^9, 3.920197322086745*^9}, {
  3.9201973627196207`*^9, 3.9201974094790897`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d88224e8-160d-d945-bcba-c0a6dbb0e7b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Tau]", "\[Psi]"], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["i", "xx"], "-", 
         SubscriptBox["i", "yy"], "+", 
         SubscriptBox["i", "zz"]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], 
     SubscriptBox["i", "zz"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9201973065269623`*^9, 3.920197322832815*^9}, {
  3.9201973636005993`*^9, 3.9201974104525757`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"78005cfd-9c24-4f4c-a3a0-e8f1c3814df5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["i", "xx"], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SubscriptBox["i", "yy"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SubscriptBox["i", "zz"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Psi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       SubscriptBox["\[Tau]", "\[Theta]"]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", " ", "0"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.920197520412264*^9, {3.9201975505574226`*^9, 3.9201975859229546`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"db1ddf12-179e-984c-a051-47896fb47dc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Tau]", "\[Theta]"], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["i", "xx"], "+", 
         SubscriptBox["i", "yy"], "-", 
         SubscriptBox["i", "zz"]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], 
     SubscriptBox["i", "yy"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9201975518037567`*^9, 3.9201975866902714`*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"54966595-ecc7-0d4c-abbe-f163b1138613"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{950.25, 528.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d5d32ca8-8723-45d6-a254-ed93067339c1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 458, 7, 89, "Title",ExpressionUUID->"900aa3e8-8ee9-4867-a010-b9395b3240f3"],
Cell[CellGroupData[{
Cell[1063, 33, 268, 4, 62, "Chapter",ExpressionUUID->"2e6e19bb-3203-43f5-99a6-41e6f060227e"],
Cell[1334, 39, 131406, 2224, 1327, "Text",ExpressionUUID->"24288c47-4581-46ad-88a9-e5b47a072092"],
Cell[CellGroupData[{
Cell[132765, 2267, 182, 3, 66, "Section",ExpressionUUID->"7a4bd0fa-8c88-7341-8e19-adfa1a7d2ed3"],
Cell[132950, 2272, 169, 2, 28, "Input",ExpressionUUID->"4901e55b-98b5-2641-9800-74a7161d0677"],
Cell[133122, 2276, 1688, 44, 199, "Input",ExpressionUUID->"b36a0c8c-0963-df4d-a3e2-d940fae5e4fc"],
Cell[CellGroupData[{
Cell[134835, 2324, 279, 4, 28, "Input",ExpressionUUID->"2045cb64-02c0-f646-bb4a-9a63cd6510a9"],
Cell[135117, 2330, 777, 20, 32, "Output",ExpressionUUID->"eb020673-cfed-a64a-82fe-e85f762b7e79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135931, 2355, 233, 4, 28, "Input",ExpressionUUID->"c6fb2606-5db9-c844-9a67-2ffaed5fd6ff"],
Cell[136167, 2361, 1037, 30, 76, "Output",ExpressionUUID->"867abf2b-2cd2-0b40-8f25-bd2f5e6a8fc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137241, 2396, 239, 4, 28, "Input",ExpressionUUID->"f926d46d-197e-c445-af37-fb5b6adb92e9"],
Cell[137483, 2402, 759, 20, 32, "Output",ExpressionUUID->"6475bb2d-f518-9048-9021-efc3063215dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138279, 2427, 378, 7, 28, "Input",ExpressionUUID->"a4ee38e4-1596-f64b-939d-181637032827"],
Cell[138660, 2436, 525, 12, 32, "Output",ExpressionUUID->"cd253614-c8a6-a04d-86cf-c66de48bbbd5"]
}, Open  ]],
Cell[139200, 2451, 1597, 45, 199, "Input",ExpressionUUID->"ff4383ea-a192-664b-adee-31a6a222f597"],
Cell[CellGroupData[{
Cell[140822, 2500, 216, 3, 28, "Input",ExpressionUUID->"db4b4d1c-bacf-0d44-93d5-0313ff06ab45"],
Cell[141041, 2505, 1065, 30, 76, "Output",ExpressionUUID->"9d99a223-0f08-9a44-844b-0b0bc68433da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142143, 2540, 242, 4, 28, "Input",ExpressionUUID->"1b98b4f7-d535-e349-9b95-f22379cd4b9f"],
Cell[142388, 2546, 763, 20, 32, "Output",ExpressionUUID->"16ae95f4-71f7-0a43-975c-8c37fed8f178"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143188, 2571, 376, 7, 28, "Input",ExpressionUUID->"c8e58423-a038-2b4e-8df9-aac90c6831ce"],
Cell[143567, 2580, 500, 12, 32, "Output",ExpressionUUID->"93876675-5c9b-ca45-a037-1de1acf47d45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144104, 2597, 169, 3, 28, "Input",ExpressionUUID->"cebec508-258b-bd4e-b6b5-69b9cf091221"],
Cell[144276, 2602, 674, 20, 76, "Output",ExpressionUUID->"bd231f8b-9e50-9841-84cd-3030fe774946"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144987, 2627, 1690, 43, 199, "Input",ExpressionUUID->"2e347aab-de18-f04b-9eba-7d339dc2cdf0"],
Cell[146680, 2672, 282, 5, 32, "Output",ExpressionUUID->"23e4bcd8-ca25-8945-8048-1f64b0da2f9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146999, 2682, 312, 5, 28, "Input",ExpressionUUID->"2d704751-8543-6245-802a-19c298638611"],
Cell[147314, 2689, 1113, 31, 76, "Output",ExpressionUUID->"08781090-f086-ea49-8bfb-f62cf515908b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148464, 2725, 343, 6, 28, "Input",ExpressionUUID->"22b6a406-9351-4541-bd9b-d83344262eb7"],
Cell[148810, 2733, 806, 21, 32, "Output",ExpressionUUID->"e27bc3d7-b3c2-7a49-9c1d-1c9415af03b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149653, 2759, 420, 7, 28, "Input",ExpressionUUID->"2e74c576-7b1d-5a46-89fe-54e5cb16bcaf"],
Cell[150076, 2768, 582, 13, 32, "Output",ExpressionUUID->"9a787ed4-fd71-ca40-bdc5-ee8e03a501d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150695, 2786, 345, 6, 28, "Input",ExpressionUUID->"4232f0e9-fb20-1845-8164-2e0ebc512ba7"],
Cell[151043, 2794, 505, 12, 32, "Output",ExpressionUUID->"a9e2fcfa-643b-c447-b87a-25cab3062e3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151585, 2811, 224, 4, 28, "Input",ExpressionUUID->"1456dc9f-5d81-3c4c-8f16-9306a5e56f34"],
Cell[151812, 2817, 509, 13, 32, "Output",ExpressionUUID->"39603fb9-18c7-db4b-8a27-83d123da83e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152358, 2835, 279, 5, 28, "Input",ExpressionUUID->"17c3651c-b0ef-a240-8f49-90a9e5f7e848"],
Cell[152640, 2842, 1494, 41, 51, "Output",ExpressionUUID->"4a4bc713-9e79-184b-8ade-f8c2c089b2ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154171, 2888, 164, 3, 28, "Input",ExpressionUUID->"07813a7c-e461-d14f-b958-3e343b0f967c"],
Cell[154338, 2893, 1749, 51, 76, "Output",ExpressionUUID->"e22e9ef5-3f88-f644-8fe2-7e65a4d62483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156124, 2949, 498, 12, 28, "Input",ExpressionUUID->"268a5cec-db5d-5447-9b48-af121f63354d"],
Cell[156625, 2963, 7053, 192, 146, "Output",ExpressionUUID->"77d79ce5-68ea-6b48-9db3-bd8fb385e308"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163715, 3160, 167, 3, 28, "Input",ExpressionUUID->"010c58c6-b47e-f741-931b-cb634c0a7a69"],
Cell[163885, 3165, 7377, 200, 76, "Output",ExpressionUUID->"75bd7a6b-48c2-8648-aa9c-5debfcfeec73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171299, 3370, 394, 10, 28, "Input",ExpressionUUID->"87e166ce-9d46-db4c-b067-49256f6a1c34"],
Cell[171696, 3382, 3726, 103, 108, "Output",ExpressionUUID->"e29a5622-d5e6-d843-9f8e-5cb226acb72b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175459, 3490, 167, 3, 28, "Input",ExpressionUUID->"e0db81dd-0a19-2844-b321-9195a15b2fc8"],
Cell[175629, 3495, 4064, 112, 76, "Output",ExpressionUUID->"9835ee9b-80f2-244d-8f86-39bdc861cc19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179730, 3612, 309, 6, 28, "Input",ExpressionUUID->"b785e3a9-2b95-c942-b0e0-ffd743eb9a6d"],
Cell[180042, 3620, 10182, 277, 222, "Output",ExpressionUUID->"797115f2-f0f1-3b48-bf64-59c6309c0d46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190261, 3902, 166, 3, 28, "Input",ExpressionUUID->"578f6cf8-b69e-b543-86b8-4ecb5475ed11"],
Cell[190430, 3907, 10670, 286, 76, "Output",ExpressionUUID->"287c3971-cf54-084a-9fcf-0a8de53b6004"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201137, 4198, 352, 7, 28, "Input",ExpressionUUID->"9afa87e2-81b5-d447-9d55-f3fe29610bb6"],
Cell[201492, 4207, 3160, 88, 89, "Output",ExpressionUUID->"85556dd2-da52-c842-95ca-c9c00ef6eed3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204689, 4300, 233, 4, 28, "Input",ExpressionUUID->"c751d09c-a067-ee4b-b058-1dda7daedb0a"],
Cell[204925, 4306, 3558, 98, 76, "Output",ExpressionUUID->"0cb46e7f-11fb-5e42-8a1b-71b844993a78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208520, 4409, 467, 10, 28, "Input",ExpressionUUID->"1d19ca98-bd6a-f145-9cd4-e829dea7a068"],
Cell[208990, 4421, 461, 12, 32, "Output",ExpressionUUID->"ccdf1fce-e25b-dc44-bc7e-517b60b35401"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209488, 4438, 403, 11, 28, "Input",ExpressionUUID->"65e1ee24-3bc5-1f45-a09c-687b8df5d368"],
Cell[209894, 4451, 674, 20, 76, "Output",ExpressionUUID->"db8ee486-816e-0a4a-8266-c45cdb6b9e93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210605, 4476, 442, 9, 28, "Input",ExpressionUUID->"671ec3e9-854d-6f44-950f-985d8e9549f5"],
Cell[211050, 4487, 3686, 104, 76, "Output",ExpressionUUID->"ac11576a-2c27-1840-bf11-4c797c64077a"]
}, Open  ]],
Cell[214751, 4594, 149, 2, 28, "Input",ExpressionUUID->"393399c9-573a-4696-99b5-3016953f9b5f"],
Cell[CellGroupData[{
Cell[214925, 4600, 10376, 175, 82, "Input",ExpressionUUID->"cdbafdb8-810f-43a6-9a57-f2f75c5439b3"],
Cell[225304, 4777, 10292, 173, 86, "Output",ExpressionUUID->"d1484f64-b0d2-8545-a53e-93bc0e9b2473"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235657, 4957, 319, 5, 62, "Chapter",ExpressionUUID->"2c711747-9326-4c81-9f82-0ffa3a72bdc6"],
Cell[CellGroupData[{
Cell[236001, 4966, 728, 15, 67, "Code",ExpressionUUID->"7168dfb2-90fd-48aa-b5bb-7db444c83b95"],
Cell[236732, 4983, 1797, 47, 51, "Output",ExpressionUUID->"6f389c7e-d023-124d-9375-771a0dcbbdc9"]
}, Open  ]],
Cell[238544, 5033, 1042, 31, 66, "Input",ExpressionUUID->"915cf33f-9e20-094f-bc2d-189a35462a57"],
Cell[CellGroupData[{
Cell[239611, 5068, 467, 12, 43, "Input",ExpressionUUID->"00baf393-2e20-5247-bd88-8ad4993a98cf"],
Cell[240081, 5082, 743, 22, 45, "Output",ExpressionUUID->"547a6986-1016-f241-a7ca-361c23064b1e"]
}, Open  ]],
Cell[240839, 5107, 854, 24, 43, "Input",ExpressionUUID->"27eb2146-e28d-e24e-b336-fcc17e3a82ed"],
Cell[CellGroupData[{
Cell[241718, 5135, 521, 12, 28, "Input",ExpressionUUID->"a3f11813-2868-a045-b492-eed48c59938e"],
Cell[242242, 5149, 845, 26, 32, "Output",ExpressionUUID->"b728d89b-90f5-044d-902c-9810a35511b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243124, 5180, 1568, 38, 28, "Input",ExpressionUUID->"ba30c0d2-52bf-e542-87d1-3e2d90674dea"],
Cell[244695, 5220, 901, 26, 46, "Output",ExpressionUUID->"2c3dfd4c-17f7-c441-9a5c-be8b62a44ff8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245633, 5251, 1236, 34, 28, "Input",ExpressionUUID->"9ab80ac6-b913-2348-924e-5fc825fe31c5"],
Cell[246872, 5287, 954, 27, 46, "Output",ExpressionUUID->"ec685603-e40f-d345-a9f1-233b87f6b1ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247863, 5319, 862, 24, 28, "Input",ExpressionUUID->"0aa20bef-e06a-1242-a835-61bbd66c5f46"],
Cell[248728, 5345, 593, 18, 46, "Output",ExpressionUUID->"65f1990e-6ac9-c846-8b00-c1a22263dd37"]
}, Open  ]],
Cell[249336, 5366, 7358, 204, 475, "Text",ExpressionUUID->"6f70997f-58c7-48d7-a2e0-3bbece8d9250"],
Cell[CellGroupData[{
Cell[256719, 5574, 242, 4, 62, "Section",ExpressionUUID->"213f8d8b-58bc-4378-8211-dc5cfbe7db8a"],
Cell[256964, 5580, 411, 6, 31, "Text",ExpressionUUID->"29abd8be-7767-4c5c-8920-8f4435cc8eda"],
Cell[257378, 5588, 163, 3, 32, "Output",ExpressionUUID->"d38ba872-8cf0-4998-b97b-05bb30b2385d"],
Cell[257544, 5593, 53444, 943, 891, "Text",ExpressionUUID->"92198bab-e530-42a2-803c-49a6670a4c5a"],
Cell[CellGroupData[{
Cell[311013, 6540, 195, 3, 53, "Subsection",ExpressionUUID->"5e776090-f5bd-4761-9457-b1664facf8e5"],
Cell[311211, 6545, 1629, 45, 47, "Input",ExpressionUUID->"633e8a5f-8314-4dd3-868a-8b8ec6602b12"],
Cell[312843, 6592, 1714, 47, 47, "Input",ExpressionUUID->"d464a00a-c726-432a-9042-e33f23720164"],
Cell[314560, 6641, 529, 15, 29, "Input",ExpressionUUID->"b040d8b1-0f71-4b38-b78e-ae8cc641ccaa"],
Cell[CellGroupData[{
Cell[315114, 6660, 675, 14, 43, "Input",ExpressionUUID->"50696463-e322-4f91-86c9-6efa3a6921ae"],
Cell[315792, 6676, 2197, 62, 74, "Output",ExpressionUUID->"75d2af8b-9a6d-4c4e-a440-2dd305ed0610"]
}, Open  ]],
Cell[318004, 6741, 167, 3, 28, "Input",ExpressionUUID->"d5d41cbc-ca33-4bf0-b2dc-2037182d2dba"],
Cell[CellGroupData[{
Cell[318196, 6748, 2780, 74, 100, "Input",ExpressionUUID->"a79ea0cc-502e-40bd-983d-0de2bc24d4b4"],
Cell[320979, 6824, 16316, 427, 265, "Output",ExpressionUUID->"de54a3a6-d808-c547-af16-c9f617e4c80c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337332, 7256, 2528, 70, 100, "Input",ExpressionUUID->"bb3ac104-57cd-4ac2-b53e-55b1bcc12cfa"],
Cell[339863, 7328, 15618, 418, 265, "Output",ExpressionUUID->"fa322f0f-16df-4538-ae24-2b6e82291a4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355518, 7751, 44530, 743, 219, "Input",ExpressionUUID->"bed26bcc-4474-4857-963b-6318769856d7"],
Cell[400051, 8496, 8616, 146, 56, "Output",ExpressionUUID->"10e298df-56f2-4164-8bbf-40bb1e684f6e"],
Cell[408670, 8644, 15156, 252, 60, "Output",ExpressionUUID->"400924c2-98a1-4800-adf2-bca93384b170"],
Cell[423829, 8898, 20875, 345, 88, "Output",ExpressionUUID->"72a93c5a-14d1-4da3-b235-805770116f52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444741, 9248, 7826, 208, 483, "Input",ExpressionUUID->"55ccdd38-d3a6-4915-af4c-0078082e8da7"],
Cell[452570, 9458, 804, 19, 32, "Output",ExpressionUUID->"34cab7ad-f25a-4b5a-84ad-dbb827c343d5"],
Cell[453377, 9479, 2103, 58, 53, "Output",ExpressionUUID->"b223469d-deb4-40aa-8630-8ec02c4bf5bb"],
Cell[455483, 9539, 1366, 37, 34, "Output",ExpressionUUID->"25a21a22-8ec8-4ae9-b6ac-5f82148de934"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456886, 9581, 56279, 934, 200, "Input",ExpressionUUID->"475b6d4f-72c8-43c1-8f5f-311108908e6f"],
Cell[513168, 10517, 27789, 460, 76, "Output",ExpressionUUID->"c790a293-c77c-4fd7-b5bd-443c46f195a4"],
Cell[540960, 10979, 23737, 392, 83, "Output",ExpressionUUID->"83256ba0-7c4a-42de-b531-b71ac6f0cf28"],
Cell[564700, 11373, 4899, 83, 51, "Output",ExpressionUUID->"6dd464aa-fed0-47b1-a07c-c83eaa0b351d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569636, 11461, 7703, 205, 425, "Input",ExpressionUUID->"a2208245-c9b3-4f2c-b0a1-1b091ac74a51"],
Cell[577342, 11668, 1716, 45, 33, "Output",ExpressionUUID->"f8aba8eb-0464-4368-81f3-602c4b9f3d6e"],
Cell[579061, 11715, 510, 7, 32, "Output",ExpressionUUID->"cbdb0db3-df91-4bde-be4c-631e611eceb2"],
Cell[579574, 11724, 2074, 55, 69, "Output",ExpressionUUID->"ed1c3dff-df0e-4da5-aaa5-c238daf5a6fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581685, 11784, 13535, 227, 55, "Input",ExpressionUUID->"ee6faa11-59ed-4795-9861-c495c887afac"],
Cell[595223, 12013, 13554, 227, 59, "Output",ExpressionUUID->"98cb595d-9dd1-49a8-998a-22bd988ee7a4"]
}, Open  ]],
Cell[608792, 12243, 173, 2, 28, "Input",ExpressionUUID->"31749ec6-6e9b-4afb-8d1c-e55bbf548aa8"],
Cell[CellGroupData[{
Cell[608990, 12249, 897, 18, 66, "Input",ExpressionUUID->"5c4d4a4b-5761-49b4-b747-c29dabbe6b84"],
Cell[609890, 12269, 1092, 28, 32, "Output",ExpressionUUID->"4f5761a6-b4dc-49be-86da-9d3f5da62d82"],
Cell[610985, 12299, 7045, 193, 118, "Output",ExpressionUUID->"4811e994-9384-42b5-90c8-e6636cb49b52"],
Cell[618033, 12494, 4460, 117, 85, "Output",ExpressionUUID->"bd0ceee0-c14b-4285-853c-598a0a37cdf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622530, 12616, 35267, 583, 126, "Input",ExpressionUUID->"3668e013-01f8-4bcc-ad20-820085219227"],
Cell[657800, 13201, 35218, 581, 130, "Output",ExpressionUUID->"a817971a-ccdc-45f6-82e0-dd6a78b3dfc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[693055, 13787, 3882, 100, 163, "Input",ExpressionUUID->"1f9e9b45-bf43-42be-8960-92b3d3d04280"],
Cell[696940, 13889, 1224, 30, 49, "Output",ExpressionUUID->"fc36739b-8e04-443b-8610-2c0e046d932d"],
Cell[698167, 13921, 2857, 73, 76, "Output",ExpressionUUID->"553197b7-fbee-4911-8879-0cdbabc02ba3"],
Cell[701027, 13996, 1226, 30, 49, "Output",ExpressionUUID->"90fcd4d7-16e3-4d66-96fc-2dbfe6d985c4"],
Cell[702256, 14028, 6236, 156, 157, "Output",ExpressionUUID->"9175aaa7-fc65-463b-9ca0-5ccd7743d93b"],
Cell[708495, 14186, 3930, 105, 102, "Output",ExpressionUUID->"652c9b52-5f22-43d1-898b-d95b23d9463d"],
Cell[712428, 14293, 1228, 30, 51, "Output",ExpressionUUID->"1ded0d82-8bc9-4df5-8790-57157c2d8f70"]
}, Open  ]],
Cell[713671, 14326, 6529, 112, 64, "Input",ExpressionUUID->"83c119dc-caaf-4fd7-bd47-f978fa153f82"],
Cell[720203, 14440, 151, 3, 28, "Input",ExpressionUUID->"877cd64e-eda8-4914-8c43-95a0f4012b51"],
Cell[720357, 14445, 15533, 263, 154, "Input",ExpressionUUID->"cc9c9ee0-e421-4c65-9f5d-2f3a32908ffc"],
Cell[735893, 14710, 152, 3, 28, "Input",ExpressionUUID->"074a69d5-6271-428a-bf79-100b71c7c49f"],
Cell[736048, 14715, 152, 3, 28, "Input",ExpressionUUID->"ac42e089-0de7-49ce-9e66-6abb6263491e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[736261, 14725, 220, 3, 67, "Chapter",ExpressionUUID->"7c4c2d9d-f200-4320-8aa8-40958963effa"],
Cell[CellGroupData[{
Cell[736506, 14732, 193, 3, 53, "Subsection",ExpressionUUID->"f22881b5-87ae-4a3f-affe-3af11fc7cfb7"],
Cell[736702, 14737, 825, 22, 38, "Text",ExpressionUUID->"0349ce47-44c5-408e-b0b0-9c6360ea462f"],
Cell[737530, 14761, 875, 23, 38, "Text",ExpressionUUID->"08daca3a-19fd-43c9-975c-42ff758f4149"],
Cell[738408, 14786, 868, 20, 38, "Text",ExpressionUUID->"ab78898e-4764-4ece-b7dc-c59c7acfcdbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739313, 14811, 192, 3, 53, "Subsection",ExpressionUUID->"0aaeccda-14f3-4435-903d-22b741ccfafd"],
Cell[739508, 14816, 1107, 29, 55, "Text",ExpressionUUID->"72bb4c44-fdcf-4b44-99a9-44be7cb299fc"],
Cell[740618, 14847, 1142, 30, 55, "Text",ExpressionUUID->"54e23b2b-67ab-447d-acdf-5d091c9fa713"],
Cell[741763, 14879, 1145, 30, 57, "Text",ExpressionUUID->"328df9d3-06c0-4299-a432-40f0ad1ced4b"],
Cell[742911, 14911, 154, 3, 28, "Input",ExpressionUUID->"afe88d3f-fc76-9d49-9b7a-ace214e05a02"],
Cell[CellGroupData[{
Cell[743090, 14918, 4324, 112, 86, "Input",ExpressionUUID->"a34c27db-5e09-dc49-b560-147007489721"],
Cell[747417, 15032, 882, 24, 49, "Output",ExpressionUUID->"99f81076-9410-0b4e-96c7-ddc17cff046f"]
}, Open  ]],
Cell[748314, 15059, 130, 3, 28, "Input",ExpressionUUID->"f695149e-5e34-7c4f-ae77-b7f025735118"],
Cell[CellGroupData[{
Cell[748469, 15066, 8594, 212, 179, "Input",ExpressionUUID->"d88224e8-160d-d945-bcba-c0a6dbb0e7b4"],
Cell[757066, 15280, 936, 25, 49, "Output",ExpressionUUID->"78005cfd-9c24-4f4c-a3a0-e8f1c3814df5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758039, 15310, 6023, 151, 157, "Input",ExpressionUUID->"db1ddf12-179e-984c-a051-47896fb47dc3"],
Cell[764065, 15463, 887, 24, 51, "Output",ExpressionUUID->"54966595-ecc7-0d4c-abbe-f163b1138613"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

